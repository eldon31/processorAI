[
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:0",
    "content": "if returned_state is None or not secrets.compare_digest(returned_state, state):\nraise OAuthFlowError(f\"State parameter mismatch: {returned_state} != {state}\")\n```\nThe `secrets.compare_digest()` function provides constant-time comparison to prevent timing attacks. The state parameter is included in the authorization URL and validated when the authorization code is returned via the `callback_handler`.\n\n**Sources:** [src/mcp/client/auth.py:325](), [src/mcp/client/auth.py:349-350](), [src/mcp/client/auth.py:347-353]()\n\n### Token Security\n\nToken management includes several security measures implemented across multiple methods:\n\n- **Secure storage**: Tokens are stored through the `TokenStorage` protocol interface via `storage.set_tokens()`\n- **Automatic expiry**: Tokens are validated in `is_token_valid()` against wall-clock expiry time from `update_token_expiry()`\n- **Scope validation**: `_handle_token_response()` validates returned token scopes against requested scopes\n- **Automatic refresh**: `_refresh_token()` and `_handle_refresh_response()` automatically refresh expired tokens when possible\n- **Secure transport**: `validate_issuer_url()` ensures all token exchanges occur over HTTPS (with localhost HTTP exception for development)\n\nThe scope validation logic in `_handle_token_response()` prevents privilege escalation:\n```python\nrequested_scopes = set(self.context.client_metadata.scope.split())\nreturned_scopes = set(token_response.scope.split())\nunauthorized_scopes = returned_scopes - requested_scopes\nif unauthorized_scopes:\n    raise OAuthTokenError(f\"Server granted unauthorized scopes: {unauthorized_scopes}\")\n```\n**Sources:**\n[src/mcp/client/auth.py:398-403](.)\n,\n[src/mcp/client/auth.py:120-133](.)\n,\n[src/mcp/server/auth/routes.py:34-41](.)\n,\n[src/mcp/client/auth.py:388-409](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 0,
      "total_chunks": 54,
      "char_count": 1806,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077496"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:1",
    "content": "The SDK implements RFC 8707 resource indicators for enhanced security:\n```\ngraph TB\n    ProtocolVersion{MCP Protocol Version}\n    ProtocolVersion -->|>= 2025-06-18| IncludeResource[\"Include resource parameter\"]\n    ProtocolVersion -->|< 2025-06-18| CheckPRM[\"Check for ProtectedResourceMetadata\"]\n    CheckPRM -->|Present| IncludeResource\n    CheckPRM -->|Not Present| ExcludeResource[\"Exclude resource parameter\"]\n    \n    IncludeResource --> AuthRequest[\"Authorization Request\"]\n    IncludeResource --> TokenRequest[\"Token Exchange Request\"]\n    IncludeResource --> RefreshRequest[\"Token Refresh Request\"]\n```\nThe resource parameter helps prevent token confusion attacks by explicitly identifying the intended resource server.\n**Sources:**\n[src/mcp/client/auth.py:159-177](.)\n,\n[src/mcp/client/auth.py:377-379](.)\n,\n[src/mcp/client/auth.py:431-433](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 1,
      "total_chunks": 54,
      "char_count": 853,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077513"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:2",
    "content": "This document covers the comprehensive OAuth 2.0 authentication and authorization implementation in the MCP Python SDK. The OAuth 2.0 system provides secure authentication for both client and server components, implementing RFC 6749 (OAuth 2.0), RFC 7636 (PKCE), RFC 8414 (Authorization Server Metadata), and RFC 9728 (Protected Resource Metadata).\nFor information about client transport integration, see\n[Client Transports](#3.2)\n. For server-side transport security, see\n[Transport Security](#5.5)\n.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 2,
      "total_chunks": 54,
      "char_count": 501,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077520"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:3",
    "content": "The OAuth 2.0 system consists of client-side authentication components and server-side authorization infrastructure, supporting both acting as OAuth clients and providing OAuth authorization services.\n```\ngraph TB\n    subgraph \"Client Authentication\"\n        OAuthClientProvider[\"OAuthClientProvider<br/>(httpx.Auth)\"]\n        OAuthContext[\"OAuthContext<br/>Flow State Management\"]\n        PKCEParameters[\"PKCEParameters<br/>PKCE Generation\"]\n        TokenStorage[\"TokenStorage Protocol<br/>Persistent Token Storage\"]\n    end\n    \n    subgraph \"Shared OAuth Types\"\n        OAuthToken[\"OAuthToken<br/>RFC 6749 Token Response\"]\n        OAuthMetadata[\"OAuthMetadata<br/>RFC 8414 AS Metadata\"]\n        ProtectedResourceMetadata[\"ProtectedResourceMetadata<br/>RFC 9728 RS Metadata\"]\n        OAuthClientMetadata[\"OAuthClientMetadata<br/>RFC 7591 Client Registration\"]\n        OAuthClientInformationFull[\"OAuthClientInformationFull<br/>Complete Client Info\"]\n    end\n    \n    subgraph \"Server Authorization Routes\"\n        AuthRoutes[\"create_auth_routes()<br/>/.well-known/oauth-authorization-server\"]\n        ProtectedResourceRoutes[\"create_protected_resource_routes()<br/>/.well-known/oauth-protected-resource\"]\n        \n        subgraph \"OAuth Endpoints\"\n            AuthorizationHandler[\"/authorize<br/>AuthorizationHandler\"]\n            TokenHandler[\"/token<br/>TokenHandler\"]\n            RegistrationHandler[\"/register<br/>RegistrationHandler\"]\n            RevocationHandler[\"/revoke<br/>RevocationHandler\"]\n        end\n    end\n    \n    subgraph \"Transport Integration\"\n        StreamableHTTPClient[\"streamablehttp_client<br/>HTTP + OAuth Integration\"]\n        StreamableHTTPServer[\"StreamableHTTPServerTransport<br/>OAuth Resource Server\"]\n    end\n    \n    %% Client relationships\n    OAuthClientProvider --> OAuthContext\n    OAuthClientProvider --> TokenStorage\n    OAuthContext --> PKCEParameters\n    \n    %% Shared type usage\n    OAuthClientProvider --> OAuthToken\n    OAuthClientProvider --> OAuthMetadata\n    OAuthClientProvider --> ProtectedResourceMetadata\n    OAuthClientProvider --> OAuthClientMetadata\n    RegistrationHandler --> OAuthClientInformationFull\n    \n    %% Server relationships\n    AuthRoutes --> AuthorizationHandler\n    AuthRoutes --> TokenHandler\n    AuthRoutes --> RegistrationHandler\n    AuthRoutes --> RevocationHandler\n    \n    %% Transport integration\n    StreamableHTTPClient --> OAuthClientProvider\n    StreamableHTTPServer --> AuthRoutes\n    StreamableHTTPServer --> ProtectedResourceRoutes\n```\n**Sources:**\n[src/mcp/client/auth.py:179-552](.)\n,\n[src/mcp/shared/auth.py:1-156](.)\n,\n[src/mcp/server/auth/routes.py:68-187](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 3,
      "total_chunks": 54,
      "char_count": 2656,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077525"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:4",
    "content": "The\n```\nOAuthClientProvider\n```\nclass implements the OAuth 2.0 authorization code flow with PKCE as an httpx authentication provider, enabling automatic token management for MCP clients. The provider sets\n```\nrequires_response_body = True\n```\nto access response bodies for OAuth error handling and token processing.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 4,
      "total_chunks": 54,
      "char_count": 315,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077531"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:5",
    "content": "```\ngraph TB\n    subgraph \"OAuthClientProvider Core\"\n        Provider[OAuthClientProvider]\n        AsyncAuthFlow[\"async_auth_flow()<br/>httpx.Auth Integration\"]\n        Context[\"OAuthContext<br/>Flow State & Metadata\"]\n    end\n    \n    subgraph \"OAuth Discovery Flow\"\n        DiscoverProtectedResource[\"_discover_protected_resource()<br/>RFC 9728 Discovery\"]\n        GetDiscoveryUrls[\"_get_discovery_urls()<br/>Metadata Endpoint Fallback\"]\n        HandleOAuthMetadata[\"_handle_oauth_metadata_response()<br/>Store AS Metadata\"]\n    end\n    \n    subgraph \"Client Registration\"\n        RegisterClient[\"_register_client()<br/>Dynamic Client Registration\"]\n        HandleRegistration[\"_handle_registration_response()<br/>Store Client Credentials\"]\n    end\n    \n    subgraph \"Authorization Flow\"\n        PerformAuthorization[\"_perform_authorization()<br/>PKCE + Redirect Flow\"]\n        ExchangeToken[\"_exchange_token()<br/>Authorization Code Exchange\"]\n        RefreshToken[\"_refresh_token()<br/>Token Refresh\"]\n    end\n    \n    subgraph \"Token Management\"\n        HandleTokenResponse[\"_handle_token_response()<br/>Token Validation & Storage\"]\n        HandleRefreshResponse[\"_handle_refresh_response()<br/>Refresh Response Processing\"]\n        AddAuthHeader[\"_add_auth_header()<br/>Bearer Token Injection\"]\n    end\n    \n    %% Flow relationships\n    Provider --> AsyncAuthFlow\n    AsyncAuthFlow --> Context\n    AsyncAuthFlow --> DiscoverProtectedResource\n    AsyncAuthFlow --> GetDiscoveryUrls\n    AsyncAuthFlow --> HandleOAuthMetadata\n    AsyncAuthFlow --> RegisterClient\n    AsyncAuthFlow --> HandleRegistration\n    AsyncAuthFlow --> PerformAuthorization\n    AsyncAuthFlow --> ExchangeToken\n    AsyncAuthFlow --> RefreshToken\n    AsyncAuthFlow --> HandleTokenResponse\n    AsyncAuthFlow --> HandleRefreshResponse\n    AsyncAuthFlow --> AddAuthHeader\n```\n**Sources:**\n[src/mcp/client/auth.py:179-206](.)\n,\n[src/mcp/client/auth.py:485-551](.)\n,\n[src/mcp/client/auth.py:185](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 5,
      "total_chunks": 54,
      "char_count": 1968,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077537"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:6",
    "content": "The system implements Proof Key for Code Exchange (PKCE) as specified in RFC 7636 to enhance security for OAuth flows.\n`PKCEParameters`\n, Implementation = . , Purpose = \nCode Challenge, Generates cryptographically secure code verifier and challenge = SHA256 + Base64URL encoding. Challenge Method, Generates cryptographically secure code verifier and challenge = S256\n**Sources:**\n[src/mcp/client/auth.py:49-62](.)\n,\n[tests/client/test_auth.py:82-107](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 6,
      "total_chunks": 54,
      "char_count": 454,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077543"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:7",
    "content": "The\n```\nTokenStorage\n```\nprotocol enables persistent token management across client sessions:\n```\ngraph LR\n    subgraph \"TokenStorage Protocol\"\n        GetTokens[\"get_tokens()<br/>Retrieve Stored Tokens\"]\n        SetTokens[\"set_tokens()<br/>Persist Token Response\"]\n        GetClientInfo[\"get_client_info()<br/>Retrieve Client Credentials\"]\n        SetClientInfo[\"set_client_info()<br/>Persist Registration Info\"]\n    end\n    \n    subgraph \"Storage Operations\"\n        TokenRetrieval[\"Token Retrieval<br/>Session Initialization\"]\n        TokenPersistence[\"Token Persistence<br/>After Exchange/Refresh\"]\n        ClientRegistration[\"Client Registration<br/>Dynamic Registration Storage\"]\n    end\n    \n    GetTokens --> TokenRetrieval\n    SetTokens --> TokenPersistence\n    GetClientInfo --> ClientRegistration\n    SetClientInfo --> ClientRegistration\n```\n**Sources:**\n[src/mcp/client/auth.py:64-82](.)\n,\n[tests/client/test_auth.py:17-35](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 7,
      "total_chunks": 54,
      "char_count": 938,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077549"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:8",
    "content": "The complete OAuth 2.0 authorization code flow with PKCE is implemented as an asynchronous generator that integrates with httpx's authentication system.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 8,
      "total_chunks": 54,
      "char_count": 152,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077555"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:9",
    "content": "```\nsequenceDiagram\n    participant Client as \"MCP Client\"\n    participant Provider as \"OAuthClientProvider\"\n    participant AS as \"Authorization Server\"\n    participant RS as \"Resource Server (MCP)\"\n    \n    Note over Client,RS: Initial Request Without Auth\n    Client->>Provider: HTTP Request with MCP-Protocol-Version\n    Provider->>RS: Forward Request (No Auth Header)\n    RS-->>Provider: 401 + WWW-Authenticate Header\n    \n    Note over Provider,AS: OAuth Discovery Phase\n    Provider->>RS: GET /.well-known/oauth-protected-resource\n    RS-->>Provider: ProtectedResourceMetadata (RFC 9728)\n    Provider->>AS: GET /.well-known/oauth-authorization-server\n    AS-->>Provider: OAuthMetadata (RFC 8414)\n    \n    Note over Provider,AS: Client Registration (If Needed)\n    Provider->>AS: POST /register (Dynamic Client Registration)\n    AS-->>Provider: Client Credentials + Metadata\n    \n    Note over Provider,AS: Authorization Flow with RFC 8707\n    Provider->>Provider: Generate PKCE Parameters\n    Provider->>Client: Redirect to /authorize?code_challenge=...&resource=...\n    Client->>AS: User Authorization\n    AS-->>Client: Redirect with Authorization Code\n    Client->>Provider: Authorization Code + State\n    \n    Note over Provider,AS: Token Exchange with Resource Parameter\n    Provider->>AS: POST /token (code + code_verifier + resource)\n    AS-->>Provider: Access Token + Refresh Token\n    Provider->>Provider: Store Tokens via TokenStorage\n    \n    Note over Client,RS: Authenticated Request\n    Provider->>RS: Original Request + Authorization Header\n    RS-->>Provider: Success Response\n    Provider-->>Client: Success Response\n```\n**Sources:**\n[src/mcp/client/auth.py:485-551](.)\n,\n[tests/client/test_auth.py:616-714](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 9,
      "total_chunks": 54,
      "char_count": 1733,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077561"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:10",
    "content": "The client implements comprehensive discovery mechanisms with fallback support for legacy servers. The\n```\n_get_discovery_urls()\n```\nmethod generates an ordered list of discovery URLs:\n```\n/.well-known/oauth-protected-resource\n```\n```\n_discover_protected_resource()\n```\n```\n/.well-known/oauth-authorization-server{path}\n```\n```\n_get_discovery_urls()\n```\n```\n/.well-known/oauth-authorization-server\n```\n```\n/.well-known/openid-configuration{path}\n```\n```\n{server}/.well-known/openid-configuration\n```\nProtected Resource, Endpoint Pattern = . Protected Resource, RFC Reference = . Protected Resource, Implementation = \nThe discovery process includes protocol version header injection (\n```\nMCP_PROTOCOL_VERSION\n```\n) and WWW-Authenticate header parsing for enhanced resource metadata discovery.\n**Sources:**\n[src/mcp/client/auth.py:254-279](.)\n,\n[src/mcp/client/auth.py:231-240](.)\n,\n[src/mcp/client/auth.py:474-475](.)\n,\n[tests/client/test_auth.py:252-261](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 10,
      "total_chunks": 54,
      "char_count": 958,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077567"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:11",
    "content": "The server-side OAuth implementation provides a complete authorization server that can issue tokens for MCP resources.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 11,
      "total_chunks": 54,
      "char_count": 118,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077572"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:12",
    "content": "```\ngraph TB\n    subgraph \"OAuth Authorization Server\"\n        CreateAuthRoutes[\"create_auth_routes()<br/>Route Factory\"]\n        ValidateIssuer[\"validate_issuer_url()<br/>RFC 8414 Validation\"]\n        BuildMetadata[\"build_metadata()<br/>AS Metadata Generation\"]\n    end\n    \n    subgraph \"Core Endpoints\"\n        MetadataEndpoint[\"/.well-known/oauth-authorization-server<br/>MetadataHandler\"]\n        AuthorizeEndpoint[\"/authorize<br/>AuthorizationHandler\"]\n        TokenEndpoint[\"/token<br/>TokenHandler + ClientAuthenticator\"]\n    end\n    \n    subgraph \"Optional Endpoints\"\n        RegisterEndpoint[\"/register<br/>RegistrationHandler\"]\n        RevokeEndpoint[\"/revoke<br/>RevocationHandler\"]\n    end\n    \n    subgraph \"Protected Resource Support\"\n        CreateProtectedResourceRoutes[\"create_protected_resource_routes()<br/>RFC 9728 Support\"]\n        ProtectedResourceEndpoint[\"/.well-known/oauth-protected-resource<br/>ProtectedResourceMetadataHandler\"]\n    end\n    \n    CreateAuthRoutes --> ValidateIssuer\n    CreateAuthRoutes --> BuildMetadata\n    CreateAuthRoutes --> MetadataEndpoint\n    CreateAuthRoutes --> AuthorizeEndpoint\n    CreateAuthRoutes --> TokenEndpoint\n    CreateAuthRoutes --> RegisterEndpoint\n    CreateAuthRoutes --> RevokeEndpoint\n    \n    CreateProtectedResourceRoutes --> ProtectedResourceEndpoint\n```\n**Sources:**\n[src/mcp/server/auth/routes.py:68-147](.)\n,\n[src/mcp/server/auth/routes.py:189-227](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 12,
      "total_chunks": 54,
      "char_count": 1429,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077578"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:13",
    "content": "The\n```\nRegistrationHandler\n```\nimplements RFC 7591 Dynamic Client Registration:\n```\nOAuthClientMetadata\n```\n```\ninvalid_client_metadata\n```\n```\nClientRegistrationOptions.valid_scopes\n```\n```\ninvalid_client_metadata\n```\n```\n[\"authorization_code\", \"refresh_token\"]\n```\n```\ninvalid_client_metadata\n```\n```\nsecrets.token_hex(32)\n```\nMetadata Validation, Implementation = . Metadata Validation, Error Response = \n**Sources:**\n[src/mcp/server/auth/handlers/register.py:34-120](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 13,
      "total_chunks": 54,
      "char_count": 474,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077584"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:14",
    "content": "The OAuth system provides comprehensive token lifecycle management including validation, refresh, and expiration handling.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 14,
      "total_chunks": 54,
      "char_count": 122,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077589"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:15",
    "content": "```\ngraph LR\n    subgraph \"OAuthToken (RFC 6749)\"\n        AccessToken[\"access_token: str<br/>Bearer Token\"]\n        TokenType[\"token_type: 'Bearer'<br/>Normalized to Title Case\"]\n        ExpiresIn[\"expires_in: int | None<br/>Token Lifetime (seconds)\"]\n        Scope[\"scope: str | None<br/>Granted Scopes\"]\n        RefreshToken[\"refresh_token: str | None<br/>Refresh Capability\"]\n    end\n    \n    subgraph \"Validation Logic\"\n        TokenTypeValidation[\"normalize_token_type()<br/>RFC 6750 Compliance\"]\n        ExpiryCalculation[\"update_token_expiry()<br/>Current Time + expires_in\"]\n        ScopeValidation[\"Scope Subset Validation<br/>Prevent Scope Escalation\"]\n    end\n    \n    AccessToken --> TokenTypeValidation\n    ExpiresIn --> ExpiryCalculation\n    Scope --> ScopeValidation\n```\n**Sources:**\n[src/mcp/shared/auth.py:6-25](.)\n,\n[src/mcp/client/auth.py:120-142](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 15,
      "total_chunks": 54,
      "char_count": 869,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077595"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:16",
    "content": "The client automatically refreshes expired tokens using stored refresh tokens and includes RFC 8707 resource parameter support:\nToken Valid, Action = Use existing token. Token Valid, Fallback = N/A. Token Valid, Resource Parameter = N/A. Token Expired + Refresh Available, Action = Automatic refresh. Token Expired + Refresh Available, Fallback = Full re-authorization on failure. Token Expired + Refresh Available, Resource Parameter = Included if PRM exists or protocol ≥ 2025-06-18. Token Expired + No Refresh, Action = Full OAuth flow. Token Expired + No Refresh, Fallback = N/A. Token Expired + No Refresh, Resource Parameter = Included in authorization/token requests. Refresh Fails, Action = Clear stored tokens. Refresh Fails, Fallback = Full OAuth flow. Refresh Fails, Resource Parameter = N/A\nThe\n```\nshould_include_resource_param()\n```\nmethod determines when to include the resource parameter based on:\n- Presence of Protected Resource Metadata (always include)\n- MCP-Protocol-Version ≥ 2025-06-18 (include for newer protocols)\n**Sources:**\n[src/mcp/client/auth.py:411-462](.)\n,\n[src/mcp/client/auth.py:159-176](.)\n,\n[src/mcp/client/auth.py:431-433](.)\n,\n[tests/client/test_auth.py:443-465](.)\n,\n[tests/client/test_auth.py:471-525](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 16,
      "total_chunks": 54,
      "char_count": 1245,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077600"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:17",
    "content": "The OAuth implementation supports comprehensive metadata discovery for both authorization servers and protected resources.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 17,
      "total_chunks": 54,
      "char_count": 122,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077606"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:18",
    "content": "The\n```\nOAuthMetadata\n```\nmodel implements RFC 8414 Authorization Server Metadata:\n```\ngraph TB\n    subgraph \"Required Metadata (RFC 8414)\"\n        Issuer[\"issuer: AnyHttpUrl<br/>AS Identifier\"]\n        AuthEndpoint[\"authorization_endpoint: AnyHttpUrl<br/>User Authorization\"]\n        TokenEndpoint[\"token_endpoint: AnyHttpUrl<br/>Token Exchange\"]\n    end\n    \n    subgraph \"Optional Metadata\"\n        RegistrationEndpoint[\"registration_endpoint: AnyHttpUrl<br/>Dynamic Client Registration\"]\n        ScopesSupported[\"scopes_supported: list[str]<br/>Available Scopes\"]\n        GrantTypesSupported[\"grant_types_supported: list[str]<br/>Supported Grant Types\"]\n        RevocationEndpoint[\"revocation_endpoint: AnyHttpUrl<br/>Token Revocation\"]\n    end\n    \n    subgraph \"MCP-Specific Extensions\"\n        CodeChallengeSupported[\"code_challenge_methods_supported<br/>['S256'] - PKCE Required\"]\n        ServiceDocumentation[\"service_documentation: AnyHttpUrl<br/>API Documentation\"]\n    end\n```\n**Sources:**\n[src/mcp/shared/auth.py:105-132](.)\n,\n[src/mcp/server/auth/routes.py:149-186](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 18,
      "total_chunks": 54,
      "char_count": 1082,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077611"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:19",
    "content": "RFC 9728 Protected Resource Metadata enables resource servers to advertise their authorization requirements:\n```\nresource\n```\n```\nauthorization_servers\n```\n```\nscopes_supported\n```\n```\nbearer_methods_supported\n```\n```\n[\"header\"]\n```\n```\n[\"header\"]\n```\n```\nresource_name\n```\n```\nresource_documentation\n```\n, Purpose = . , MCP Implementation = . , Default Value = \n**Sources:**\n[src/mcp/shared/auth.py:134-156](.)\n,\n[src/mcp/server/auth/routes.py:189-227](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 19,
      "total_chunks": 54,
      "char_count": 456,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077617"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:20",
    "content": "The OAuth 2.0 implementation includes comprehensive security measures following current best practices.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 20,
      "total_chunks": 54,
      "char_count": 103,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077622"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:21",
    "content": "```\ngraph LR\n    subgraph \"URL Security Validation\"\n        HTTPSRequired[\"HTTPS Required<br/>(except localhost)\"]\n        NoFragments[\"No URL Fragments<br/>Prevent Token Leakage\"]\n        NoQueryParams[\"No Query Parameters<br/>Clean Issuer URLs\"]\n    end\n    \n    subgraph \"PKCE Security\"\n        SecureVerifier[\"128-character Verifier<br/>Cryptographically Secure\"]\n        SHA256Challenge[\"SHA256 Challenge<br/>S256 Method Required\"]\n        StateValidation[\"State Parameter<br/>CSRF Protection\"]\n    end\n    \n    subgraph \"Token Security\"\n        BearerOnly[\"Bearer Tokens Only<br/>RFC 6750 Compliance\"]\n        ScopeValidation[\"Scope Validation<br/>Prevent Escalation\"]\n        SecureStorage[\"TokenStorage Protocol<br/>Persistent Security\"]\n    end\n```\n**Sources:**\n[src/mcp/server/auth/routes.py:23-47](.)\n,\n[src/mcp/client/auth.py:49-61](.)\n,\n[src/mcp/client/auth.py:347-353](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 21,
      "total_chunks": 54,
      "char_count": 885,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077628"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:22",
    "content": "The client implements RFC 9728 WWW-Authenticate header parsing for enhanced discovery:\n```\nresource_metadata=\"URL\"\n```\n```\nBearer resource_metadata=\"https://api.example.com/.well-known/oauth-protected-resource\"\n```\n```\nresource_metadata=URL\n```\n```\nBearer resource_metadata=https://api.example.com/.well-known/oauth-protected-resource\n```\n```\nBearer realm=\"api\", resource_metadata=\"URL\", error=\"insufficient_scope\"\n```\nQuoted URL, Extraction Pattern = . Quoted URL, Example = \n**Sources:**\n[src/mcp/client/auth.py:207-229](.)\n,\n[tests/client/test_auth.py:844-906](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 22,
      "total_chunks": 54,
      "char_count": 566,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077633"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:23",
    "content": "The MCP Python SDK includes a comprehensive command-line interface (CLI) that streamlines the development workflow for MCP servers. The CLI provides commands for running servers, integrating with development tools, and deploying to client applications like Claude Desktop.\nFor information about the underlying server frameworks, see\n[FastMCP Server Framework](#2)\n. For details about transport implementations, see\n[Transport Layer](#5)\n.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 23,
      "total_chunks": 54,
      "char_count": 438,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077638"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:24",
    "content": "The MCP CLI is built using the\n```\ntyper\n```\nlibrary and provides a unified interface for server development and deployment operations. The system consists of two main modules: the core CLI implementation and Claude Desktop integration utilities.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 24,
      "total_chunks": 54,
      "char_count": 246,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077644"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:25",
    "content": "```\ngraph TB\n    subgraph \"CLI Entry Point\"\n        app[\"typer.Typer()\"]\n    end\n    \n    subgraph \"Core Commands\"\n        version_cmd[\"version()\"]\n        dev_cmd[\"dev()\"]\n        run_cmd[\"run()\"]\n        install_cmd[\"install()\"]\n    end\n    \n    subgraph \"Helper Functions\"\n        parse_file[\"_parse_file_path()\"]\n        import_server[\"_import_server()\"]\n        build_uv[\"_build_uv_command()\"]\n        parse_env[\"_parse_env_var()\"]\n    end\n    \n    subgraph \"Claude Integration\"\n        claude_config[\"claude.update_claude_config()\"]\n        claude_path[\"claude.get_claude_config_path()\"]\n        uv_path[\"claude.get_uv_path()\"]\n    end\n    \n    subgraph \"External Tools\"\n        uv_runner[\"uv run\"]\n        npx_inspector[\"npx @modelcontextprotocol/inspector\"]\n        fastmcp_server[\"FastMCP server instance\"]\n    end\n    \n    app --> version_cmd\n    app --> dev_cmd\n    app --> run_cmd\n    app --> install_cmd\n    \n    dev_cmd --> parse_file\n    dev_cmd --> import_server\n    dev_cmd --> build_uv\n    dev_cmd --> npx_inspector\n    \n    run_cmd --> parse_file\n    run_cmd --> import_server\n    run_cmd --> fastmcp_server\n    \n    install_cmd --> parse_file\n    install_cmd --> import_server\n    install_cmd --> parse_env\n    install_cmd --> claude_config\n    \n    claude_config --> claude_path\n    claude_config --> uv_path\n    \n    style app fill:#f9f9f9\n    style fastmcp_server fill:#e8f5e8\n```\n**Sources:**\n[src/mcp/cli/cli.py:34-39](.)\n,\n[src/mcp/cli/cli.py:211-488](.)\n,\n[src/mcp/cli/claude.py:44-148](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 25,
      "total_chunks": 54,
      "char_count": 1516,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077650"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:26",
    "content": "The CLI includes sophisticated server discovery and import mechanisms that handle various server specification formats and automatically resolve FastMCP server instances.\n```\ngraph TB\n    subgraph \"Server Resolution Process\"\n        file_spec[\"File Specification Input\"]\n        parse_path[\"_parse_file_path()\"]\n        import_mod[\"_import_server()\"]\n        check_obj[\"_check_server_object()\"]\n    end\n    \n    subgraph \"File Parsing\"\n        path_resolve[\"Path.resolve()\"]\n        object_split[\"file:object syntax parsing\"]\n        windows_drive[\"Windows drive letter handling\"]\n    end\n    \n    subgraph \"Module Import\"\n        spec_loader[\"importlib.util.spec_from_file_location()\"]\n        module_exec[\"spec.loader.exec_module()\"]\n        sys_path[\"sys.path.insert()\"]\n    end\n    \n    subgraph \"Server Discovery\"\n        auto_names[\"Auto-discovery: 'mcp', 'server', 'app'\"]\n        explicit_obj[\"Explicit object specification\"]\n        module_obj[\"module:object syntax\"]\n    end\n    \n    subgraph \"Validation\"\n        fastmcp_check[\"isinstance(server, FastMCP)\"]\n        lowlevel_warn[\"LowLevelServer warning\"]\n    end\n    \n    file_spec --> parse_path\n    parse_path --> path_resolve\n    parse_path --> object_split\n    parse_path --> windows_drive\n    \n    parse_path --> import_mod\n    import_mod --> spec_loader\n    import_mod --> module_exec\n    import_mod --> sys_path\n    \n    import_mod --> auto_names\n    import_mod --> explicit_obj\n    import_mod --> module_obj\n    \n    import_mod --> check_obj\n    check_obj --> fastmcp_check\n    check_obj --> lowlevel_warn\n    \n    style fastmcp_check fill:#e8f5e8\n    style lowlevel_warn fill:#fff3e0\n```\n**Sources:**\n[src/mcp/cli/cli.py:88-116](.)\n,\n[src/mcp/cli/cli.py:119-208](.)\n,\n[src/mcp/cli/cli.py:143-159](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 26,
      "total_chunks": 54,
      "char_count": 1770,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077655"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:27",
    "content": "The\n```\nversion\n```\ncommand displays the currently installed MCP package version using Python's metadata system.\n```\n# Usage: mcp version\n# Implementation: cli.py:212-219\n```\n**Sources:**\n[src/mcp/cli/cli.py:212-219](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 27,
      "total_chunks": 54,
      "char_count": 219,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077661"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:28",
    "content": "The\n```\ndev\n```\ncommand runs an MCP server with the MCP Inspector for interactive development and testing. It automatically manages dependencies using\n```\nuv\n```\nand launches the Node.js-based inspector tool.\n```\ngraph TB\n    subgraph \"mcp dev Command Flow\"\n        dev_input[\"mcp dev server.py:app\"]\n        parse_args[\"Parse file_spec and options\"]\n        import_server[\"Import FastMCP server\"]\n        get_deps[\"Extract server.dependencies\"]\n        build_cmd[\"_build_uv_command()\"]\n        npx_cmd[\"_get_npx_command()\"]\n        run_inspector[\"subprocess.run(npx + uv_cmd)\"]\n    end\n    \n    subgraph \"Dependency Management\"\n        with_editable[\"--with-editable option\"]\n        with_packages[\"--with packages\"]\n        server_deps[\"server.dependencies\"]\n        uv_run[\"uv run --with mcp[cli]\"]\n    end\n    \n    subgraph \"Inspector Integration\"\n        npx_check[\"Platform-specific npx detection\"]\n        inspector_pkg[\"@modelcontextprotocol/inspector\"]\n        shell_handling[\"Windows shell=True handling\"]\n    end\n    \n    dev_input --> parse_args\n    parse_args --> import_server\n    import_server --> get_deps\n    \n    with_editable --> build_cmd\n    with_packages --> build_cmd\n    server_deps --> build_cmd\n    \n    build_cmd --> uv_run\n    npx_cmd --> npx_check\n    npx_check --> inspector_pkg\n    \n    run_inspector --> shell_handling\n    \n    style import_server fill:#e8f5e8\n    style inspector_pkg fill:#f3e5f5\n```\n**Sources:**\n[src/mcp/cli/cli.py:222-303](.)\n,\n[src/mcp/cli/cli.py:42-53](.)\n,\n[src/mcp/cli/cli.py:65-85](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 28,
      "total_chunks": 54,
      "char_count": 1542,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077666"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:29",
    "content": "The\n```\nrun\n```\ncommand executes an MCP server directly without additional tooling. It supports transport specification and runs the server using the FastMCP framework.\nKey features:\n- Direct server execution without dependency management\n- Transport protocol selection ( `stdio` or `sse` )\n- Server object import and validation\n**Sources:**\n[src/mcp/cli/cli.py:305-359](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 29,
      "total_chunks": 54,
      "char_count": 373,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077672"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:30",
    "content": "The\n```\ninstall\n```\ncommand configures MCP servers for use with Claude Desktop by updating the application's configuration file. It handles dependency specification, environment variable management, and cross-platform config file locations.\n```\ngraph TB\n    subgraph \"mcp install Command Process\"\n        install_input[\"mcp install server.py:app --name myserver\"]\n        parse_install[\"Parse arguments and options\"]\n        claude_check[\"claude.get_claude_config_path()\"]\n        import_optional[\"Optional server import for name/deps\"]\n        env_processing[\"Process --env-var and --env-file\"]\n        update_config[\"claude.update_claude_config()\"]\n    end\n    \n    subgraph \"Environment Variable Handling\"\n        env_vars[\"--env-var KEY=VALUE\"]\n        env_file[\"--env-file .env\"]\n        dotenv_load[\"dotenv.dotenv_values()\"]\n        env_merge[\"Merge with existing env vars\"]\n    end\n    \n    subgraph \"Claude Config Update\"\n        config_path[\"Platform-specific config path\"]\n        json_read[\"Read claude_desktop_config.json\"]\n        server_entry[\"Create mcpServers entry\"]\n        uv_command[\"Generate uv run command\"]\n        json_write[\"Write updated config\"]\n    end\n    \n    install_input --> parse_install\n    parse_install --> claude_check\n    parse_install --> import_optional\n    parse_install --> env_processing\n    \n    env_processing --> env_vars\n    env_processing --> env_file\n    env_file --> dotenv_load\n    env_processing --> env_merge\n    \n    update_config --> config_path\n    update_config --> json_read\n    update_config --> server_entry\n    update_config --> uv_command\n    update_config --> json_write\n    \n    style claude_check fill:#fff3e0\n    style uv_command fill:#e8f5e8\n```\n**Sources:**\n[src/mcp/cli/cli.py:362-488](.)\n,\n[src/mcp/cli/cli.py:456-476](.)\n,\n[src/mcp/cli/claude.py:44-148](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 30,
      "total_chunks": 54,
      "char_count": 1828,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077677"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:31",
    "content": "The Claude integration module provides platform-aware configuration management for installing MCP servers into the Claude Desktop application.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 31,
      "total_chunks": 54,
      "char_count": 142,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077682"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:32",
    "content": "The system detects Claude Desktop configuration directories across different platforms:\n```\n%APPDATA%\\Claude\n```\n```\n~/Library/Application Support/Claude\n```\n```\n$XDG_CONFIG_HOME/Claude\n```\nor\n```\n~/.config/Claude\n```\nWindows, Configuration Path = \n**Sources:**\n[src/mcp/cli/claude.py:17-30](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 32,
      "total_chunks": 54,
      "char_count": 294,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077692"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:33",
    "content": "The\n```\nupdate_claude_config()\n```\nfunction manages the\n```\nclaude_desktop_config.json\n```\nfile, handling:\n- Server entry creation and updates\n- Environment variable preservation and merging\n- Absolute path resolution for server files\n- UV command generation with dependency specifications\n```\ngraph TB\n    subgraph \"Claude Config Structure\"\n        config_root[\"claude_desktop_config.json\"]\n        mcp_servers[\"mcpServers object\"]\n        server_entry[\"Server configuration entry\"]\n    end\n    \n    subgraph \"Server Entry Components\"\n        command_field[\"command: uv executable path\"]\n        args_field[\"args: [run, --with, mcp, run, server.py:app]\"]\n        env_field[\"env: environment variables\"]\n    end\n    \n    subgraph \"UV Command Generation\"\n        uv_path[\"get_uv_path()\"]\n        mcp_package[\"--with mcp[cli]\"]\n        additional_packages[\"--with package1 --with package2\"]\n        editable_install[\"--with-editable /path/to/project\"]\n        mcp_run[\"mcp run server.py:app\"]\n    end\n    \n    config_root --> mcp_servers\n    mcp_servers --> server_entry\n    \n    server_entry --> command_field\n    server_entry --> args_field\n    server_entry --> env_field\n    \n    command_field --> uv_path\n    args_field --> mcp_package\n    args_field --> additional_packages\n    args_field --> editable_install\n    args_field --> mcp_run\n    \n    style server_entry fill:#e8f5e8\n    style mcp_run fill:#f3e5f5\n```\n**Sources:**\n[src/mcp/cli/claude.py:44-148](.)\n,\n[src/mcp/cli/claude.py:101-125](.)\n,\n[src/mcp/cli/claude.py:33-41](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 33,
      "total_chunks": 54,
      "char_count": 1534,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077698"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:34",
    "content": "The CLI system integrates with the broader MCP development ecosystem through several key mechanisms:",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 34,
      "total_chunks": 54,
      "char_count": 100,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077703"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:35",
    "content": "All CLI commands use\n```\nuv\n```\nfor Python dependency management, ensuring reproducible environments and fast package installation. The system automatically includes the\n```\nmcp[cli]\n```\npackage and any server-specific dependencies.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 35,
      "total_chunks": 54,
      "char_count": 232,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077708"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:36",
    "content": "The CLI specifically targets FastMCP servers and includes validation to ensure compatibility. It automatically extracts server metadata including:\n- Server name for Claude Desktop registration\n- Dependency requirements for installation\n- Transport capabilities for runtime configuration",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 36,
      "total_chunks": 54,
      "char_count": 286,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077713"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:37",
    "content": "The\n```\ndev\n```\ncommand integrates with the Node.js-based MCP Inspector tool, providing a web interface for interactive server testing and debugging.\n**Sources:**\n[src/mcp/cli/cli.py:260-284](.)\n,\n[src/mcp/cli/cli.py:152-159](.)\n,\n[src/mcp/cli/cli.py:442-455](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 37,
      "total_chunks": 54,
      "char_count": 262,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077718"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:38",
    "content": "This document covers the MCP CLI commands that provide development tools for building, testing, and deploying MCP servers. The CLI facilitates server development with dependency management, debugging tools, and integration with Claude Desktop.\nFor information about the underlying FastMCP server framework that these commands operate on, see\n[FastMCP Server Framework](#2)\n. For details about Claude Desktop integration configuration, see\n[Claude Desktop Integration](#8.3)\n.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 38,
      "total_chunks": 54,
      "char_count": 475,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077723"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:39",
    "content": "The MCP CLI provides three primary commands for MCP server development and deployment:\n- `mcp dev` - Development server with MCP Inspector integration\n- `mcp run` - Direct server execution\n- `mcp install` - Claude Desktop application integration\n- `mcp version` - Version information\nAll commands support automatic dependency management through\n```\nuv\n```\nand handle both standalone Python files and package-based servers.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 39,
      "total_chunks": 54,
      "char_count": 422,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077728"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:40",
    "content": "```\ngraph TB\n    subgraph \"CLI Entry Points\"\n        cli_app[\"typer.Typer app<br/>(cli.py)\"]\n        dev_cmd[\"dev() command\"]\n        run_cmd[\"run() command\"] \n        install_cmd[\"install() command\"]\n        version_cmd[\"version() command\"]\n    end\n    \n    subgraph \"Core Functions\"\n        parse_file_path[\"_parse_file_path()<br/>Parse file:object syntax\"]\n        import_server[\"_import_server()<br/>Import FastMCP instances\"]\n        build_uv_command[\"_build_uv_command()<br/>Build uv run commands\"]\n        parse_env_var[\"_parse_env_var()<br/>Parse KEY=VALUE env vars\"]\n    end\n    \n    subgraph \"Claude Integration\"\n        update_claude_config[\"update_claude_config()<br/>(claude.py)\"]\n        get_claude_config_path[\"get_claude_config_path()<br/>Platform-specific paths\"]\n        get_uv_path[\"get_uv_path()<br/>Find uv executable\"]\n    end\n    \n    subgraph \"External Tools\"\n        npx_inspector[\"npx @modelcontextprotocol/inspector\"]\n        uv_run[\"uv run command execution\"]\n        claude_desktop[\"Claude Desktop App\"]\n    end\n    \n    cli_app --> dev_cmd\n    cli_app --> run_cmd  \n    cli_app --> install_cmd\n    cli_app --> version_cmd\n    \n    dev_cmd --> parse_file_path\n    dev_cmd --> import_server\n    dev_cmd --> build_uv_command\n    dev_cmd --> npx_inspector\n    \n    run_cmd --> parse_file_path\n    run_cmd --> import_server\n    \n    install_cmd --> parse_file_path\n    install_cmd --> import_server\n    install_cmd --> parse_env_var\n    install_cmd --> update_claude_config\n    \n    update_claude_config --> get_claude_config_path\n    update_claude_config --> get_uv_path\n    update_claude_config --> claude_desktop\n    \n    build_uv_command --> uv_run\n```\nSources:\n[src/mcp/cli/cli.py:34-39](.)\n,\n[src/mcp/cli/cli.py:42-86](.)\n,\n[src/mcp/cli/claude.py:44-148](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 40,
      "total_chunks": 54,
      "char_count": 1788,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077733"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:41",
    "content": "The\n```\nmcp dev\n```\ncommand launches the MCP Inspector for interactive server testing and debugging.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 41,
      "total_chunks": 54,
      "char_count": 100,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077739"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:42",
    "content": "```\nmcp dev <file_spec> [--with-editable PATH] [--with PACKAGE]...\n```",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 42,
      "total_chunks": 54,
      "char_count": 70,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077744"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:43",
    "content": "```\nsequenceDiagram\n    participant CLI as \"dev() command\"\n    participant Parser as \"_parse_file_path()\"\n    participant Importer as \"_import_server()\"\n    participant Builder as \"_build_uv_command()\"\n    participant NPX as \"npx inspector\"\n    participant UV as \"uv run\"\n    participant Server as \"FastMCP server\"\n    \n    CLI->>Parser: \"Parse file_spec\"\n    Parser->>CLI: \"file_path, server_object\"\n    \n    CLI->>Importer: \"Import server for dependencies\"\n    Importer->>CLI: \"FastMCP instance\"\n    \n    CLI->>Builder: \"Build uv command with packages\"\n    Builder->>CLI: \"['uv', 'run', '--with', 'mcp', 'mcp', 'run', file_spec]\"\n    \n    CLI->>NPX: \"Launch inspector with uv command\"\n    NPX->>UV: \"Execute uv run command\"\n    UV->>Server: \"Start FastMCP server\"\n    \n    Note over NPX,Server: \"Interactive debugging session\"\n```\nSources:\n[src/mcp/cli/cli.py:222-303](.)\n,\n[src/mcp/cli/cli.py:65-85](.)\n,\n[src/mcp/cli/cli.py:268-283](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 43,
      "total_chunks": 54,
      "char_count": 939,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077750"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:44",
    "content": "Dependency Detection, Implementation = src/mcp/cli/cli.py:262-264. Dependency Detection, Purpose = Automatically includes server.dependencies. NPX Integration, Implementation = src/mcp/cli/cli.py:268-283. NPX Integration, Purpose = Launches MCP Inspector for debugging. Cross-Platform, Implementation = src/mcp/cli/cli.py:42-53. Cross-Platform, Purpose = Handles Windows/Unix npx differences. Editable Install, Implementation = src/mcp/cli/cli.py:228-238. Editable Install, Purpose = Supports --with-editable for development\nSources:\n[src/mcp/cli/cli.py:222-303](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 44,
      "total_chunks": 54,
      "char_count": 565,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077755"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:45",
    "content": "The\n```\nmcp run\n```\ncommand executes MCP servers directly without dependency management.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 45,
      "total_chunks": 54,
      "char_count": 88,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077760"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:46",
    "content": "```\nmcp run <file_spec> [--transport TRANSPORT]\n```",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 46,
      "total_chunks": 54,
      "char_count": 51,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077766"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:47",
    "content": "```\ngraph TB\n    subgraph \"File Parsing\"\n        file_spec[\"file_spec input<br/>e.g., 'server.py:app'\"]\n        parse_windows[\"Windows path detection<br/>Check file_spec[1] == ':'\"]\n        split_colon[\"Split on last colon<br/>rsplit(':', 1)\"]\n        resolve_path[\"Path resolution<br/>Path.resolve()\"]\n    end\n    \n    subgraph \"Module Import\"\n        add_to_path[\"Add parent dir to sys.path\"]\n        create_spec[\"importlib.util.spec_from_file_location()\"]\n        load_module[\"spec.loader.exec_module()\"]\n        find_object[\"Find server object\"]\n    end\n    \n    subgraph \"Object Discovery\"\n        explicit_name[\"Use specified object name\"]\n        common_names[\"Try 'mcp', 'server', 'app'\"]\n        validate_type[\"Check isinstance(obj, FastMCP)\"]\n    end\n    \n    file_spec --> parse_windows\n    parse_windows --> split_colon\n    split_colon --> resolve_path\n    \n    resolve_path --> add_to_path\n    add_to_path --> create_spec\n    create_spec --> load_module\n    load_module --> find_object\n    \n    find_object --> explicit_name\n    find_object --> common_names\n    explicit_name --> validate_type\n    common_names --> validate_type\n```\nSources:\n[src/mcp/cli/cli.py:88-208](.)\n,\n[src/mcp/cli/cli.py:305-360](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 47,
      "total_chunks": 54,
      "char_count": 1219,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077771"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:48",
    "content": "The run command supports optional transport specification:\n- `stdio` - Standard input/output transport\n- `sse` - Server-Sent Events transport\n- Default: Server's configured transport\nSources:\n[src/mcp/cli/cli.py:311-318](.)\n,\n[src/mcp/cli/cli.py:346-350](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 48,
      "total_chunks": 54,
      "char_count": 257,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077776"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:49",
    "content": "The\n```\nmcp install\n```\ncommand configures MCP servers in Claude Desktop's configuration.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 49,
      "total_chunks": 54,
      "char_count": 89,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077782"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:50",
    "content": "```\nmcp install <file_spec> [--name NAME] [--with-editable PATH] [--with PACKAGE]... [--env-var KEY=VALUE]... [--env-file FILE]\n```",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 50,
      "total_chunks": 54,
      "char_count": 131,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077788"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:51",
    "content": "```\ngraph TB\n    subgraph \"Configuration Discovery\"\n        get_claude_path[\"get_claude_config_path()<br/>Platform-specific paths\"]\n        win32_path[\"Windows:<br/>AppData/Roaming/Claude\"]\n        darwin_path[\"macOS:<br/>Library/Application Support/Claude\"]\n        linux_path[\"Linux:<br/>XDG_CONFIG_HOME/Claude\"]\n    end\n    \n    subgraph \"Config File Management\"\n        config_file[\"claude_desktop_config.json\"]\n        create_if_missing[\"Create empty {} if missing\"]\n        load_json[\"json.loads(config.read_text())\"]\n        ensure_mcpServers[\"Ensure 'mcpServers' key exists\"]\n    end\n    \n    subgraph \"Server Configuration\"\n        build_uv_cmd[\"Build uv run command\"]\n        collect_packages[\"Collect --with packages\"]\n        merge_env_vars[\"Merge environment variables\"]\n        absolute_path[\"Convert file_spec to absolute\"]\n    end\n    \n    subgraph \"Final Config\"\n        server_config_obj[\"{'command': uv_path, 'args': [...], 'env': {...}}\"]\n        write_json[\"Write updated config\"]\n    end\n    \n    get_claude_path --> win32_path\n    get_claude_path --> darwin_path  \n    get_claude_path --> linux_path\n    \n    win32_path --> config_file\n    darwin_path --> config_file\n    linux_path --> config_file\n    \n    config_file --> create_if_missing\n    create_if_missing --> load_json\n    load_json --> ensure_mcpServers\n    \n    ensure_mcpServers --> build_uv_cmd\n    build_uv_cmd --> collect_packages\n    collect_packages --> merge_env_vars\n    merge_env_vars --> absolute_path\n    \n    absolute_path --> server_config_obj\n    server_config_obj --> write_json\n```\nSources:\n[src/mcp/cli/claude.py:17-31](.)\n,\n[src/mcp/cli/claude.py:44-148](.)\n,\n[src/mcp/cli/cli.py:362-489](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 51,
      "total_chunks": 54,
      "char_count": 1693,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077793"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:52",
    "content": "The install command supports flexible environment variable configuration:\n```\n--env-var KEY=VALUE\n```\n```\n--env-file path.env\n```\nCommand Line, Implementation = . Command Line, Behavior = \nSources:\n[src/mcp/cli/cli.py:394-413](.)\n,\n[src/mcp/cli/cli.py:457-477](.)",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 52,
      "total_chunks": 54,
      "char_count": 263,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077799"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:State_validation_in__perform_authorization:chunk:53",
    "content": "Simple command that displays the installed MCP package version using\n```\nimportlib.metadata\n```\n.",
    "metadata": {
      "source": "python-sdk\\State_validation_in__perform_authorization.md",
      "file_name": "State_validation_in__perform_authorization.md",
      "subfolder": "python-sdk",
      "chunk_index": 53,
      "total_chunks": 54,
      "char_count": 97,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:30.077804"
    }
  }
]