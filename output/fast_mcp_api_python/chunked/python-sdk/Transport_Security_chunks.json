[
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:0",
    "content": "This document covers the security features implemented for MCP transport layers, focusing on DNS rebinding protection and request validation middleware. The security system provides configurable protection against malicious cross-origin requests targeting locally-hosted MCP servers.\nFor information about specific transport implementations, see\n[StreamableHTTP Transport](#5.1)\n,\n[SSE Transport](#5.2)\n, and\n[WebSocket Transport](#5.4)\n. For authentication mechanisms, see\n[Authentication & Security](#7)\n.",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 0,
      "total_chunks": 19,
      "char_count": 507,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982355"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:1",
    "content": "The transport security system implements a middleware-based architecture that validates incoming HTTP requests before they reach the MCP protocol handlers. The system is designed to prevent DNS rebinding attacks while maintaining compatibility with legitimate client connections.\n```\ngraph TB\n    subgraph \"Client Request Flow\"\n        ClientReq[\"Client HTTP Request\"]\n        SecurityMW[\"TransportSecurityMiddleware\"]\n        TransportLayer[\"Transport Handler<br/>(StreamableHTTP/SSE)\"]\n        MCPServer[\"MCP Server\"]\n    end\n    \n    subgraph \"Security Validation\"\n        HostVal[\"Host Header Validation\"]\n        OriginVal[\"Origin Header Validation\"] \n        ContentTypeVal[\"Content-Type Validation\"]\n        DNSRebindCheck[\"DNS Rebinding Protection\"]\n    end\n    \n    subgraph \"Configuration\"\n        SecuritySettings[\"TransportSecuritySettings\"]\n        AllowedHosts[\"allowed_hosts[]\"]\n        AllowedOrigins[\"allowed_origins[]\"]\n        ProtectionFlag[\"enable_dns_rebinding_protection\"]\n    end\n    \n    ClientReq --> SecurityMW\n    SecurityMW --> HostVal\n    SecurityMW --> OriginVal\n    SecurityMW --> ContentTypeVal\n    HostVal --> DNSRebindCheck\n    OriginVal --> DNSRebindCheck\n    \n    SecuritySettings --> SecurityMW\n    AllowedHosts --> HostVal\n    AllowedOrigins --> OriginVal\n    ProtectionFlag --> DNSRebindCheck\n    \n    SecurityMW --> TransportLayer\n    TransportLayer --> MCPServer\n    \n    SecurityMW -.->|\"Error Response\"| ClientReq\n```\nSources:\n[src/mcp/server/transport_security.py:37-128](.)\n,\n[src/mcp/server/streamable_http_manager.py:24-68](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 1,
      "total_chunks": 19,
      "char_count": 1574,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982371"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:2",
    "content": "DNS rebinding attacks occur when malicious websites trick browsers into making requests to local servers using specially crafted DNS responses. The MCP security system prevents these attacks by validating request headers that browsers automatically include.",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 2,
      "total_chunks": 19,
      "char_count": 257,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982377"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:3",
    "content": "Malicious Host header, Validation Method = Host whitelist validation. Malicious Host header, HTTP Status = 421. Malicious Host header, Error Message = \"Invalid Host header\". Cross-origin requests, Validation Method = Origin header validation. Cross-origin requests, HTTP Status = 400. Cross-origin requests, Error Message = \"Invalid Origin header\". Wrong content type, Validation Method = Content-Type validation. Wrong content type, HTTP Status = 400. Wrong content type, Error Message = \"Invalid Content-Type header\"\n```\ngraph LR\n    subgraph \"Attack Scenario\"\n        Attacker[\"evil.com\"]\n        Browser[\"User Browser\"]\n        LocalServer[\"localhost:8080<br/>MCP Server\"]\n    end\n    \n    subgraph \"Protection Mechanism\"\n        HostHeader[\"Host: evil.com\"]\n        ValidationFail[\"Host Validation Fails\"]\n        Block[\"Request Blocked<br/>Status 421\"]\n    end\n    \n    Attacker -->|\"DNS Rebinding\"| Browser\n    Browser -->|\"HTTP Request\"| HostHeader\n    HostHeader --> ValidationFail\n    ValidationFail --> Block\n    Block -.->|\"Blocked\"| LocalServer\n```\nSources:\n[src/mcp/server/transport_security.py:45-66](.)\n,\n[tests/server/test_streamable_http_security.py:110-136](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 3,
      "total_chunks": 19,
      "char_count": 1179,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982383"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:4",
    "content": "The\n```\nTransportSecuritySettings\n```\nclass provides flexible configuration for security features:",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 4,
      "total_chunks": 19,
      "char_count": 98,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982388"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:5",
    "content": "```\nTransportSecuritySettings(\n    enable_dns_rebinding_protection=True,\n    allowed_hosts=[\"localhost\", \"127.0.0.1:8080\"],\n    allowed_origins=[\"http://localhost\", \"http://127.0.0.1:8080\"]\n)\n```",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 5,
      "total_chunks": 19,
      "char_count": 195,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982395"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:6",
    "content": "The system supports wildcard port patterns for development environments:\n```\n\"localhost:*\"\n```\n```\nlocalhost:3000\n```\n,\n```\nlocalhost:8080\n```\n```\n\"127.0.0.1:*\"\n```\n```\n127.0.0.1:5000\n```\n,\n```\n127.0.0.1:9999\n```\n```\n\"http://localhost:*\"\n```\n```\nhttp://localhost:3000\n```\n, Matches = . , Example = \n```\ngraph TB\n    subgraph \"TransportSecuritySettings\"\n        EnableProtection[\"enable_dns_rebinding_protection: bool\"]\n        AllowedHosts[\"allowed_hosts: list[str]\"]\n        AllowedOrigins[\"allowed_origins: list[str]\"]\n    end\n    \n    subgraph \"Validation Logic\"\n        HostValidator[\"_validate_host()\"]\n        OriginValidator[\"_validate_origin()\"]\n        ContentTypeValidator[\"_validate_content_type()\"]\n    end\n    \n    subgraph \"Pattern Matching\"\n        ExactMatch[\"Exact String Match\"]\n        WildcardMatch[\"Wildcard Port Pattern<br/>host:*\"]\n    end\n    \n    EnableProtection --> HostValidator\n    AllowedHosts --> HostValidator\n    AllowedOrigins --> OriginValidator\n    \n    HostValidator --> ExactMatch\n    HostValidator --> WildcardMatch\n    OriginValidator --> ExactMatch\n    OriginValidator --> WildcardMatch\n```\nSources:\n[src/mcp/server/transport_security.py:12-35](.)\n,\n[src/mcp/server/transport_security.py:56-63](.)\n,\n[tests/server/test_sse_security.py:226-256](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 6,
      "total_chunks": 19,
      "char_count": 1287,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982401"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:7",
    "content": "The\n```\nTransportSecurityMiddleware\n```\nclass implements the core validation logic:",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 7,
      "total_chunks": 19,
      "char_count": 83,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982406"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:8",
    "content": "```\n_validate_host()\n```\n```\nbool\n```\n```\n_validate_origin()\n```\n```\nbool\n```\n```\n_validate_content_type()\n```\n```\nbool\n```\n```\nvalidate_request()\n```\n```\nResponse | None\n```\n, Purpose = . , Returns = ",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 8,
      "total_chunks": 19,
      "char_count": 201,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982411"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:9",
    "content": "```\ngraph TD\n    Request[\"Incoming Request\"]\n    IsPost{\"POST Request?\"}\n    ContentTypeCheck[\"Validate Content-Type\"]\n    ContentTypeFail[\"Return 400<br/>Invalid Content-Type\"]\n    \n    ProtectionEnabled{\"DNS Protection<br/>Enabled?\"}\n    HostCheck[\"Validate Host Header\"]\n    HostFail[\"Return 421<br/>Invalid Host\"]\n    \n    OriginCheck[\"Validate Origin Header\"]\n    OriginFail[\"Return 400<br/>Invalid Origin\"]\n    \n    Success[\"Return None<br/>(Validation Passed)\"]\n    \n    Request --> IsPost\n    IsPost -->|Yes| ContentTypeCheck\n    IsPost -->|No| ProtectionEnabled\n    ContentTypeCheck -->|Invalid| ContentTypeFail\n    ContentTypeCheck -->|Valid| ProtectionEnabled\n    \n    ProtectionEnabled -->|No| Success\n    ProtectionEnabled -->|Yes| HostCheck\n    HostCheck -->|Invalid| HostFail\n    HostCheck -->|Valid| OriginCheck\n    OriginCheck -->|Invalid| OriginFail\n    OriginCheck -->|Valid| Success\n```\nSources:\n[src/mcp/server/transport_security.py:102-128](.)\n,\n[src/mcp/server/transport_security.py:89-101](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 9,
      "total_chunks": 19,
      "char_count": 1016,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982417"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:10",
    "content": "Security middleware integrates with multiple transport types through a common pattern:",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 10,
      "total_chunks": 19,
      "char_count": 86,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982423"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:11",
    "content": "The\n```\nStreamableHTTPSessionManager\n```\naccepts security settings and passes them to transport instances:\n```\ngraph LR\n    subgraph \"StreamableHTTPSessionManager\"\n        Constructor[\"__init__(security_settings)\"]\n        HandleRequest[\"handle_request()\"]\n        CreateTransport[\"StreamableHTTPServerTransport\"]\n    end\n    \n    subgraph \"Transport Security\"\n        SecuritySettings[\"TransportSecuritySettings\"]\n        SecurityMiddleware[\"TransportSecurityMiddleware\"]\n    end\n    \n    SecuritySettings --> Constructor\n    Constructor --> CreateTransport\n    CreateTransport --> SecurityMiddleware\n    HandleRequest --> SecurityMiddleware\n```",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 11,
      "total_chunks": 19,
      "char_count": 646,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982428"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:12",
    "content": "The\n```\nSseServerTransport\n```\nsimilarly integrates security validation:\n```\nStreamableHTTPServerTransport\n```\n```\nSseServerTransport\n```\n```\nconnect_sse()\n```\nStreamableHTTP, Security Integration Point = . StreamableHTTP, Error Handling = \nSources:\n[src/mcp/server/streamable_http_manager.py:62-68](.)\n,\n[src/mcp/server/streamable_http_manager.py:224-229](.)\n,\n[tests/server/test_sse_security.py:45-58](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 12,
      "total_chunks": 19,
      "char_count": 406,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982434"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:13",
    "content": "The security system uses conservative defaults to maintain backward compatibility:",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 13,
      "total_chunks": 19,
      "char_count": 82,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982440"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:14",
    "content": "```\nenable_dns_rebinding_protection\n```\n```\nTrue\n```\nin settings,\n```\nFalse\n```\n```\nallowed_hosts\n```\n```\n[]\n```\n```\nallowed_origins\n```\n```\n[]\n```\n, Default Value = . , Rationale = ",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 14,
      "total_chunks": 19,
      "char_count": 182,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982445"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:15",
    "content": "```\ngraph TD\n    NoSettings[\"No Security Settings Provided\"]\n    DefaultMiddleware[\"TransportSecurityMiddleware<br/>enable_dns_rebinding_protection=False\"]\n    ContentTypeOnly[\"Only Content-Type Validation<br/>for POST requests\"]\n    \n    WithSettings[\"Security Settings Provided\"]\n    ConfiguredMiddleware[\"TransportSecurityMiddleware<br/>with user settings\"]\n    FullValidation[\"Full DNS Rebinding Protection\"]\n    \n    NoSettings --> DefaultMiddleware\n    DefaultMiddleware --> ContentTypeOnly\n    \n    WithSettings --> ConfiguredMiddleware\n    ConfiguredMiddleware --> FullValidation\n```\nSources:\n[src/mcp/server/transport_security.py:40-43](.)\n,\n[src/mcp/server/transport_security.py:114-115](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 15,
      "total_chunks": 19,
      "char_count": 700,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982451"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:16",
    "content": "The security system includes comprehensive tests covering various attack scenarios and configuration options:",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 16,
      "total_chunks": 19,
      "char_count": 109,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982456"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:17",
    "content": "```\ntest_streamable_http_security.py\n```\n```\ntest_sse_security.py\n```\nStreamableHTTP Security, File = . StreamableHTTP Security, Key Test Cases = ",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 17,
      "total_chunks": 19,
      "char_count": 146,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982462"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Transport_Security:chunk:18",
    "content": "```\ngraph TB\n    subgraph \"Attack Simulations\"\n        InvalidHost[\"Invalid Host Header<br/>evil.com\"]\n        InvalidOrigin[\"Invalid Origin Header<br/>http://evil.com\"]\n        WrongContentType[\"Wrong Content-Type<br/>text/plain\"]\n    end\n    \n    subgraph \"Valid Requests\"\n        ValidHost[\"Valid Host<br/>localhost, 127.0.0.1\"]\n        ValidOrigin[\"Valid Origin<br/>http://localhost\"]\n        ValidContentType[\"Valid Content-Type<br/>application/json\"]\n    end\n    \n    subgraph \"Test Results\"\n        Block421[\"HTTP 421<br/>Invalid Host\"]\n        Block400Origin[\"HTTP 400<br/>Invalid Origin\"]\n        Block400ContentType[\"HTTP 400<br/>Invalid Content-Type\"]\n        Allow200[\"HTTP 200<br/>Success\"]\n    end\n    \n    InvalidHost --> Block421\n    InvalidOrigin --> Block400Origin\n    WrongContentType --> Block400ContentType\n    \n    ValidHost --> Allow200\n    ValidOrigin --> Allow200\n    ValidContentType --> Allow200\n```\nSources:\n[tests/server/test_streamable_http_security.py:85-294](.)\n,\n[tests/server/test_sse_security.py:78-294](.)",
    "metadata": {
      "source": "python-sdk\\Transport_Security.md",
      "file_name": "Transport_Security.md",
      "subfolder": "python-sdk",
      "chunk_index": 18,
      "total_chunks": 19,
      "char_count": 1041,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:34.982467"
    }
  }
]