[
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:0",
    "content": "This document covers the development setup, code quality standards, pre-commit hooks, and contribution workflow for the MCP Python SDK. It provides the complete toolchain configuration and processes for maintaining code quality using uv and modern Python development tools.\nFor information about CLI commands and project management workflows, see\n[MCP CLI Commands](#8.1)\n. For Claude Desktop integration setup, see\n[Claude Desktop Integration](#8.3)\n.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 0,
      "total_chunks": 25,
      "char_count": 452,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458086"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:1",
    "content": "The MCP Python SDK uses a modern Python development stack with strict tooling requirements to ensure code quality and consistency.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 1,
      "total_chunks": 25,
      "char_count": 130,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458104"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:2",
    "content": "Python, Version = 3.10+. Python, Purpose = Runtime environment. uv, Version = Latest. uv, Purpose = Package and project management. pre-commit, Version = Latest. pre-commit, Purpose = Git hook automation",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 2,
      "total_chunks": 25,
      "char_count": 203,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458111"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:3",
    "content": "The development environment setup follows a specific sequence to ensure all tools are properly configured:\n```\ngraph TD\n    Start[\"Start Development Setup\"]\n    \n    subgraph \"Environment Setup\"\n        Python[\"Install Python 3.10+\"]\n        UV[\"Install uv package manager\"]\n        Fork[\"Fork repository\"]\n        Clone[\"Clone forked repository\"]\n    end\n    \n    subgraph \"Dependency Installation\"\n        UVSync[\"uv sync --frozen --all-extras --dev\"]\n        DepCheck[\"Dependencies installed\"]\n    end\n    \n    subgraph \"Pre-commit Setup\"\n        PreCommitInstall[\"uv tool install pre-commit --with pre-commit-uv --force-reinstall\"]\n        HooksReady[\"Pre-commit hooks configured\"]\n    end\n    \n    Start --> Python\n    Python --> UV\n    UV --> Fork\n    Fork --> Clone\n    Clone --> UVSync\n    UVSync --> DepCheck\n    DepCheck --> PreCommitInstall\n    PreCommitInstall --> HooksReady\n```\n**Development Environment Setup Flow**\nSources:\n[CONTRIBUTING.md:7-22](.)\n,\n[CLAUDE.md:7-12](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 3,
      "total_chunks": 25,
      "char_count": 987,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458117"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:4",
    "content": "The project exclusively uses\n```\nuv\n```\nfor all package management operations. Traditional\n```\npip\n```\nusage is explicitly forbidden to ensure consistent dependency resolution and lock file management.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 4,
      "total_chunks": 25,
      "char_count": 201,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458123"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:5",
    "content": "```\ngraph LR\n    subgraph \"Package Operations\"\n        Add[\"uv add package\"]\n        AddDev[\"uv add --dev package\"]\n        Upgrade[\"uv add --dev package --upgrade-package package\"]\n    end\n    \n    subgraph \"Execution Operations\"\n        Run[\"uv run tool\"]\n        RunFrozen[\"uv run --frozen command\"]\n    end\n    \n    subgraph \"Project Operations\"\n        Sync[\"uv sync --frozen --all-extras --dev\"]\n        Lock[\"uv lock --check\"]\n    end\n    \n    subgraph \"Forbidden Operations\"\n        PipInstall[\"uv pip install ❌\"]\n        Latest[\"@latest syntax ❌\"]\n    end\n```\n**uv Package Management Commands**\n```\nuv add package\n```\n```\nuv add --dev package\n```\n```\nuv add --dev package --upgrade-package package\n```\n```\nuv run tool\n```\n```\nuv sync --frozen --all-extras --dev\n```\n```\nuv lock --check\n```\nAdd dependency, Command = . Add dependency, Purpose = \nSources:\n[CLAUDE.md:7-12](.)\n,\n[.pre-commit-config.yaml:48-52](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 5,
      "total_chunks": 25,
      "char_count": 919,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458129"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:6",
    "content": "The project enforces strict code quality standards through automated tooling and explicit requirements for all contributions.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 6,
      "total_chunks": 25,
      "char_count": 125,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458135"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:7",
    "content": "```\ngraph TB\n    subgraph \"Code Quality Pipeline\"\n        Code[\"Python Source Code\"]\n        \n        subgraph \"Formatting\"\n            RuffFormat[\"ruff format\"]\n            FormatCheck[\"Line length: 120 chars\"]\n        end\n        \n        subgraph \"Linting\"\n            RuffCheck[\"ruff check --fix\"]\n            ImportSort[\"Import sorting (I001)\"]\n            UnusedImports[\"Unused import detection\"]\n        end\n        \n        subgraph \"Type Checking\"\n            Pyright[\"pyright type checker\"]\n            TypeHints[\"Explicit type hints required\"]\n            NoneChecks[\"Optional type narrowing\"]\n        end\n        \n        subgraph \"Documentation\"\n            Docstrings[\"Public API docstrings\"]\n            SmallFunctions[\"Focused function design\"]\n        end\n    end\n    \n    Code --> RuffFormat\n    RuffFormat --> FormatCheck\n    FormatCheck --> RuffCheck\n    RuffCheck --> ImportSort\n    ImportSort --> UnusedImports\n    UnusedImports --> Pyright\n    Pyright --> TypeHints\n    TypeHints --> NoneChecks\n    NoneChecks --> Docstrings\n    Docstrings --> SmallFunctions\n```\n**Code Quality Tool Chain**",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 7,
      "total_chunks": 25,
      "char_count": 1113,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458142"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:8",
    "content": "Line length, Tool = ruff. Line length, Configuration = 120 characters maximum. Type hints, Tool = pyright. Type hints, Configuration = Required for all code. Docstrings, Tool = manual. Docstrings, Configuration = Required for public APIs. Import sorting, Tool = ruff. Import sorting, Configuration = I001 rule enforcement. Function size, Tool = manual. Function size, Configuration = Small, focused functions",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 8,
      "total_chunks": 25,
      "char_count": 408,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458147"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:9",
    "content": "```\nuv run --frozen ruff format .\n```\n```\nuv run --frozen ruff check .\n```\n```\nuv run --frozen ruff check . --fix\n```\n```\nuv run --frozen pyright\n```\nruff, Format Command = . ruff, Check Command = \nSources:\n[CLAUDE.md:14-20](.)\n,\n[CLAUDE.md:60-78](.)\n,\n[.pre-commit-config.yaml:26-46](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 9,
      "total_chunks": 25,
      "char_count": 287,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458153"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:10",
    "content": "The project uses an automated pre-commit hook system that runs multiple quality checks on every commit to ensure code standards are maintained.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 10,
      "total_chunks": 25,
      "char_count": 143,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458159"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:11",
    "content": "```\ngraph TB\n    subgraph \"Pre-commit Hook Pipeline\"\n        Commit[\"git commit\"]\n        \n        subgraph \"External Tools\"\n            Prettier[\"prettier (YAML/JSON5)\"]\n            Markdown[\"markdownlint (Markdown)\"]\n        end\n        \n        subgraph \"Python Tools\"\n            RuffFormatHook[\"ruff format hook\"]\n            RuffCheckHook[\"ruff check --fix hook\"]\n            PyrightHook[\"pyright type check hook\"]\n        end\n        \n        subgraph \"Project Validation\"\n            UVLockCheck[\"uv lock --check\"]\n            ReadmeSnippets[\"README snippet validation\"]\n        end\n        \n        subgraph \"Outcome\"\n            Success[\"Commit Success ✓\"]\n            Failure[\"Commit Blocked ✗\"]\n        end\n    end\n    \n    Commit --> Prettier\n    Commit --> Markdown\n    Commit --> RuffFormatHook\n    Commit --> RuffCheckHook\n    Commit --> PyrightHook\n    Commit --> UVLockCheck\n    Commit --> ReadmeSnippets\n    \n    Prettier --> Success\n    Markdown --> Success\n    RuffFormatHook --> Success\n    RuffCheckHook --> Success\n    PyrightHook --> Success\n    UVLockCheck --> Success\n    ReadmeSnippets --> Success\n    \n    Prettier --> Failure\n    Markdown --> Failure\n    RuffFormatHook --> Failure\n    RuffCheckHook --> Failure\n    PyrightHook --> Failure\n    UVLockCheck --> Failure\n    ReadmeSnippets --> Failure\n```\n**Pre-commit Hook Execution Flow**",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 11,
      "total_chunks": 25,
      "char_count": 1367,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458166"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:12",
    "content": "The pre-commit configuration in\n[.pre-commit-config.yaml:1-59](.)\ndefines the complete hook pipeline:\n```\ntypes_or: [yaml, json5]\n```\n```\ntypes: [markdown]\n```\n```\ntypes: [python]\n```\n```\ntypes: [python]\n```\n```\ntypes: [python]\n```\n```\n^(pyproject\\.toml\\|uv\\.lock)$\n```\nprettier, Type = External. prettier, Purpose = Format YAML/JSON5. prettier, Files = ",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 12,
      "total_chunks": 25,
      "char_count": 354,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458172"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:13",
    "content": "```\nuv tool install pre-commit --with pre-commit-uv --force-reinstall\n```\n```\npre-commit run --all-files\n```\n```\ngit commit\n```\nInstall hooks, Command = . Install hooks, Purpose = \nSources:\n[.pre-commit-config.yaml:1-59](.)\n,\n[CONTRIBUTING.md:17-22](.)\n,\n[CLAUDE.md:80-87](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 13,
      "total_chunks": 25,
      "char_count": 275,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458178"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:14",
    "content": "The project uses pytest with anyio for async testing, with specific configuration requirements to ensure consistent test execution.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 14,
      "total_chunks": 25,
      "char_count": 131,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458183"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:15",
    "content": "```\ngraph LR\n    subgraph \"Test Execution Environment\"\n        TestCommand[\"uv run --frozen pytest\"]\n        \n        subgraph \"Test Framework\"\n            Pytest[\"pytest test runner\"]\n            Anyio[\"anyio async support\"]\n            PytestDisable[\"PYTEST_DISABLE_PLUGIN_AUTOLOAD=''\"]\n        end\n        \n        subgraph \"Test Requirements\"\n            EdgeCases[\"Edge case coverage\"]\n            ErrorCases[\"Error condition testing\"]\n            NewFeatures[\"Tests for new features\"]\n            Regression[\"Regression tests for bugs\"]\n        end\n    end\n    \n    TestCommand --> Pytest\n    Pytest --> Anyio\n    Anyio --> PytestDisable\n    \n    Pytest --> EdgeCases\n    Pytest --> ErrorCases\n    Pytest --> NewFeatures\n    Pytest --> Regression\n```\n**Testing Framework Architecture**",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 15,
      "total_chunks": 25,
      "char_count": 791,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458189"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:16",
    "content": "`uv run --frozen pytest`\nTest runner, Implementation = pytest. Test runner, Notes = ",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 16,
      "total_chunks": 25,
      "char_count": 84,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458195"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:17",
    "content": "```\nuv run --frozen pytest\n```\n```\nPYTEST_DISABLE_PLUGIN_AUTOLOAD=\"\" uv run --frozen pytest\n```\n```\nPYTEST_DISABLE_PLUGIN_AUTOLOAD=\"\"\n```\n, Purpose = . , Environment Variable = \nSources:\n[CLAUDE.md:21-27](.)\n,\n[CLAUDE.md:111-114](.)\n,\n[CONTRIBUTING.md:34-38](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 17,
      "total_chunks": 25,
      "char_count": 261,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458201"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:18",
    "content": "The development workflow integrates all quality tools into a structured process that ensures code quality and proper contribution management.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 18,
      "total_chunks": 25,
      "char_count": 141,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458206"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:19",
    "content": "```\ngraph TD\n    subgraph \"Branch Selection\"\n        BugFix[\"Bug Fix: Latest release branch (v1.1.x)\"]\n        NewFeature[\"New Feature: main branch\"]\n        Unclear[\"Unsure: Ask in issue first\"]\n    end\n    \n    subgraph \"Development Process\"\n        CreateBranch[\"Create feature branch\"]\n        MakeChanges[\"Make code changes\"]\n        \n        subgraph \"Quality Checks\"\n            RunTests[\"uv run pytest\"]\n            TypeCheck[\"uv run pyright\"]\n            Lint[\"uv run ruff check . && uv run ruff format .\"]\n            UpdateReadme[\"uv run scripts/update_readme_snippets.py\"]\n        end\n        \n        subgraph \"Pre-commit Validation\"\n            PreCommitRun[\"pre-commit run --all-files (optional)\"]\n            GitCommit[\"git commit (triggers hooks)\"]\n        end\n        \n        SubmitPR[\"Submit pull request\"]\n    end\n    \n    subgraph \"Error Resolution Order\"\n        Formatting[\"1. Fix formatting issues\"]\n        TypeErrors[\"2. Fix type errors\"]\n        LintingIssues[\"3. Fix linting issues\"]\n    end\n    \n    BugFix --> CreateBranch\n    NewFeature --> CreateBranch\n    Unclear --> CreateBranch\n    \n    CreateBranch --> MakeChanges\n    MakeChanges --> RunTests\n    RunTests --> TypeCheck\n    TypeCheck --> Lint\n    Lint --> UpdateReadme\n    UpdateReadme --> PreCommitRun\n    PreCommitRun --> GitCommit\n    GitCommit --> SubmitPR\n    \n    GitCommit --> Formatting\n    Formatting --> TypeErrors\n    TypeErrors --> LintingIssues\n```\n**Complete Development Workflow Process**",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 19,
      "total_chunks": 25,
      "char_count": 1492,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458212"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:20",
    "content": "The development guidelines specify a specific order for resolving CI failures:\n```\nuv run ruff format .\n```\n```\nuv run ruff check . --fix\n```\n1, Issue Type = Formatting. 1, Common Solutions = ",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 20,
      "total_chunks": 25,
      "char_count": 192,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458217"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:21",
    "content": "```\ngit commit --trailer \"Reported-by:<name>\"\n```\n```\ngit commit --trailer \"Github-Issue:#<number>\"\n```\nBug fixes from user reports, Command = . Bug fixes from user reports, Purpose = \n**Prohibited:**\nAny mention of co-authored-by or development tools in commit messages.\nSources:\n[CONTRIBUTING.md:25-66](.)\n,\n[CLAUDE.md:28-44](.)\n,\n[CLAUDE.md:89-123](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 21,
      "total_chunks": 25,
      "char_count": 354,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458223"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:22",
    "content": "The project enforces specific exception handling patterns to ensure proper error reporting and debugging capabilities.",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 22,
      "total_chunks": 25,
      "char_count": 118,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458228"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:23",
    "content": "```\nlogger.exception()\n```\nnot\n```\nlogger.error()\n```\n```\nlogger.exception(\"Failed\")\n```\n```\nlogger.exception(f\"Failed: {e}\")\n```\n```\nexcept (OSError, PermissionError):\n```\n```\nexcept Exception:\n```\nLogging, Implementation = . Logging, Example = ",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 23,
      "total_chunks": 25,
      "char_count": 246,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458233"
    }
  },
  {
    "chunk_id": "fast_mcp_api_python:python-sdk:Development_Environment:chunk:24",
    "content": "```\n(OSError, PermissionError)\n```\n```\njson.JSONDecodeError\n```\n```\n(ConnectionError, TimeoutError)\n```\n```\nException\n```\nFile operations, Recommended Exceptions = . File operations, Purpose = \nSources:\n[CLAUDE.md:124-135](.)",
    "metadata": {
      "source": "python-sdk\\Development_Environment.md",
      "file_name": "Development_Environment.md",
      "subfolder": "python-sdk",
      "chunk_index": 24,
      "total_chunks": 25,
      "char_count": 225,
      "collection": "fast_mcp_api_python",
      "processing_method": "hybrid_chunker",
      "timestamp": "2025-10-15T07:13:14.458239"
    }
  }
]