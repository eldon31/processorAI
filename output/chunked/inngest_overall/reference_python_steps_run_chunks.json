{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
  "title": "Run",
  "num_chunks": 4,
  "total_chars": 1788,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Run](\\docs\\reference\\python\\steps\\run#run)\n- [Arguments](\\docs\\reference\\python\\steps\\run#arguments)\n- [Examples](\\docs\\reference\\python\\steps\\run#examples)\nReferences\n[Python SDK](\\docs\\reference\\python)\n[Steps](\\docs\\reference\\python\\steps\\invoke)",
      "char_count": 265,
      "token_count": 82,
      "metadata": {
        "title": "Run",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "file_name": "reference_python_steps_run.md",
        "file_size": 1944,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "2c1e16b611be46761536936769b70fdcb7832687f8309ac09a9be8f038821b9a",
        "author": null,
        "created_at": "2025-10-13T00:01:14.008865",
        "modified_at": "2025-10-13T00:01:14.008865",
        "page_count": null,
        "word_count": 272,
        "extracted_at": "2025-10-13T20:04:48.721214",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 82,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Run\nTurn a normal function into a durable function. Any function passed to\n```\nstep.run\n```\nwill be executed in a durable way, including retries and memoization.",
      "char_count": 161,
      "token_count": 37,
      "metadata": {
        "title": "Run",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "file_name": "reference_python_steps_run.md",
        "file_size": 1944,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "2c1e16b611be46761536936769b70fdcb7832687f8309ac09a9be8f038821b9a",
        "author": null,
        "created_at": "2025-10-13T00:01:14.008865",
        "modified_at": "2025-10-13T00:01:14.008865",
        "page_count": null,
        "word_count": 272,
        "extracted_at": "2025-10-13T20:04:48.721214",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 37,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Run\nArguments\n- Name `step_id` Type str Required required Description Step ID. Should be unique within the function.\n- Name `handler` Type Callable Required required Description A callable that has no arguments and returns a JSON serializable value.\n- Name `*handler_args` Type Required optional Description Positional arguments for the handler. This is type-safe since we infer the types from the handler using generics.",
      "char_count": 421,
      "token_count": 82,
      "metadata": {
        "title": "Run",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "file_name": "reference_python_steps_run.md",
        "file_size": 1944,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "2c1e16b611be46761536936769b70fdcb7832687f8309ac09a9be8f038821b9a",
        "author": null,
        "created_at": "2025-10-13T00:01:14.008865",
        "modified_at": "2025-10-13T00:01:14.008865",
        "page_count": null,
        "word_count": 272,
        "extracted_at": "2025-10-13T20:04:48.721214",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 82,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Run\nExamples\nCopy Copied\n```\n@inngest_client . create_function (\nfn_id = \"my_function\" ,\ntrigger = inngest. TriggerEvent (event = \"app/my_function\" ),\n)\nasync def fn ( ctx : inngest . Context) -> None :\n# Pass a function to step.run\nawait ctx . step . run ( \"my_fn\" , my_fn)\n\n# Args are passed after the function\nawait ctx . step . run ( \"my_fn_with_args\" , my_fn_with_args, 1 , \"a\" )\n\n# Kwargs require functools.partial\nawait ctx . step . run (\n\"my_fn_with_args_and_kwargs\" ,\nfunctools. partial (my_fn_with_args_and_kwargs, 1 , b = \"a\" ),\n)\n\n# Defining functions like this gives you easy access to scoped variables\ndef use_scoped_variable () -> None :\nprint (ctx.event.data[ \"user_id\" ])\n\nawait ctx . step . run ( \"use_scoped_variable\" , use_scoped_variable)\n\nasync def my_fn () -> None :\npass\n\nasync def my_fn_with_args ( a : int , b : str ) -> None :\npass\n\nasync def my_fn_with_args_and_kwargs ( a : int , * , b : str ) -> None :\npass\n```",
      "char_count": 941,
      "token_count": 271,
      "metadata": {
        "title": "Run",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_python_steps_run.md",
        "file_name": "reference_python_steps_run.md",
        "file_size": 1944,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "2c1e16b611be46761536936769b70fdcb7832687f8309ac09a9be8f038821b9a",
        "author": null,
        "created_at": "2025-10-13T00:01:14.008865",
        "modified_at": "2025-10-13T00:01:14.008865",
        "page_count": null,
        "word_count": 272,
        "extracted_at": "2025-10-13T20:04:48.721214",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 271,
        "has_context": true
      }
    }
  ]
}