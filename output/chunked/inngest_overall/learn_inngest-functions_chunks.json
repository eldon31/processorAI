{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
  "title": "#### On this page",
  "num_chunks": 15,
  "total_chars": 8805,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Inngest Functions](\\docs\\learn\\inngest-functions#inngest-functions)\n- [Anatomy of an Inngest function](\\docs\\learn\\inngest-functions#anatomy-of-an-inngest-function)\n- [Config](\\docs\\learn\\inngest-functions#config)\n- [Trigger](\\docs\\learn\\inngest-functions#trigger)\n- [Handler](\\docs\\learn\\inngest-functions#handler)\n- [Config](\\docs\\learn\\inngest-functions#config-2)\n- [Trigger](\\docs\\learn\\inngest-functions#trigger-2)\n- [Handler](\\docs\\learn\\inngest-functions#handler-2)\n- [Config](\\docs\\learn\\inngest-functions#config-3)\n- [Trigger](\\docs\\learn\\inngest-functions#trigger-3)\n- [Handler](\\docs\\learn\\inngest-functions#handler-3)\n- [Kinds of Inngest functions](\\docs\\learn\\inngest-functions#kinds-of-inngest-functions)\n- [Background functions](\\docs\\learn\\inngest-functions#background-functions)\n- [Scheduled functions](\\docs\\learn\\inngest-functions#scheduled-functions)\n- [Delayed functions](\\docs\\learn\\inngest-functions#delayed-functions)\n- [Step functions](\\docs\\learn\\inngest-functions#step-functions)\n- [Fan-out functions](\\docs\\learn\\inngest-functions#fan-out-functions)\n- [Invoking functions directly](\\docs\\learn\\inngest-functions#invoking-functions-directly)\n- [Further reading](\\docs\\learn\\inngest-functions#further-reading)\n[Inngest tour](\\docs\\sdk\\overview)",
      "char_count": 1286,
      "token_count": 389,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 389,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Inngest Functions\nInngest functions enable developers to run reliable background logic, from background jobs to complex workflows. They provide robust tools for retrying, scheduling, and coordinating complex sequences of operations.\nThis page covers components of an Inngest function, as well as introduces different kinds of functions. If you'd like to learn more about Inngest's execution model, check the\n[\"How Inngest functions are executed\"](\\docs\\learn\\how-functions-are-executed)\npage.",
      "char_count": 492,
      "token_count": 102,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 102,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nTypeScript Go Python\nLet's have a look at the following Inngest function:\nCopy Copied\n```\nimport { inngest } from \"./client\" ;\n\nexport default inngest .createFunction (\n// config\n{ id : \"import-product-images\" } ,\n// trigger (event or cron)\n{ event : \"shop/product.imported\" } ,\n// handler function\nasync ({ event , step }) => {\n// Here goes the business logic\n// By wrapping code in steps, it will be retried automatically on failure\nconst s3Urls = await step .run ( \"copy-images-to-s3\" , async () => {\nreturn copyAllImagesToS3 ( event . data .imageURLs);\n});\n// You can include numerous steps in your function\nawait step .run ( 'resize-images' , async () => {\nawait resizer .bulk ({ urls : s3Urls , quality : 0.9 , maxWidth : 1024 });\n})\n}\n);\n```\nThe above code can be explained as:\nThis Inngest function is called\n```\nimport-product-images\n```\n. When an event called\n```\nshop/product.imported\n```\nis received, run two steps:\n```\ncopy-images-to-s3\n```\nand\n```\nresize-images\n```\n.\nLet's have a look at each of this function's components.",
      "char_count": 1087,
      "token_count": 298,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 298,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nConfig\nThe first parameter of the\n```\ncreateFunction\n```\nmethod specifies Inngest function's configuration. In the above example, the\n```\nid\n```\nis specified, which will be used to identify the function in the Inngest system.\nYou can see this ID in the\n[Inngest Dev Server's](\\docs\\local-development)\nfunction list:\nScreenshot of the Inngest Dev Server interface showing three functions listed under the 'Functions' tab. The functions are: 'store-events,' 'Generate monthly report,' and 'Customer Onboarding,' each with their respective triggers and App URLs.\nYou can also provide other\n[configuration options](\\docs\\reference\\functions\\create#configuration)\n, such as\n```\nconcurrency\n```\n,\n```\nthrottle\n```\n,\n```\ndebounce\n```\n,\n```\nrateLimit\n```\n,\n```\npriority\n```\n,\n```\nbatchEvents\n```\n, or\n```\nidempotency\n```\n(learn more about\n[Flow Control](\\docs\\guides\\flow-control)\n). You can also specify how many times the function will retry, what callback function will run on failure, and when to cancel the function.",
      "char_count": 1062,
      "token_count": 271,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 271,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nTrigger\nInngest functions are designed to be triggered by events or crons (schedules). Events can be\n[sent from your own code](\\docs\\events)\nor received from third party webhooks or API requests. When an event is received, it triggers a corresponding function to execute the tasks defined in the function handler (see the\n[\"Handler\" section](\\docs\\learn\\inngest-functions#handler)\nbelow).\nEach function needs at least one trigger. However, you can also work with\n[multiple triggers](\\docs\\guides\\multiple-triggers)\nto invoke your function whenever any of the events are received or cron schedule occurs.",
      "char_count": 652,
      "token_count": 150,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 150,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nHandler\nA \"handler\" is the core function that defines what should happen when the function is triggered.\nThe handler receives context, which includes the event data, tools for managing execution flow, or logging configuration. Let's take a closer look at them.",
      "char_count": 309,
      "token_count": 65,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 65,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nevent\nHandler has access to the data which you pass when sending events to Inngest via\n[```\ninngest.send()\n```](\\docs\\reference\\events\\send)\nor\n[```\nstep.sendEvent()\n```](\\docs\\reference\\functions\\step-send-event)\n.\nYou can see this in the example above in the\n```\nevent\n```\nparameter.",
      "char_count": 334,
      "token_count": 95,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Inngest Functions\nAnatomy of an Inngest function\nstep\n[Inngest steps](\\docs\\learn\\inngest-steps)\nare fundamental building blocks in Inngest functions. They are used to manage execution flow. Each step is a discrete task, which can be executed, retried, and recovered independently, without re-executing other successful steps.\nIt's helpful to think of steps as code-level transactions.  If your handler contains several independent tasks, it's good practice to\n[wrap each one in a step](\\docs\\guides\\multi-step-functions)\n.\nIn this way, you can manage complex state easier and if any task fails, it will be retried independently from others.\nThere are several step methods available at your disposal, for example,\n```\nstep.run\n```\n,\n```\nstep.sleep()\n```\n, or\n```\nstep.waitForEvent()\n```\n.\nIn the example above, the handler contains two steps:\n```\ncopy-images-to-s3\n```\nand\n```\nresize-images\n```\n.",
      "char_count": 896,
      "token_count": 220,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 220,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Inngest Functions\nKinds of Inngest functions\nBackground functions\nLong tasks can be executed outside the critical path of the main flow, which improves app's performance and reliability. Perfect for communicating with third party APIs or executing long-running code.",
      "char_count": 266,
      "token_count": 51,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 51,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Inngest Functions\nKinds of Inngest functions\nScheduled functions\nInngest's scheduled functions enable you to run tasks automatically at specified intervals using cron schedules. These functions ensure consistent and timely execution without manual intervention. Perfect for routine operations like sending weekly reports or clearing caches.",
      "char_count": 340,
      "token_count": 58,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 58,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Inngest Functions\nKinds of Inngest functions\nDelayed functions\nYou can enqueue an Inngest function to run at a specific time in the future. The task will be executed exactly when needed without manual intervention. Perfect for actions like sending follow-up emails or processing delayed orders.",
      "char_count": 294,
      "token_count": 59,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 59,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Inngest Functions\nKinds of Inngest functions\nStep functions\nStep functions allow you to create complex workflows. You can coordinate between multiple steps, including waiting for other events, delaying execution, or running code conditionally based on previous steps or incoming events. Each\n[step](\\docs\\learn\\inngest-steps)\nis individually retriable, making the workflow robust against failures. Ideal for scenarios like onboarding flows or conditional notifications.",
      "char_count": 469,
      "token_count": 93,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 93,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Inngest Functions\nKinds of Inngest functions\nFan-out functions\nInngest's fan-out jobs enable a single event to trigger multiple functions simultaneously. Ideal for parallel processing tasks, like sending notifications to multiple services or processing data across different systems.",
      "char_count": 283,
      "token_count": 53,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 53,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Inngest Functions\nInvoking functions directly\nYou can\n[call an Inngest function directly](\\docs\\guides\\invoking-functions-directly)\nfrom within your event-driven system by using\n```\nstep.invoke()\n```\n, even across different Inngest SDKs.\nThis is useful when you need to break down complex workflows into simpler, manageable parts or when you want to leverage existing functionality without duplicating code. Direct invocation is ideal for orchestrating dependent tasks, handling complex business logic, or improving code maintainability and readability.",
      "char_count": 553,
      "token_count": 112,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 112,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "Inngest Functions\nFurther reading\n- [Quick Start guide](\\docs\\getting-started\\nextjs-quick-start?ref=docs-inngest-functions) : learn how to build complex workflows.\n- [\"How Inngest functions are executed\"](\\docs\\learn\\how-functions-are-executed) : learn more about Inngest's execution model.\n- [\"Inngest steps\"](\\docs\\learn\\inngest-steps) : understand building Inngest's blocks.\n- [\"Flow Control\"](\\docs\\guides\\flow-control) : learn how to manage execution within Inngest functions.",
      "char_count": 482,
      "token_count": 129,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_inngest-functions.md",
        "file_name": "learn_inngest-functions.md",
        "file_size": 9057,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b14055da270d4ff852495f6361ddb8a39acb504d90efe4eecfb780d5021a606b",
        "author": null,
        "created_at": "2025-10-12T23:59:59.311409",
        "modified_at": "2025-10-12T23:59:59.311914",
        "page_count": null,
        "word_count": 1036,
        "extracted_at": "2025-10-13T20:04:05.901942",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 15,
        "token_count": 129,
        "has_context": true
      }
    }
  ]
}