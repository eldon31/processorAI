{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
  "title": "Setting up your Inngest app",
  "num_chunks": 41,
  "total_chars": 29921,
  "chunks": [
    {
      "index": 0,
      "text": "Setting up your Inngest app\nWith Inngest, you define functions or workflows using the SDK and deploy them to whatever platform or cloud provider you want including including serverless and container runtimes.\nFor Inngest to remotely execute your functions, you will need to set up a connection between your app and Inngest. This can be done in one of two ways:",
      "char_count": 360,
      "token_count": 77,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 77,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Setting up your Inngest app\nserve()\n[Serve your Inngest functions by creating an HTTP endpoint in your application.](#serving-inngest-functions)\n[**Ideal for**](#serving-inngest-functions)\n[:](#serving-inngest-functions)\n- [Serverless platforms like Vercel, Lambda, etc.](#serving-inngest-functions)\n- [Adding Inngest to an existing API.](#serving-inngest-functions)\n- [Zero changes to your CI/CD pipeline](#serving-inngest-functions)",
      "char_count": 434,
      "token_count": 121,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 121,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Setting up your Inngest app\nconnect()\n[Connect to Inngest's servers using out-bound WebSocket connection.](\\docs\\setup\\connect)\n[**Ideal for**](\\docs\\setup\\connect)\n[:](\\docs\\setup\\connect)\n- [Container runtimes (Kubernetes, Docker, etc.)](\\docs\\setup\\connect)\n- [Latency sensitive applications](\\docs\\setup\\connect)\n- [Horizontal scaling with workers](\\docs\\setup\\connect)\nInngest functions are portable, so you can migrate between\n```\nserve()\n```\nand\n```\nconnect()\n```\nas well as cloud providers.",
      "char_count": 498,
      "token_count": 136,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 136,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Setting up your Inngest app\nServing Inngest functions\nTypeScript Go Python\nInngest provides a\n```\nserve()\n```\nhandler which adds an API endpoint to your router. You expose your functions to Inngest through this HTTP endpoint. To make automated deploys much easier,\n**the endpoint needs to be defined at**\n**```\n/api/inngest\n```**\n(though you can\n[change the API path](\\docs\\reference\\serve#serve-client-functions-options)\n).",
      "char_count": 424,
      "token_count": 106,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 106,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Setting up your Inngest app\nServing Inngest functions\n./api/inngest.ts\nCopy Copied\n```\n// All serve handlers have the same arguments:\nserve ({\nclient : inngest , // a client created with new Inngest()\nfunctions : [fnA , fnB] , // an array of Inngest functions to serve, created with inngest.createFunction()\n/* Optional extra configuration */\n});\n```",
      "char_count": 350,
      "token_count": 91,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 91,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\n- [Astro](\\docs\\learn\\serving-inngest-functions#framework-astro)\n- [AWS Lambda](\\docs\\learn\\serving-inngest-functions#framework-aws-lambda)\n- [Bun](\\docs\\learn\\serving-inngest-functions#bun-serve)\n- [Cloudflare Pages](\\docs\\learn\\serving-inngest-functions#framework-cloudflare-pages-functions)\n- [Cloudflare Workers](\\docs\\learn\\serving-inngest-functions#framework-cloudflare-workers)\n- [DigitalOcean Functions](\\docs\\learn\\serving-inngest-functions#framework-digital-ocean-functions)\n- [ElysiaJS](\\docs\\learn\\serving-inngest-functions#framework-elysia-js)\n- [Express](\\docs\\learn\\serving-inngest-functions#framework-express)\n- [Fastify](\\docs\\learn\\serving-inngest-functions#framework-fastify)\n- [Fresh (Deno)](\\docs\\learn\\serving-inngest-functions#framework-fresh-deno)\n- [Google Cloud Run Functions](\\docs\\learn\\serving-inngest-functions#framework-google-cloud-run-functions)\n- [Firebase Cloud functions](\\docs\\learn\\serving-inngest-functions#framework-firebase-cloud-functions)\n- [H3](\\docs\\learn\\serving-inngest-functions#framework-h3)\n- [Hono](\\docs\\learn\\serving-inngest-functions#framework-hono)\n- [Koa](\\docs\\learn\\serving-inngest-functions#framework-koa)\n- [NestJS](\\docs\\learn\\serving-inngest-functions#framework-nest-js)\n- [Next.js](\\docs\\learn\\serving-inngest-functions#framework-next-js)\n- [Nitro](\\docs\\learn\\serving-inngest-functions#framework-nitro)\n- [Nuxt](\\docs\\learn\\serving-inngest-functions#framework-nuxt)\n- [Redwood](\\docs\\learn\\serving-inngest-functions#framework-redwood)\n- [Remix](\\docs\\learn\\serving-inngest-functions#framework-remix)\n- [SvelteKit](\\docs\\learn\\serving-inngest-functions#framework-svelte-kit)\n- [Tanstack Start](\\docs\\learn\\serving-inngest-functions#framework-tanstack-start)\nYou can also create a custom serve handler for any framework or platform not listed here -\n[read more here](\\docs\\learn\\serving-inngest-functions#custom-frameworks)\n.\nWant us to add support for another framework? Open an issue on\n[GitHub](https://github.com/inngest/website)\nor tell us about it on our\n[Discord](\\discord)\n.",
      "char_count": 2107,
      "token_count": 590,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 590,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Astro v3.8.0+\nAdd the following to\n```\n./src/pages/api/inngest.ts\n```\n:\nCopy Copied\n```\nimport { serve } from \"inngest/astro\" ;\nimport { functions , inngest } from \"../../inngest\" ;\n\nexport const { GET , POST , PUT } = serve ({\nclient : inngest ,\nfunctions ,\n});\n```\nSee the\n[Astro example](https://github.com/inngest/inngest-js/tree/main/examples/framework-astro)\nfor more information.",
      "char_count": 460,
      "token_count": 128,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 128,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: AWS Lambda v1.5.0+\nWe recommend using\n[Lambda function URLs](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html)\nto trigger your functions, as these require no other configuration or cost.\nAlternatively, you can use an API Gateway to route requests to your Lambda. The handler supports\n[API Gateway V1](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html)\nand\n[API Gateway V2](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html)\n. If you are running API Gateway behind a proxy or have some other configuration, you may have to specify the\n```\nserveHost\n```\nand\n```\nservePath\n```\noptions when calling\n```\nserve()\n```\nto ensure Inngest knows the URL where you are serving your functions. See\n[Configuring the API path](\\docs\\reference\\serve#serve-client-functions-options)\nfor more details.\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/lambda\" ;\nimport { inngest } from \"./client\" ;\nimport fnA from \"./fnA\" ; // Your own function\n\nexport const handler = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n});\n```",
      "char_count": 1203,
      "token_count": 304,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 304,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nBun.serve()\nYou can use the\n```\ninngest/bun\n```\nhandler with\n```\nBun.serve()\n```\nfor a lightweight\nInngest server:",
      "char_count": 177,
      "token_count": 54,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nindex.ts\nCopy Copied\n```\nimport { serve } from \"inngest/bun\" ;\nimport { functions , inngest } from \"./inngest\" ;\n\nBun .serve ({\nport : 3000 ,\nroutes : {\n// ...other routes...\n\"/api/inngest\" : (request : Request ) => {\nreturn serve ({ client : inngest , functions })(request);\n} ,\n} ,\n});\n```\nSee the\n[Bun example](https://github.com/inngest/inngest-js/tree/main/examples/bun)\nfor more information.",
      "char_count": 460,
      "token_count": 133,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 133,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Cloudflare Pages Functions\nYou can import the Inngest API server when using\n[Cloudflare pages functions](https://developers.cloudflare.com/pages/platform/functions/)\nwithin\n```\n/functions/api/inngest.js\n```\n:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/cloudflare\" ;\nimport { inngest } from \"../../inngest/client\" ;\nimport fnA from \"../../inngest/fnA\" ; // Your own function\n\nexport const onRequest = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n});\n```",
      "char_count": 539,
      "token_count": 138,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 138,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Cloudflare Workers v3.19.15+\nYou can export\n```\n\"inngest/cloudflare\"\n```\n's\n```\nserve()\n```\nas your Cloudflare Worker:\nCopy Copied\n```\nimport { serve } from \"inngest/cloudflare\" ;\nimport { inngest } from \"./client\" ;\nimport fnA from \"./fnA\" ;\n\nexport default {\nfetch : serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n// We suggest explicitly defining the path to serve Inngest functions\nservePath : \"/api/inngest\" ,\n}) ,\n};\n```\nTo automatically pass environment variables defined with Wrangler to Inngest function handlers, use the\n[Cloudflare Workers bindings middleware](\\docs\\examples\\middleware\\cloudflare-workers-environment-variables)\n.",
      "char_count": 716,
      "token_count": 185,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 185,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nLocal development with Wrangler\nWhen developing locally with Wrangler and the\n```\n--remote\n```\nflag, your code is\ndeployed and run remotely. To use this with a local Inngest Dev Server, you must\nuse a tool such as\n[ngrok](https://ngrok.com/)\nor\n[localtunnel](https://theboroer.github.io/localtunnel-www/)\nto allow access to\nthe Dev Server from the internet.\nCopy Copied\n```\nngrok http 8288\n```",
      "char_count": 456,
      "token_count": 125,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 125,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nwrangler.toml\nCopy Copied\n```\n[vars]\n# The URL of your tunnel. This enables the \"cloud\" worker to access the local Dev Server\nINNGEST_DEV = \"https://YOUR_TUNNEL_URL.ngrok.app\"\n# This may be needed:\n# The URL of your local server. This enables the Dev Server to access the app at this local URL\n# You may have to change this URL to match your local server if running on a different port.\n# Without this, the \"cloud\" worker may attempt to redirect Inngest to the wrong URL.\nINNGEST_SERVE_HOST = \"http://localhost:8787\"\n```\nSee an example of this in the\n[Hono framework example on GitHub](https://github.com/inngest/inngest-js/tree/main/examples/framework-hono)\n.",
      "char_count": 723,
      "token_count": 186,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 186,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: DigitalOcean Functions\nThe DigitalOcean serve function allows you to deploy Inngest to DigitalOcean serverless functions.\nBecause DigitalOcean does not provide the request URL in its function arguments, you\n**must**\ninclude\nthe function URL and path when configuring your handler:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/digitalocean\" ;\nimport { inngest } from \"./src/inngest/client\" ;\nimport fnA from \"./src/inngest/fnA\" ; // Your own function\n\nconst main = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n// Your digitalocean hostname.  This is required otherwise your functions won't work.\nserveHost : \"https://faas-sfo3-your-url.doserverless.co\" ,\n// And your DO path, also required.\nservePath : \"/api/v1/web/fn-your-uuid/inngest\" ,\n});\n\n// IMPORTANT: Makes the function available as a module in the project.\n// This is required for any functions that require external dependencies.\nmodule . exports .main = main;\n```\nInngest functions can also be deployed to\n[DigitalOcean's App Platform or Droplets](\\docs\\deploy\\digital-ocean)\n.",
      "char_count": 1122,
      "token_count": 279,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 279,
        "has_context": true
      }
    },
    {
      "index": 15,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: ElysiaJS\nFor\n[deployment options](https://elysiajs.com/patterns/deploy.html)\n, Elysia can compile to a binary or to JavaScript, or you can deploy with Docker or Railway.",
      "char_count": 243,
      "token_count": 62,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 62,
        "has_context": true
      }
    },
    {
      "index": 16,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nsrc/index.ts\nCopy Copied\n```\nimport { Elysia } from \"elysia\" ;\nimport { serve } from \"inngest/bun\" ;\nimport { functions , inngest } from \"./inngest\" ;\n\nconst handler = serve ({\nclient : inngest ,\nfunctions ,\n});\n\nconst inngestHandler = new Elysia () .all ( \"/api/inngest\" , ({ request }) =>\nhandler (request)\n);\n\n// register the handler with Elysia\nconst app = new Elysia ()\n.use (inngestHandler)\n```\nElysia's\n```\nuse\n```\nfunction expects a single argument. We make use of the\n```\nall\n```\nmethod for the inngest api route to handle the expected\nmethods and then get the request off of the context object passed to elysia handlers.\nSee the\n[ElysiaJS](https://github.com/inngest/inngest-js/tree/main/examples/framework-elysiajs)\n[example](https://github.com/inngest/inngest-js/tree/main/examples/framework-elysiajs)\nfor more information.",
      "char_count": 898,
      "token_count": 251,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 251,
        "has_context": true
      }
    },
    {
      "index": 17,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Express\nYou can serve Inngest functions within your existing Express app, deployed to any hosting provider\nlike Render, Fly, AWS, K8S, and others:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/express\" ;\nimport { inngest } from \"./src/inngest/client\" ;\nimport fnA from \"./src/inngest/fnA\" ; // Your own function\n\n// Important:  ensure you add JSON middleware to process incoming JSON POST payloads.\napp .use ( express .json ());\napp .use (\n// Expose the middleware on our recommended path at `/api/inngest`.\n\"/api/inngest\" ,\nserve ({ client : inngest , functions : [fnA] })\n);\n```\nYou must ensure you're using the\n```\nexpress.json()\n```\nmiddleware otherwise your functions won't be\nexecuted.\n**Note**\n- You may need to set\n[```\nexpress.json()\n```](https://expressjs.com/en/5x/api.html#express.json)\n['s](https://expressjs.com/en/5x/api.html#express.json)\n[```\nlimit\n```](https://expressjs.com/en/5x/api.html#express.json)\n[option](https://expressjs.com/en/5x/api.html#express.json)\nto something higher than the default\n```\n100kb\n```\nto support larger event payloads and function state.\nSee the\n[Express](https://github.com/inngest/inngest-js/tree/main/examples/framework-express)\n[example](https://github.com/inngest/inngest-js/tree/main/examples/framework-express)\nfor more information.",
      "char_count": 1368,
      "token_count": 368,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 368,
        "has_context": true
      }
    },
    {
      "index": 18,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nStreaming v3.39.2+\nExpress can also stream responses back to Inngest, potentially allowing much\nlonger timeouts.\nTo enable this, set add the\n```\nstreaming: \"force\"\n```\noption to your serve handler:\nCopy Copied\n```\nconst handler = serve ({\nclient : inngest ,\nfunctions : [ ... fns] ,\nstreaming : \"force\" ,\n});\n```\nFor more information, check out the\n[Streaming](\\docs\\streaming)\npage.",
      "char_count": 446,
      "token_count": 119,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 119,
        "has_context": true
      }
    },
    {
      "index": 19,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Fastify v2.6.0+\nYou can serve Inngest functions within your existing Fastify app.\nWe recommend using the exported\n```\ninngestFastify\n```\nplugin, though we also expose a generic\n```\nserve()\n```\nfunction if you'd like to manually create a route.\nPlugin Custom route (v3) Custom route (v2)\nCopy Copied\n```\nimport Fastify from \"fastify\" ;\nimport { fastifyPlugin } from \"inngest/fastify\" ;\nimport { inngest , fnA } from \"./inngest\" ;\n\nconst fastify = Fastify ();\n\nfastify .register (fastifyPlugin , {\nclient : inngest ,\nfunctions : [fnA] ,\noptions : {} ,\n});\n\nfastify .listen ({ port : 3000 } , function (err , address) {\nif (err) {\nfastify . log .error (err);\nprocess .exit ( 1 );\n}\n});\n```\nSee the\n[Fastify example](https://github.com/inngest/inngest-js/tree/main/examples/framework-fastify)\nfor more information.",
      "char_count": 884,
      "token_count": 250,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 250,
        "has_context": true
      }
    },
    {
      "index": 20,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Fresh (Deno)\nInngest works with Deno's\n[Fresh](https://fresh.deno.dev/)\n[framework](https://fresh.deno.dev/)\nvia the\n```\nesm.sh\n```\nCDN.  Add the serve handler to\n```\n./api/inngest.ts\n```\nas follows:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"https://esm.sh/inngest/deno/fresh\" ;\nimport { inngest } from \"./src/inngest/client.ts\" ;\nimport fnA from \"./src/inngest/fnA\" ; // Your own function\n\nexport const handler = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n});\n```",
      "char_count": 546,
      "token_count": 171,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 171,
        "has_context": true
      }
    },
    {
      "index": 21,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Google Cloud Run Functions\nGoogle's\n[Functions Framework](https://github.com/GoogleCloudPlatform/functions-framework-nodejs)\nhas an Express-compatible API which enables you to use the Express serve handler to deploy your Inngest functions to Google Cloud Run. This is an example of a function:\nv3 v2\nCopy Copied\n```\nimport * as ff from \"@google-cloud/functions-framework\" ;\nimport { serve } from \"inngest/express\" ;\nimport { inngest } from \"./src/inngest/client\" ;\nimport fnA from \"./src/inngest/fnA\" ; // Your own function\n\nff .http (\n\"inngest\" ,\nserve ({\nclient : inngest ,\nfunctions : [fnA] ,\nservePath : \"/\" ,\n})\n);\n```\nYou can run this locally with\n```\nnpx @google-cloud/functions-framework --target=inngest\n```\nwhich will serve your Inngest functions on port\n```\n8080\n```\n.\nSee the\n[Google Cloud Functions example](https://github.com/inngest/inngest-js/tree/main/examples/framework-google-functions-framework)\nfor more information.\n1st generation Cloud Run Functions are not officially supported. Using one may result in a signature verification error.",
      "char_count": 1132,
      "token_count": 275,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 275,
        "has_context": true
      }
    },
    {
      "index": 22,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Firebase Cloud Functions\nBased on the Google Cloud Function architecture, the Firebase Cloud Functions provide a different API to serve functions using\n```\nonRequest\n```\n:\nCopy Copied\n```\nimport { onRequest } from \"firebase-functions/v2/https\" ;\n\nimport { serve } from \"inngest/express\" ;\nimport { inngest as inngestClient } from \"./inngest/client\" ;\n\nexport const inngest = onRequest (\nserve ({\nclient : inngestClient ,\nfunctions : [ /* ...functions... */ ] ,\n})\n);\n```\nFirebase Cloud Functions require configuring\n```\nINNGEST_SERVE_PATH\n```\nwith the custom function path.\nFor example, for a project named\n```\ninngest-firebase-functions\n```\ndeployed on the\n```\nus-central1\n```\nregion, the\n```\nINNGEST_SERVE_PATH\n```\nvalue will be as follows:\nCopy Copied\n```\n/inngest-firebase-functions/us-central1/inngest/\n```\nTo serve your Firebase Cloud Function locally, use the following command:\nCopy Copied\n```\nfirebase emulators:start\n```\nPlease note that you'll need to start your Inngest Local Dev Server with the\n```\n-u\n```\nflag to match our Firebase Cloud Function's custom path  as follows:\nCopy Copied\n```\nnpx inngest-cli@latest dev -u http://127.0.0.1: 5001 /inngest-firebase-functions/us-central1/inngest\n```\n*The above command example features a project named*\n*```\ninngest-firebase-functions\n```*\n*deployed on the*\n*```\nus-central1\n```*\n*region*\n.",
      "char_count": 1423,
      "token_count": 383,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 383,
        "has_context": true
      }
    },
    {
      "index": 23,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: H3 v2.7.0+\nInngest supports\n[H3](https://github.com/unjs/h3)\nand frameworks built upon it. Here's a simple H3 server that hosts serves an Inngest function.",
      "char_count": 229,
      "token_count": 63,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 63,
        "has_context": true
      }
    },
    {
      "index": 24,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nindex.js\nv3 v2\nCopy Copied\n```\nimport { createApp , eventHandler , toNodeListener } from \"h3\" ;\nimport { serve } from \"inngest/h3\" ;\nimport { createServer } from \"node:http\" ;\nimport { inngest } from \"./inngest/client\" ;\nimport fnA from \"./inngest/fnA\" ;\n\nconst app = createApp ();\napp .use (\n\"/api/inngest\" ,\neventHandler (\nserve ({\nclient : inngest ,\nfunctions : [fnA] ,\n})\n)\n);\n\ncreateServer ( toNodeListener (app)) .listen ( process . env . PORT || 3000 );\n```\nSee the\n[github.com/unjs/h3](https://github.com/unjs/h3)\nrepository for more information about how to host an H3 endpoint.",
      "char_count": 650,
      "token_count": 193,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 193,
        "has_context": true
      }
    },
    {
      "index": 25,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Hono\nInngest supports the\n[Hono](https://hono.dev/)\nframework which is popularly deployed to Cloudflare Workers. Add the following to\n```\n./src/index.ts\n```\n:\nCopy Copied\n```\nimport { Hono } from \"hono\" ;\nimport { serve } from \"inngest/hono\" ;\nimport { functions , inngest } from \"./inngest\" ;\n\nconst app = new Hono ();\n\napp .on (\n[ \"GET\" , \"PUT\" , \"POST\" ] ,\n\"/api/inngest\" ,\nserve ({\nclient : inngest ,\nfunctions ,\n})\n);\n\nexport default app;\n```\nTo automatically pass environment variables defined with Wrangler to Inngest function handlers, use the\n[Hono bindings middleware](\\docs\\examples\\middleware\\cloudflare-workers-environment-variables)\n.\nIf you're using Hono with Cloudflare's Wrangler CLI in \"\n*cloud*\n\" mode, follow\n[the documentation above](\\docs\\learn\\serving-inngest-functions#local-development-with-wrangler)\nfor Cloudflare Workers.\nSee the\n[Hono example](https://github.com/inngest/inngest-js/blob/main/examples/framework-hono)\nfor more information.",
      "char_count": 1041,
      "token_count": 274,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 274,
        "has_context": true
      }
    },
    {
      "index": 26,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Koa v3.6.0+\nAdd the following to your routing file:\nCopy Copied\n```\nimport { serve } from \"inngest/koa\" ;\nimport Koa from \"koa\" ;\nimport bodyParser from \"koa-bodyparser\" ;\nimport { functions , inngest } from \"./inngest\" ;\n\nconst app = new Koa ();\napp .use ( bodyParser ()); // make sure we're parsing incoming JSON\n\nconst handler = serve ({\nclient : inngest ,\nfunctions ,\n});\n\napp .use ((ctx) => {\nif ( ctx . request .path === \"/api/inngest\" ) {\nreturn handler (ctx);\n}\n});\n```\nSee the\n[Koa example](https://github.com/inngest/inngest-js/tree/main/examples/framework-koa)\nfor more information.",
      "char_count": 667,
      "token_count": 182,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 182,
        "has_context": true
      }
    },
    {
      "index": 27,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: NestJS\nAdd the following to\n```\n./src/main.ts\n```\n:\nCopy Copied\n```\nimport { Logger } from '@nestjs/common' ;\nimport { NestFactory } from '@nestjs/core' ;\nimport { NestExpressApplication } from '@nestjs/platform-express' ;\nimport { serve } from 'inngest/express' ;\n\nimport { inngest } from '@modules/common/inngest/client' ;\nimport { getInngestFunctions } from '@modules/common/inngest/functions' ;\n\nimport { AppModule } from './app.module' ;\nimport { AppService } from './app.service' ;\n\nasync function bootstrap () {\nconst app = await NestFactory .create < NestExpressApplication >(AppModule , {\nbodyParser : true ,\n});\n\n// Setup inngest\napp .useBodyParser ( 'json' , { limit : '10mb' });\n\n// Inject Dependencies into inngest functions\n\nconst logger = app .get (Logger);\nconst appService = app .get (AppService);\n\n// Pass dependencies into this function\nconst inngestFunctions = getInngestFunctions ({\nappService ,\nlogger ,\n});\n\n// Register inngest endpoint\napp .use (\n'/api/inngest' ,\nserve ({\nclient : inngest ,\nfunctions : inngestFunctions ,\n}) ,\n);\n\n// Start listening for http requests\nawait app .listen ( 3000 );\n}\n\nbootstrap ();\n```\nSee the\n[NestJS example](https://github.com/inngest/inngest-js/tree/main/examples/framework-nestjs)\nfor more information.",
      "char_count": 1337,
      "token_count": 339,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 339,
        "has_context": true
      }
    },
    {
      "index": 28,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Next.js\nInngest has first class support for Next.js API routes, allowing you to easily create the Inngest API. Both the App Router and the Pages Router are supported. For the App Router, Inngest requires\n```\nGET\n```\n,\n```\nPOST\n```\n, and\n```\nPUT\n```\nmethods.\nApp Router Pages Router\nCopy Copied\n```\n// src/app/api/inngest/route.ts\nimport { serve } from \"inngest/next\" ;\nimport { inngest } from \"../../../inngest/client\" ;\nimport fnA from \"../../../inngest/fnA\" ; // Your own functions\n\nexport const { GET , POST , PUT } = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n});\n```",
      "char_count": 650,
      "token_count": 181,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 181,
        "has_context": true
      }
    },
    {
      "index": 29,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nStreaming v1.8.0+\nNext.js Functions hosted on\n[Vercel](\\docs\\deploy\\vercel)\nwith Fluid compute can stream responses back to Inngest which can help you reach the maximum duration of 800s (13m20s) provided you are on a paid Vercel plan.\nTo enable this, add the\n```\nstreaming: \"force\"\n```\noption to your serve handler:\n**Next.js 13+ on Fluid compute**\nCopy Copied\n```\nexport const { GET , POST , PUT } = serve ({\nclient : inngest ,\nfunctions : [ ... fns] ,\nstreaming : \"force\" ,\n});\n```\n**Edge runtime**\nIf you are not using Vercel Fluid compute, you can also stream responses to Inngest by running on their\n[edge runtime](https://vercel.com/docs/functions/runtimes/edge)\n.\nTo enable this, set your runtime to\n```\n\"edge\"\n```\nand add the\n```\nstreaming: \"allow\"\n```\noption to your serve handler:\n**Next.js 13+**\nCopy Copied\n```\nexport const runtime = \"edge\" ;\n\nexport const { GET , POST , PUT } = serve ({\nclient : inngest ,\nfunctions : [ ... fns] ,\nstreaming : \"allow\" ,\n});\n```\n**Older versions (Next.js 12)**\nv3 v2\nCopy Copied\n```\nexport const config = {\nruntime : \"edge\" ,\n};\n\nconst handler = serve ({\nclient : inngest ,\nfunctions : [ ... fns] ,\nstreaming : \"allow\" ,\n});\n```\nFor more information, check out the\n[Streaming](\\docs\\streaming)\npage.",
      "char_count": 1308,
      "token_count": 382,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 382,
        "has_context": true
      }
    },
    {
      "index": 30,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Nitro v3.24.0\nAdd the following to\n```\n./server/routes/api/inngest.ts\n```\n:\nCopy Copied\n```\nimport { serve } from \"inngest/nitro\" ;\nimport { inngest } from \"~~/inngest/client\" ;\nimport fnA from \"~~/inngest/fnA\" ; // Your own function\n\nexport default eventHandler (\nserve ({\nclient : inngest ,\nfunctions : [fnA] ,\n})\n);\n```\nSee the\n[Nitro example](https://github.com/inngest/inngest-js/tree/main/examples/framework-nitro)\nfor more information.",
      "char_count": 516,
      "token_count": 155,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 155,
        "has_context": true
      }
    },
    {
      "index": 31,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Nuxt v0.9.2+\nInngest has first class support for\n[Nuxt server routes](https://nuxt.com/docs/guide/directory-structure/server#server-routes)\n, allowing you to easily create the Inngest API.\nAdd the following within\n```\n./server/api/inngest.ts\n```\n:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/nuxt\" ;\nimport { inngest } from \"~~/inngest/client\" ;\nimport fnA from \"~~/inngest/fnA\" ; // Your own function\n\nexport default defineEventHandler (\nserve ({\nclient : inngest ,\nfunctions : [fnA] ,\n})\n);\n```\nSee the\n[Nuxt example](https://github.com/inngest/inngest-js/tree/main/examples/framework-nuxt)\nfor more information.",
      "char_count": 697,
      "token_count": 199,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 199,
        "has_context": true
      }
    },
    {
      "index": 32,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Redwood\nAdd the following to\n```\napi/src/functions/inngest.ts\n```\n:\nv3 v2\nCopy Copied\n```\nimport { serve } from \"inngest/redwood\" ;\nimport { inngest } from \"src/inngest/client\" ;\nimport fnA from \"src/inngest/fnA\" ; // Your own function\n\nexport const handler = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\nservePath : \"/api/inngest\" ,\n});\n```\nYou should also update your\n```\nredwood.toml\n```\nto add\n```\napiUrl = \"/api\"\n```\n, ensuring your API is served\nat the\n```\n/api\n```\nroot.",
      "char_count": 554,
      "token_count": 172,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 172,
        "has_context": true
      }
    },
    {
      "index": 33,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Remix\nAdd the following to\n```\n./app/routes/api.inngest.ts\n```\n:\nv3 v2\nCopy Copied\n```\n// app/routes/api.inngest.ts\nimport { serve } from \"inngest/remix\" ;\nimport { inngest } from \"~/inngest/client\" ;\nimport fnA from \"~/inngest/fnA\" ;\n\nconst handler = serve ({\nclient : inngest ,\nfunctions : [fnA] ,\n});\n\nexport { handler as action , handler as loader };\n```\nSee the\n[Remix example](https://github.com/inngest/inngest-js/tree/main/examples/framework-remix)\nfor more information.",
      "char_count": 552,
      "token_count": 158,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 158,
        "has_context": true
      }
    },
    {
      "index": 34,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nStreaming v2.3.0+\nRemix Edge Functions hosted on\n[Vercel](\\docs\\deploy\\vercel)\ncan also stream responses back to Inngest, giving you a much higher request timeout of 15 minutes (up from 10 seconds on the Vercel Hobby plan!).\nTo enable this, set your runtime to\n```\n\"edge\"\n```\n(see\n```\nstreaming: \"allow\"\n```\noption to your serve handler:\nv3 v2\nCopy Copied\n```\nexport const config = {\nruntime : \"edge\" ,\n};\n\nconst handler = serve ({\nclient : inngest ,\nfunctions : [ ... fns] ,\nstreaming : \"allow\" ,\n});\n```\nFor more information, check out the\n[Streaming](\\docs\\streaming)\npage.",
      "char_count": 639,
      "token_count": 184,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 184,
        "has_context": true
      }
    },
    {
      "index": 35,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: SvelteKit v3.5.0+\nAdd the following to\n```\n./src/routes/api/inngest/+server.ts\n```\n:\nCopy Copied\n```\nimport { functions , inngest } from '$lib/inngest' ;\nimport { serve } from 'inngest/sveltekit' ;\n\nconst inngestServe = serve ({ client : inngest , functions });\nexport const GET = inngestServe . GET ;\nexport const POST = inngestServe . POST ;\nexport const PUT = inngestServe . PUT ;\n```\nSee the\n[SvelteKit example](https://github.com/inngest/inngest-js/tree/main/examples/framework-sveltekit)\nfor more information.",
      "char_count": 589,
      "token_count": 164,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 164,
        "has_context": true
      }
    },
    {
      "index": 36,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nFramework: Tanstack Start\nAdd the following to\n```\n./src/routes/api/inngest.ts\n```\n:\nCopy Copied\n```\nimport { createServerFileRoute } from '@tanstack/react-start/server'\n\nimport { serve } from \"inngest/edge\" ;\nimport { inngest , functions } from \"../../inngest\" ;\n\nconst handler = serve ({ client : inngest , functions });\n\nexport const ServerRoute = createServerFileRoute ( '/api/inngest' ) .methods ({\nGET : async ({ request }) => handler (request) ,\nPOST : async ({ request }) => handler (request) ,\nPUT : async ({ request }) => handler (request)\n})\n```\nSee the\n[Tanstack Start example](https://github.com/inngest/inngest-js/tree/main/examples/framework-tanstack-start)\nfor more information.",
      "char_count": 757,
      "token_count": 191,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 191,
        "has_context": true
      }
    },
    {
      "index": 37,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nCustom frameworks\nIf the framework that your application uses is not included in the above list of first-party supported frameworks, you can create a custom\n```\nserve\n```\nhandler.\nTo create your own handler, check out the\n[example handler](https://github.com/inngest/inngest-js/blob/main/packages/inngest/src/test/functions/handler.ts)\nin our SDK's open source repository to understand how it works. Here's an example of a custom handler being created and used:\nCopy Copied\n```\nimport { Inngest , InngestCommHandler , type ServeHandlerOptions } from \"inngest\" ;\n\nconst serve = (options : ServeHandlerOptions ) => {\nconst handler = new InngestCommHandler ({\nframeworkName : \"edge\" ,\nfetch : fetch .bind (globalThis) ,\n... options ,\nhandler : (req : Request ) => {\nreturn {\nbody : () => req .json () ,\nheaders : (key) => req . headers .get (key) ,\nmethod : () => req .method ,\nurl : () => new URL ( req .url , `https:// ${ req . headers .get ( \"host\" ) || \"\" } ` ) ,\ntransformResponse : ({ body , status , headers }) => {\nreturn new Response (body , { status , headers });\n} ,\n};\n} ,\n});\n\nreturn handler .createHandler ();\n};\n\nconst inngest = new Inngest ({ id : \"example-edge-app\" });\n\nconst fn = inngest .createFunction (\n{ id : \"hello-world\" } ,\n{ event : \"test/hello.world\" } ,\n() => \"Hello, World!\"\n);\n\nexport default serve ({ client : inngest , functions : [fn] });\n```",
      "char_count": 1436,
      "token_count": 369,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 369,
        "has_context": true
      }
    },
    {
      "index": 38,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nSigning key\nYou'll need to assign your\n[signing key](\\docs\\platform\\signing-keys)\nto an\n[```\nINNGEST_SIGNING_KEY\n```](\\docs\\sdk\\environment-variables#inngest-signing-key)\nenvironment variable in your hosting\nprovider or\n```\n.env\n```\nfile locally, which lets the SDK securely communicate with Inngest. If you can't\nprovide this as a signing key, you can pass it in to\n```\nserve\n```\nwhen setting up your framework.\n[Read](\\docs\\sdk\\reference\\serve#reference)\n[the reference for more information](\\docs\\sdk\\reference\\serve#reference)\n.",
      "char_count": 595,
      "token_count": 161,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 161,
        "has_context": true
      }
    },
    {
      "index": 39,
      "text": "Setting up your Inngest app\nSupported frameworks and platforms\nOther configuration\nWhen using\n```\nserve\n```\n, allow requests up to 4 MB in size. This is the maximum request size that Inngest will send to your app. Configurating maximum request size is framework-specific, so check the documentation for your framework for more information.",
      "char_count": 339,
      "token_count": 73,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 73,
        "has_context": true
      }
    },
    {
      "index": 40,
      "text": "Setting up your Inngest app\nReference\nFor more information about the\n```\nserve\n```\nhandler, read the\n[the reference guide](\\docs\\reference\\serve)\n, which includes:\n- [`serve()`](\\docs\\reference\\serve#serve-client-functions-options) [configuration options](\\docs\\reference\\serve#serve-client-functions-options)\n- [How the serve handler works](\\docs\\reference\\serve#how-the-serve-api-handler-works)",
      "char_count": 396,
      "token_count": 100,
      "metadata": {
        "title": "Setting up your Inngest app",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\learn_serving-inngest-functions.md",
        "file_name": "learn_serving-inngest-functions.md",
        "file_size": 30820,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b81ec999ad82a92a3f3a3aff10611c227c6cdceafe60ddaf5a9cf7f36399e77b",
        "author": null,
        "created_at": "2025-10-13T00:00:04.321118",
        "modified_at": "2025-10-13T00:00:04.327238",
        "page_count": null,
        "word_count": 3717,
        "extracted_at": "2025-10-13T20:04:12.069905",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 41,
        "token_count": 100,
        "has_context": true
      }
    }
  ]
}