{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
  "title": "#### On this page",
  "num_chunks": 12,
  "total_chars": 7317,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Realtime: Stream updates from Inngest functions](\\docs\\examples\\realtime#realtime-stream-updates-from-inngest-functions)\n- [Pattern: Stream updates from a single function run](\\docs\\examples\\realtime#pattern-stream-updates-from-a-single-function-run)\n- [Pattern: Stream updates from multiple function runs](\\docs\\examples\\realtime#pattern-stream-updates-from-multiple-function-runs)\n- [Human in the loop: Bi-directional workflows](\\docs\\examples\\realtime#human-in-the-loop-bi-directional-workflows)\n- [Learn more](\\docs\\examples\\realtime#learn-more)\n[Examples](\\docs\\examples)",
      "char_count": 592,
      "token_count": 151,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 151,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Realtime: Stream updates from Inngest functions\nInngest Realtime enables you to stream updates from your functions, power live UIs, and implement bi-directional workflows such as Human-in-the-Loop. Use channels and topics to broadcast updates, stream logs, or await user input.",
      "char_count": 277,
      "token_count": 60,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 60,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Realtime: Stream updates from Inngest functions\nPattern: Stream updates from a single function run\nEnable users to follow the progress of a long-running task by streaming updates from a dedicated channel. Here's how to trigger a function and subscribe to its updates:\nCopy Copied\n```\nimport crypto from \"crypto\" ;\nimport { inngest } from \"@/inngest/client\" ;\nimport { subscribe } from \"@inngest/realtime\" ;\n\nexport async function POST (req : Request ) {\nconst json = await req .json ();\nconst { prompt } = json;\nconst uuid = crypto .randomUUID ();\n\nawait inngest .send ({\nname : \"hello-world/hello\" ,\ndata : { uuid } ,\n});\n\nconst stream = await subscribe (inngest , {\nchannel : `hello-world. ${ uuid } ` ,\ntopics : [ \"logs\" ] ,\n});\n\nreturn new Response ( stream .getEncodedStream () , {\nheaders : {\n\"Content-Type\" : \"text/event-stream\" ,\n\"Cache-Control\" : \"no-cache\" ,\nConnection : \"keep-alive\" ,\n} ,\n});\n}\n```\nYour function can then publish updates to this channel:\nCopy Copied\n```\nimport { Inngest } from \"inngest\" ;\nimport { realtimeMiddleware , channel , topic } from \"@inngest/realtime\" ;\n\nconst inngest = new Inngest ({\nid : \"my-app\" ,\nmiddleware : [ realtimeMiddleware ()] ,\n});\n\nexport const helloChannel = channel ((uuid : string ) => `hello-world. ${ uuid } ` ) .addTopic (\ntopic ( \"logs\" ) .type < string >()\n);\n\nexport const someTask = inngest .createFunction (\n{ id : \"hello-world\" } ,\n{ event : \"hello-world/hello\" } ,\nasync ({ event , step , publish }) => {\nconst { uuid } = event .data;\nawait publish ( helloChannel (uuid) .logs ( \"Hello, world!\" ));\n}\n);\n```\nBy creating a channel with a unique identifier, you can stream updates for a specific run to the end user.",
      "char_count": 1682,
      "token_count": 437,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 437,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Realtime: Stream updates from Inngest functions\nExplore the full source code\n[Clone this example locally to run it and explore the full source code.](https://github.com/inngest/inngest-js/tree/main/examples/realtime/nodejs/realtime-single-run-subscription)",
      "char_count": 256,
      "token_count": 60,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 60,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Realtime: Stream updates from Inngest functions\nPattern: Stream updates from multiple function runs\nA Realtime channel can be used to stream updates from multiple function runs. Here, we'll define two channels: one global channel and one post-specific channel:",
      "char_count": 260,
      "token_count": 52,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 52,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Realtime: Stream updates from Inngest functions\nPattern: Stream updates from multiple function runs\nsrc/inngest/channels.ts\nCopy Copied\n```\nimport {\nchannel ,\ntopic ,\n} from \"@inngest/realtime\" ;\nimport { z } from \"zod\" ;\n\nexport const globalChannel = channel ( \"global\" ) .addTopic ( topic ( \"logs\" ) .type < string >());\n\nexport const postChannel = channel ((postId : string ) => `post: ${ postId } ` )\n.addTopic (\ntopic ( \"updated\" ) .schema (\nz .object ({\nid : z .string () ,\nlikes : z .number () ,\n})\n)\n)\n.addTopic (\ntopic ( \"deleted\" ) .schema (\nz .object ({\nid : z .string () ,\nreason : z .string () ,\n})\n)\n);\n```\nOur\n```\nlikePost\n```\nfunction will publish updates to both channels:",
      "char_count": 689,
      "token_count": 193,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 193,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Realtime: Stream updates from Inngest functions\nPattern: Stream updates from multiple function runs\nsrc/inngest/functions/likePost.ts\nCopy Copied\n```\nimport {\nchannel ,\nrealtimeMiddleware ,\nsubscribe ,\ntopic ,\n} from \"@inngest/realtime\" ;\nimport { EventSchemas , Inngest } from \"inngest\" ;\nimport { globalChannel , postChannel } from \"../channels\" ;\n\nexport const likePost = app .createFunction (\n{\nid : \"post/like\" ,\nretries : 0 ,\n} ,\n{\nevent : \"app/post.like\" ,\n} ,\nasync ({\nevent : {\ndata : { postId = \"123\" } ,\n} ,\nstep ,\npublish ,\n}) => {\nif ( ! postId) {\nawait publish (\nglobalChannel () .logs ( \"Missing postId when trying to like post\" )\n);\nthrow new Error ( \"Missing postId\" );\n}\n\nawait publish ( globalChannel () .logs ( `Liking post ${ postId } ` ));\n\n// Fake a post update\nconst post = await step .run ( \"Update likes\" , async () => {\nconst fakePost = {\nid : \"123\" ,\nlikes : Math .floor ( Math .random () * 10000 ) ,\n};\n\nreturn publish ( postChannel ( fakePost .id) .updated (fakePost));\n});\n\nreturn post;\n}\n);\n```\nThe\n```\nglobalChannel\n```\nwill be used to stream updates for all posts, and the\n```\npostChannel\n```\nwill be used to stream updates for specific posts.",
      "char_count": 1177,
      "token_count": 327,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 327,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Realtime: Stream updates from Inngest functions\nExplore the full source code\n[Clone this example locally to run it and explore the full source code.](https://github.com/inngest/inngest-js/tree/main/examples/realtime/nodejs/realtime-across-multiple-channels)",
      "char_count": 257,
      "token_count": 62,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 62,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Realtime: Stream updates from Inngest functions\nHuman in the loop: Bi-directional workflows\nCombine Realtime with\n```\nwaitForEvent()\n```\nto enable workflows that require user input, such as review or approval steps. Here's how to send a message to the user and wait for their confirmation:\nCopy Copied\n```\nimport crypto from \"crypto\" ;\nimport { Inngest } from \"inngest\" ;\nimport { realtimeMiddleware , channel , topic } from \"@inngest/realtime\" ;\n\nconst inngest = new Inngest ({\nid : \"my-app\" ,\nmiddleware : [ realtimeMiddleware ()] ,\n});\n\nexport const agenticWorkflowChannel = channel ( \"agentic-workflow\" ) .addTopic (\ntopic ( \"messages\" ) .schema (\nz .object ({\nmessage : z .string () ,\nconfirmationUUid : z .string () ,\n})\n)\n);\n\nexport const agenticWorkflow = inngest .createFunction (\n{ id : \"agentic-workflow\" } ,\n{ event : \"agentic-workflow/start\" } ,\nasync ({ event , step , publish }) => {\nawait step .run ( /* ... */ );\nconst confirmationUUid = await step .run ( \"get-confirmation-uuid\" , async () => crypto .randomUUID ());\nawait publish ( agenticWorkflowChannel () .messages ({\nmessage : \"Confirm to proceed?\" ,\nconfirmationUUid ,\n}));\nconst confirmation = await step .waitForEvent ( \"wait-for-confirmation\" , {\nevent : \"agentic-workflow/confirmation\" ,\ntimeout : \"15m\" ,\nif : `async.data.confirmationUUid == \\\" ${ confirmationUUid } \\\"` ,\n});\nif (confirmation) {\n// continue workflow\n}\n}\n);\n```\nThe\n```\nconfirmationUUid\n```\nlinks the published message to the reply event, ensuring the correct user response is handled.",
      "char_count": 1531,
      "token_count": 389,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 389,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Realtime: Stream updates from Inngest functions\nExplore the full source code\n[Clone this example locally to run it and explore the full source code.](https://github.com/inngest/inngest-js/tree/main/examples/realtime/nodejs/realtime-human-in-the-loop)",
      "char_count": 250,
      "token_count": 60,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 60,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Realtime: Stream updates from Inngest functions\nLearn more\nRealtime documentation\n[Learn more about streaming updates and real-time workflows with Inngest.](\\docs\\features\\realtime)",
      "char_count": 181,
      "token_count": 42,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 42,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Realtime: Stream updates from Inngest functions\nLearn more\nUsing Realtime with Next.js\n[Learn how to use Realtime with Next.js.](\\docs\\features\\realtime\\react-hooks)",
      "char_count": 165,
      "token_count": 44,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\examples_realtime.md",
        "file_name": "examples_realtime.md",
        "file_size": 7677,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "763364c19fea88d2fd21fc1777c032a9aea8b6369578bcde26525310217988eb",
        "author": null,
        "created_at": "2025-10-12T23:58:30.114969",
        "modified_at": "2025-10-12T23:58:30.115538",
        "page_count": null,
        "word_count": 1056,
        "extracted_at": "2025-10-13T20:03:15.057958",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 44,
        "has_context": true
      }
    }
  ]
}