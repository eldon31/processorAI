{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
  "title": "#### On this page",
  "num_chunks": 11,
  "total_chars": 6948,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Inspecting a Function run](\\docs\\platform\\monitor\\inspecting-function-runs#inspecting-a-function-run)\n- [Accessing Function runs](\\docs\\platform\\monitor\\inspecting-function-runs#accessing-function-runs)\n- [Searching Function runs](\\docs\\platform\\monitor\\inspecting-function-runs#searching-function-runs)\n- [Searchable properties](\\docs\\platform\\monitor\\inspecting-function-runs#searchable-properties)\n- [Searching for errors](\\docs\\platform\\monitor\\inspecting-function-runs#searching-for-errors)\n- [The Function run details](\\docs\\platform\\monitor\\inspecting-function-runs#the-function-run-details)\n- [Performing actions from the Function run details](\\docs\\platform\\monitor\\inspecting-function-runs#performing-actions-from-the-function-run-details)\nPlatform\n[Monitor](\\docs\\platform\\monitor\\insights)",
      "char_count": 817,
      "token_count": 202,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 202,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Inspecting a Function run\nYou identified a failed Function run and want to identify the root cause? Or simply want to dig into a run's timings?\nThe Function run details will provide all the information to understand how this run ran and the tools to reproduce it locally.",
      "char_count": 271,
      "token_count": 54,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Inspecting a Function run\nAccessing Function runs\nFunctions runs across all application of the currently\n[selected environment](\\docs\\platform\\environments)\nare accessible via the \"Runs\" page in the left side navigation.\nThe \"Handle failed payments\" Function runs list features a run in a failing state.\n*Runs can be filtered using a Status, Queued or Started at and Application filters.*\nAccessing the runs of a specific Function is achieved via the \"Functions\" menu, as described in\n[the function run details section](\\docs\\platform\\monitor\\inspecting-function-runs#the-function-run-details)\n.",
      "char_count": 595,
      "token_count": 126,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 126,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Inspecting a Function run\nSearching Function runs\nAdvanced filters are available using a\n[CEL expression](\\docs\\guides\\writing-expressions)\n. The search feature is available by clicking on the \"Show search\" button next to the other run filters.\nThe runs list features an advance search feature that filters results using a CEL query.",
      "char_count": 333,
      "token_count": 69,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 69,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Inspecting a Function run\nSearching Function runs\nSearchable properties\nOnly basic search operators and\n```\nevent\n```\nand\n```\noutput\n```\nvariables are available for now:\n```\n== != == != == != > >= < <= == != == != > >= < <= == != > >= < <=\n```\nevent.id, Type = string. event.id, Operators = \nA few examples of valid search queries are\n```\nevent.data.hello == \"world\"\n```\nand\n```\noutput.success != true\n```\n.\n[Learn more about how expressions are used in Inngest.](\\docs\\guides\\writing-expressions)\nYou can combine multiple search queries using the\n```\n&&\n```\noperator or\n```\n||\n```\noperator. Adding a new line is the equivalent of using the\n```\n&&\n```\noperator.",
      "char_count": 661,
      "token_count": 183,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 183,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Inspecting a Function run\nSearching Function runs\nSearching for errors\nErrors are serialized as JSON on the\n```\noutput\n```\nobject. When supported by the language SDK, errors are deserialized into a structured object. Here is an example of a error in TypeScript:",
      "char_count": 261,
      "token_count": 56,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 56,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Inspecting a Function run\nSearching Function runs\nExample TypeScript code\nCopy Copied\n```\nthrow new NonRetriableError ( \"Failed to import data\" );\n```",
      "char_count": 150,
      "token_count": 36,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 36,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Inspecting a Function run\nSearching Function runs\nExample TypeScript error\nCopy Copied\n```\n{\n\"name\" : \"NonRetriableError\" ,\n\"message\" : \"Failed to import data\" ,\n\"stack\" : \"NonRetriableError: Failed to import data\\n    at V1InngestExecution.userFnToRun (/opt/render/project/src/build/inngest/ai.js:143:15) ...\"\n}\n```\nThis error can be searched using the following CEL expression:\nCopy Copied\n```\noutput.name == \"NonRetriableError\" && output.message == \"Failed to import data\"\n```\nUsing custom error types in TypeScript can make it easier to search by the type of error:\nExample TypeScript code\nCopy Copied\n```\nimport { NonRetriableError } from \"inngest\" ;\n\nclass UserNotFoundError extends NonRetriableError {\nconstructor (message : string ) {\nsuper (message);\nthis .name = \"UserNotFoundError\" ;\n}\n}\ninngest .createFunction (\n{ id : \"my-fn\" } ,\n{ event : \"user\" } ,\nasync ({ step , event }) => {\nawait step .run ( \"get-user\" , async () => {\nconst user = await getUser ( event . data .userId);\nif ( ! user) {\nthrow new UserNotFoundError ( `User not found ( ${ event . data .userId } )` );\n}\n// ...\n});\n}\n);\n```",
      "char_count": 1108,
      "token_count": 301,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 301,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Inspecting a Function run\nSearching Function runs\nExample search query\nCopy Copied\n```\nevent.data.userId == \"12345\" && output.name == \"UserNotFoundError\"\n```",
      "char_count": 157,
      "token_count": 40,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 40,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Inspecting a Function run\nThe Function run details\nA\n*Handle failed payments*\nfunction failed after retrying 5 times:\nThe \"Handle failed payments\" Function runs list features a run in a failing state.\nClicking on the failed Function Runs expands the run detail view:\nThe Function run details view displays the event payload on the left, some technical attributes (function version, timings) on the right and a timeline of steps on the bottom left.\nThe Function run details panel is divided in 3 parts:\n- On the top right: the **Trigger details** helpful when exchanging with Support\n- On the right: the **Event payload** that triggered the Function run\n- On the bottom right: the **Run details** with its timeline, a clear with of the Function's steps execution\nThe Function run details informs us that our Function run failed because of an\n```\nError: Failed to downgrade user\n```\nerror.\nThis is a first clue, let's have a closer look at the Timeline to identify the root cause:\nWe can now spot that the\n```\ndowngrade-account-billing-plan\n```\nfailed.\nLet's expand this step to look at the retries and errors.\nThe Timelime of steps features two steps: a first one to fetch the subscription from Stripe and second one to update it. The second is marked as failed.\nExpanding the second step lists all the attempted retries along with their respective error.\nExpanding a step provides the same level of details (the error message and timings) along with retries information.\nIt seems that our\n```\ndowngrade-account-billing-plan\n```\nstep raised the same error during the following 5 retries, we might have to perform a fix in the database.\n💡\n**Tips**\nClicking on the icon next to \"Run details\" open it in a new tab with a full-page layout.\nClicking on the icon next to \"Run details\" open it in a new tab with a full-page layout\nIt is useful for Function having a lot of steps or retries!",
      "char_count": 1882,
      "token_count": 418,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 418,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Inspecting a Function run\nPerforming actions from the Function run details\nThe Function run details provides two main actions: replay the Function Run or sending the trigger event to your local Inngest Dev Server.\nSending the trigger Event to your local Inngest Dev Server provides a quick way to reproduce issues that are not linked to external factors (ex: new function version recently deployed, data issues).\nAfter looking at the Function run details, the failure is judged temporary or fixed by a recent deployment, you can replay the Function run by using the \"Rerun\" button at the top right of the screen.\nThe rerun button is accessible in the header of the \"run details\" section of the Function run detail",
      "char_count": 713,
      "token_count": 144,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\platform_monitor_inspecting-function-runs.md",
        "file_name": "platform_monitor_inspecting-function-runs.md",
        "file_size": 8230,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "530771a4bf76e5cb20282922beafdfe1956f6801e1eaa5ef4a24901f56875825",
        "author": null,
        "created_at": "2025-10-13T00:00:19.099394",
        "modified_at": "2025-10-13T00:00:19.099394",
        "page_count": null,
        "word_count": 1111,
        "extracted_at": "2025-10-13T20:04:20.981516",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 144,
        "has_context": true
      }
    }
  ]
}