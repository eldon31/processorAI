{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
  "title": "#### On this page",
  "num_chunks": 12,
  "total_chars": 8307,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Create Function](\\docs\\reference\\functions\\create#create-function)\n- [inngest.createFunction(configuration, trigger, handler): InngestFunction](\\docs\\reference\\functions\\create#inngest-create-function-configuration-trigger-handler-inngest-function)\n- [Configuration](\\docs\\reference\\functions\\create#configuration)\n- [Trigger](\\docs\\reference\\functions\\create#trigger)\n- [Handler](\\docs\\reference\\functions\\create#handler)\nReferences\n[TypeScript SDK](\\docs\\reference\\typescript)",
      "char_count": 494,
      "token_count": 121,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 121,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Create Function\nDefine your functions using the\n```\ncreateFunction\n```\nmethod on the\n[Inngest client](\\docs\\reference\\client\\create)\n.\nCopy Copied\n```\nimport { inngest } from \"./client\" ;\n\nexport default inngest .createFunction (\n{ id : \"import-product-images\" } ,\n{ event : \"shop/product.imported\" } ,\nasync ({ event , step , runId }) => {\n// Your function code\n}\n);\n```",
      "char_count": 371,
      "token_count": 102,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 102,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nThe\n```\ncreateFunction\n```\nmethod accepts a series of arguments to define your function.",
      "char_count": 177,
      "token_count": 39,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 39,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nConfiguration\n- Name `id` Type string Required required Description A unique identifier for your function. This should not change between deploys.\n- Name `name` Type string Required optional Description A name for your function. If defined, this will be shown in the UI as a friendly display name instead of the ID.\n- Name `concurrency`\n- Name `throttle` Type object Required optional Description Limits the number of new function runs started over a given period of time ( [guide](\\docs\\guides\\throttling) ). Show nested properties\n- Name `idempotency` Type string Required optional Description A key expression which is used to prevent duplicate events from triggering a function more than once in 24 hours. This is equivalent to setting `rateLimit` with a `key` , a `limit` of `1` and `period` of `24hr` . [Read the idempotency guide here](\\docs\\guides\\handling-idempotency) . Expressions are defined using the Common Expression Language (CEL) with the original event accessible using dot-notation. Read [our guide to writing expressions](\\docs\\guides\\writing-expressions) for more info. Examples:\n- Name `rateLimit` Type object Required optional Description Options to configure how to rate limit function execution ( [reference](\\docs\\reference\\functions\\rate-limit) ) Show nested properties\n- Name `debounce` Type object Required optional Description Options to configure function debounce ( [reference](\\docs\\reference\\functions\\debounce) ) Show nested properties\n- Name `priority` Type object Required optional Description Options to configure how to prioritize functions Show nested properties\n- Name `batchEvents` Type object Required optional Description Configure how the function should consume batches of events ( [reference](\\docs\\guides\\batching) ) Show nested properties\n- Name `retries` Type number Required optional Description Configure the number of times the function will be retried from `0` to `20` . Default: `4`\n- Name `onFailure` Type function Required optional Description A function that will be called only when this Inngest function fails after all retries have been attempted ( [reference](\\docs\\reference\\functions\\handling-failures) )\n- Name `cancelOn` Type array of objects Required optional Description Define events that can be used to cancel a running or sleeping function ( [reference](\\docs\\reference\\typescript\\functions\\cancel-on) ) Show nested properties\n- Name `timeouts` Type object Required optional Description Options to configure timeouts for cancellation ( [reference](\\docs\\features\\inngest-functions\\cancellation\\cancel-on-timeouts) ) Show nested properties",
      "char_count": 2698,
      "token_count": 580,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 580,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nTrigger\nOne of the following function triggers is\n**Required**\n.\nYou can also specify an array of up to 10 of the following triggers to invoke\nyour function with multiple events or crons. See the\n[Multiple Triggers](\\docs\\guides\\multiple-triggers)\nguide.\nCron triggers with overlapping schedules for a single function will be deduplicated.\n- Name `event` Type string Required optional Description The name of the event that will trigger this event to run\n- Name `cron` Type string Required optional Description A [unix-cron](https://crontab.guru/) compatible schedule string. Optional timezone prefix, e.g. `TZ=Europe/Paris 0 12 * * 5` .\nWhen using an\n```\nevent\n```\ntrigger, you can optionally combine it with the\n```\nif\n```\noption to filter events:\nAdditional options\n- Name `if` Type string Required optional Description A comparison expression that returns true or false whether the function should handle or ignore a given matching event. Expressions are defined using the Common Expression Language (CEL) with the original event accessible using dot-notation. Read [our guide to writing expressions](\\docs\\guides\\writing-expressions) for more info. Examples:",
      "char_count": 1252,
      "token_count": 281,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 281,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nHandler\nThe handler is your code that runs whenever the trigger occurs. Every function handler receives a single object argument which can be deconstructed. The key arguments are\n```\nevent\n```\nand\n```\nstep\n```\n. Note, that scheduled functions that use a\n```\ncron\n```\ntrigger will not receive an\n```\nevent\n```\nargument.\nCopy Copied\n```\nfunction handler ({ event , events , step , runId , logger , attempt }) { /* ... */ }\n```",
      "char_count": 513,
      "token_count": 124,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 124,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nevent\nThe event payload\n```\nobject\n```\nthat triggered the given function run. The event payload object will match what you send with\n[```\ninngest.send()\n```](\\docs\\reference\\events\\send)\n. Below is an example event payload object:\nCopy Copied\n```\n{\nname : \"app/account.created\" ,\ndata : {\nuserId : \"1234567890\"\n} ,\nv : \"2023-05-12.1\" ,\nts : 1683898268584\n}\n```",
      "char_count": 449,
      "token_count": 147,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 147,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nevents v2.2.0+\n```\nevents\n```\nis an array of\n```\nevent\n```\npayload objects that's accessible when the\n```\nbatchEvents\n```\nis set on the function configuration.\nIf batching is not configured, the array contains a single event payload matching the\n```\nevent\n```\nargument.",
      "char_count": 358,
      "token_count": 90,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 90,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nstep\nThe\n```\nstep\n```\nobject has methods that enable you to define\n- [`step.run()`](\\docs\\reference\\functions\\step-run) - Run synchronous or asynchronous code as a retriable step in your function\n- [`step.sleep()`](\\docs\\reference\\functions\\step-sleep) - Sleep for a given amount of time\n- [`step.sleepUntil()`](\\docs\\reference\\functions\\step-sleep-until) - Sleep until a given time\n- [`step.invoke()`](\\docs\\reference\\functions\\step-invoke) - Invoke another Inngest function as a step, receiving the result of the invoked function\n- [`step.waitForEvent()`](\\docs\\reference\\functions\\step-wait-for-event) - Pause a function's execution until another event is received\n- [`step.sendEvent()`](\\docs\\reference\\functions\\step-send-event) - Send event(s) reliability within your function. Use this instead of `inngest.send()` to ensure reliable event delivery from within functions.",
      "char_count": 966,
      "token_count": 237,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 237,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nrunId\nThe unique ID for the given function run. This can be useful for logging and looking up specific function runs in the Inngest dashboard.",
      "char_count": 231,
      "token_count": 50,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 50,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nlogger v2.0.0+\nThe\n```\nlogger\n```\nobject exposes the following interfaces.\nCopy Copied\n```\nexport interface Logger {\ninfo ( ... args : any []) : void ;\nwarn ( ... args : any []) : void ;\nerror ( ... args : any []) : void ;\ndebug ( ... args : any []) : void ;\n}\n```\nIt is a proxy object that is either backed by\n```\nconsole\n```\nor the logger you provided (\n[reference](\\docs\\guides\\logging)\n).",
      "char_count": 481,
      "token_count": 129,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 129,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Create Function\ninngest.createFunction(configuration, trigger, handler): InngestFunction\nattempt v2.5.0+\nThe current zero-indexed attempt number for this function execution. The first attempt will be 0, the second 1, and so on. The attempt number is incremented every time the function throws an error and is retried.",
      "char_count": 317,
      "token_count": 73,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_create.md",
        "file_name": "reference_functions_create.md",
        "file_size": 8317,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3a1d88a1dff1a2485a12c35f800b1dcef9369b63e5da8ce17bc1f53703145859",
        "author": null,
        "created_at": "2025-10-13T00:00:31.363590",
        "modified_at": "2025-10-13T00:00:31.363590",
        "page_count": null,
        "word_count": 1041,
        "extracted_at": "2025-10-13T20:04:30.237721",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 12,
        "token_count": 73,
        "has_context": true
      }
    }
  ]
}