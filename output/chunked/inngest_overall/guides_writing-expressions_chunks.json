{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
  "title": "#### On this page",
  "num_chunks": 10,
  "total_chars": 5267,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Writing expressions](\\docs\\guides\\writing-expressions#writing-expressions)\n- [Types of Expressions](\\docs\\guides\\writing-expressions#types-of-expressions)\n- [Variables](\\docs\\guides\\writing-expressions#variables)\n- [Examples](\\docs\\guides\\writing-expressions#examples)\n- [Boolean Expressions](\\docs\\guides\\writing-expressions#boolean-expressions)\n- [Value Expressions](\\docs\\guides\\writing-expressions#value-expressions)\n- [Tips](\\docs\\guides\\writing-expressions#tips)\n- [Testing out expressions](\\docs\\guides\\writing-expressions#testing-out-expressions)\nFeatures\n[Events & Triggers](\\docs\\features\\events-triggers)",
      "char_count": 631,
      "token_count": 171,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 171,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Writing expressions\nExpressions are used in a number of ways for configuring your functions. They are used for:\n- Defining keys based on event properties for [concurrency](\\docs\\functions\\concurrency) , [rate limiting](\\docs\\reference\\functions\\rate-limit) , [debounce](\\docs\\reference\\functions\\debounce) , or [idempotency](\\docs\\guides\\handling-idempotency)\n- Conditionally matching events for [wait for event](\\docs\\reference\\functions\\step-wait-for-event) , [cancellation](\\docs\\guides\\cancel-running-functions) , or the [function trigger's](\\docs\\reference\\functions\\create#trigger) [`if`](\\docs\\reference\\functions\\create#trigger) [option](\\docs\\reference\\functions\\create#trigger)\n- Returning values for function [run priority](\\docs\\reference\\functions\\run-priority)\nAll expressions are defined using the\n[Common Expression Language (CEL)](https://github.com/google/cel-go)\n. CEL offers simple, fast, non-turing complete expressions. It allows Inngest to evaluate millions of expressions for all users at scale.",
      "char_count": 1019,
      "token_count": 251,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 251,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Writing expressions\nTypes of Expressions\nWithin the scope of Inngest, expressions should evaluate to either a boolean or a value:\n- **Booleans** - Any expression used for conditional matching should return a boolean value. These are used in wait for event, cancellation, and the function trigger's `if` option.\n- **Values** - Other expressions can return any value which might be used as keys (for example, concurrency, rate limit, debounce or [idempotency keys](\\docs\\guides\\handling-idempotency) ) or a dynamic value (for example, run priority).",
      "char_count": 547,
      "token_count": 124,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 124,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Writing expressions\nVariables\n- `event` refers to the event that triggered the function run, in every case.\n- `async` refers to a new event in `step.waitForEvent` and [cancellation](\\docs\\guides\\cancel-running-functions) . It's the incoming event which is matched asynchronously. This is only present when matching new events in a function run.",
      "char_count": 344,
      "token_count": 77,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 77,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Writing expressions\nExamples\nMost expressions are given the\n```\nevent\n```\npayload object as the input. Expressions that match additional events (for example, wait for event, cancellation) will also have the\n```\nasync\n```\nobject for the matched event payload. To learn more, consult this\n[reference of all the operators available in CEL](https://github.com/google/cel-spec/blob/master/doc/langdef.md#list-of-standard-definitions)\n.",
      "char_count": 430,
      "token_count": 96,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 96,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Writing expressions\nExamples\nBoolean Expressions\nCopy Copied\n```\n// Match a field to a string\n\"event.data.billingPlan == 'enterprise'\"\n\n// Number comparison\n\"event.data.amount > 1000\"\n\n// Combining multiple conditions\n\"event.data.billingPlan == 'enterprise' && event.data.amount > 1000\"\n\"event.data.billingPlan != 'pro' || event.data.amount < 300\"\n\n// Compare the function trigger with an inbound event (for wait for event or cancellation)\n\"event.data.userId == async.data.userId\"\n\n// Alternatively, you can use JavaScript string interpolation for wait for event\n` ${ userId } == async.data.userId` // => \"user_1234 == async.data.userId\"\n```",
      "char_count": 641,
      "token_count": 160,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 160,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Writing expressions\nExamples\nKeys\nCopy Copied\n```\n// Use the user's id as a concurrency key\n\"event.data.id\" // => \"1234\"\n\n// Concatenate two strings together to create a unique key\n`event.data.userId + \"-\" + event.type` // => \"user_1234-signup\"\n```",
      "char_count": 248,
      "token_count": 72,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 72,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Writing expressions\nExamples\nDynamic Values\nCopy Copied\n```\n// Return a 0 priority if the billing plan is enterprise, otherwise return 1800\n`event.data.billingPlan == 'enterprise' ? 0 : 1800`\n\n// Return a value based on multiple conditions\n`event.data.billingPlan == 'enterprise' && event.data.requestNumber < 10 ? 0 : 1800`\n```",
      "char_count": 328,
      "token_count": 94,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 94,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Writing expressions\nTips\n- Use `+` to concatenate strings\n- Use `==` for equality checks\n- You can use single `'` or double quotes `\"` for strings, but we recommend sticking with one for code consistency\n- When working with the TypeScript SDK, write expressions within backticks ``` to use quotes in your expression or use JavaScript's string interpolation.\n- Use ternary operators to return default values\n- When using the or operator ( `||` ), CEL will always return a boolean. This is different from JavaScript, where the or operator returns the value of the statement left of the operator if truthy. Use the ternary operator ( `?` ) instead of `||` for conditional returns.\nPlease note that while CEL supports a wide range of helpers and macros, Inngest only supports a subset of these to ensure a high level of performance and reliability.",
      "char_count": 844,
      "token_count": 179,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 179,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Writing expressions\nTesting out expressions\nYou can test out expressions on\n[Undistro's CEL Playground](https://playcel.undistro.io/)\n. It's a great way to quickly test out more complex expressions, especially with conditional returns.",
      "char_count": 235,
      "token_count": 49,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_writing-expressions.md",
        "file_name": "guides_writing-expressions.md",
        "file_size": 5716,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b3789df62e65cd79387731e691bc11e0060ee80e1420276fd9341243e74b0d1e",
        "author": null,
        "created_at": "2025-10-12T23:59:55.847349",
        "modified_at": "2025-10-12T23:59:55.847349",
        "page_count": null,
        "word_count": 641,
        "extracted_at": "2025-10-13T20:04:01.595445",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 49,
        "has_context": true
      }
    }
  ]
}