{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
  "title": "Cancel on Events",
  "num_chunks": 4,
  "total_chars": 3291,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Cancel on Events](\\docs\\features\\inngest-functions\\cancellation\\cancel-on-events#cancel-on-events)\n- [Tips](\\docs\\features\\inngest-functions\\cancellation\\cancel-on-events#tips)\nFeatures\n[Inngest Functions](\\docs\\features\\inngest-functions)\n[Cancellation](\\docs\\features\\inngest-functions\\cancellation)",
      "char_count": 317,
      "token_count": 88,
      "metadata": {
        "title": "Cancel on Events",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "file_name": "features_inngest-functions_cancellation_cancel-on-events.md",
        "file_size": 3431,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "8eb1ae60f0d51c559d2d3481b9325776840d4549b0c3ad4893e19cd084705def",
        "author": null,
        "created_at": "2025-10-12T23:58:45.457788",
        "modified_at": "2025-10-12T23:58:45.458292",
        "page_count": null,
        "word_count": 486,
        "extracted_at": "2025-10-13T20:03:21.335091",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 88,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Cancel on Events\nAs you have learned that you can trigger functions to run using events, you can also cancel active functions by sending an event.\nFor our example, we'll take a reminder app where a user can schedule to be reminded of something in the future at whatever time they want. The user can also delete the reminder if they change their mind and don't want to receive the reminder anymore.\nTypeScript Go Python\nDelaying code to run for days or weeks is easy with\n```\nstep.sleepUntil\n```\n, but we need a way to be able to stop the function if the user deletes the reminder while our function is \"sleeping.\"\nWhen defining a function, you can also specify the\n```\ncancelOn\n```\noption which allows you to list one or more events that, when sent to Inngest, will cause the sleep to be terminated and function will be marked as \"Canceled.\"\nHere is our schedule reminders function that leverages\n```\ncancelOn\n```\n:",
      "char_count": 915,
      "token_count": 204,
      "metadata": {
        "title": "Cancel on Events",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "file_name": "features_inngest-functions_cancellation_cancel-on-events.md",
        "file_size": 3431,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "8eb1ae60f0d51c559d2d3481b9325776840d4549b0c3ad4893e19cd084705def",
        "author": null,
        "created_at": "2025-10-12T23:58:45.457788",
        "modified_at": "2025-10-12T23:58:45.458292",
        "page_count": null,
        "word_count": 486,
        "extracted_at": "2025-10-13T20:03:21.335091",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 204,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Cancel on Events\ninngest/syncContacts.ts\nCopy Copied\n```\nconst scheduleReminder = inngest .createFunction (\n{\nid : \"schedule-reminder\" ,\ncancelOn : [{\nevent : \"tasks/reminder.deleted\" , // The event name that cancels this function\n// Ensure the cancellation event (async) and the triggering event (event)'s reminderId are the same:\nif : \"async.data.reminderId == event.data.reminderId\" ,\n}] ,\n}\n{ event : \"tasks/reminder.created\" } ,\nasync ({ event , step }) => {\nawait step .sleepUntil ( 'sleep-until-remind-at-time' , event . data .remindAt);\nawait step .run ( 'send-reminder-push' , async ({}) => {\nawait pushNotificationService .push ( event . data .userId , event . data .reminderBody)\n})\n}\n// ...\n);\n```\nLet's break down how this works:\n1. Whenever the function is triggered, a cancellation listener is created which waits for an `\"tasks/reminder.deleted\"` event to be received.\n2. The `if` statement tells Inngest that both the triggering event ( `\"tasks/reminder.created\"` ) and the cancellation event ( `\"tasks/reminder.deleted\"` ) have the same exact value for `data.reminderId` in each event payload. This makes sure that an event does not cancel a different reminder.\nFor more information on writing events, read our guide\n[on writing expressions](\\docs\\guides\\writing-expressions)\n.\nHere is an example of these two events which will be matched on the\n```\ndata.reminderId\n```\nfield:\nCopy Copied\n```\n{\n\"name\" : \"tasks/reminder.created\" ,\n\"data\" : {\n\"userId\" : \"user_123\" ,\n\"reminderId\" : \"reminder_0987654321\" ,\n\"reminderBody\" : \"Pick up Jane from the airport\"\n}\n}\n```\nCopy Copied\n```\n{\n\"name\" : \"tasks/reminder.deleted\" ,\n\"data\" : {\n\"userId\" : \"user_123\" ,\n\"reminderId\" : \"reminder_0987654321\" ,\n}\n}\n```",
      "char_count": 1715,
      "token_count": 471,
      "metadata": {
        "title": "Cancel on Events",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "file_name": "features_inngest-functions_cancellation_cancel-on-events.md",
        "file_size": 3431,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "8eb1ae60f0d51c559d2d3481b9325776840d4549b0c3ad4893e19cd084705def",
        "author": null,
        "created_at": "2025-10-12T23:58:45.457788",
        "modified_at": "2025-10-12T23:58:45.458292",
        "page_count": null,
        "word_count": 486,
        "extracted_at": "2025-10-13T20:03:21.335091",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 471,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Cancel on Events\nTips\n- You can also optionally specify a `timeout` to only enable cancellation for a period of time.\n- You can configure multiple events to cancel a function, up to five.\n- You can write a more complex matching statement using the `if` field.\nLearn more in the full\n[reference](\\docs\\reference\\typescript\\functions\\cancel-on)\n.",
      "char_count": 344,
      "token_count": 80,
      "metadata": {
        "title": "Cancel on Events",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\features_inngest-functions_cancellation_cancel-on-events.md",
        "file_name": "features_inngest-functions_cancellation_cancel-on-events.md",
        "file_size": 3431,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "8eb1ae60f0d51c559d2d3481b9325776840d4549b0c3ad4893e19cd084705def",
        "author": null,
        "created_at": "2025-10-12T23:58:45.457788",
        "modified_at": "2025-10-12T23:58:45.458292",
        "page_count": null,
        "word_count": 486,
        "extracted_at": "2025-10-13T20:03:21.335091",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 4,
        "token_count": 80,
        "has_context": true
      }
    }
  ]
}