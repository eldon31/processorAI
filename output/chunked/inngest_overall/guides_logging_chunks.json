{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
  "title": "#### On this page",
  "num_chunks": 9,
  "total_chars": 4858,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Logging in Inngest](\\docs\\guides\\logging#logging-in-inngest)\n- [Usage](\\docs\\guides\\logging#usage)\n- [Using your preferred logger](\\docs\\guides\\logging#using-your-preferred-logger)\n- [How it works](\\docs\\guides\\logging#how-it-works)\n- [child logger](\\docs\\guides\\logging#child-logger)\n- [Loggers supported](\\docs\\guides\\logging#loggers-supported)\nFeatures\n[Inngest Functions](\\docs\\features\\inngest-functions)",
      "char_count": 425,
      "token_count": 134,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 134,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Logging in Inngest\nLog handling can have some caveats when working with serverless runtimes.\nOne of the main problems is due to how serverless providers terminate after a function exits.\nThere might not be enough time for a logger to finish flushing, which results in logs being lost.\nAnother (opposite) problem is due to how Inngest handles memoization and code execution via HTTP calls to the SDK.\nA log statement outside of\n```\nstep\n```\nfunction could end up running multiple times, resulting in duplicated deliveries.",
      "char_count": 521,
      "token_count": 110,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 110,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Logging in Inngest\nexample-fn.ts\nCopy Copied\n```\nasync ({ event , step }) => {\nlogger .info ( \"something\" ) // this can be run three times\n\nawait step .run ( \"fn\" , () => {\nlogger .info ( \"something else\" ) // this will always be run once\n})\n\nawait step .run ( ... )\n}\n```\nWe provide a thin wrapper over existing logging tools, and export it to Inngest functions in order to mitigate these problems, so you, as the user, don't need to deal with them and things should work as you expect.",
      "char_count": 487,
      "token_count": 128,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 128,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Logging in Inngest\nUsage\nA\n```\nlogger\n```\nobject is available within all Inngest functions. You can use it with the logger of your choice,\nor if absent,\n```\nlogger\n```\nwill default to use\n```\nconsole\n```\n.\nCopy Copied\n```\ninngest .createFunction (\n{ id : \"my-awesome-function\" } ,\n{ event : \"func/awesome\" } ,\nasync ({ event , step , logger }) => {\nlogger .info ( \"starting function\" , { metadataKey : \"metadataValue\" });\n\nconst val = await step .run ( \"do-something\" , () => {\nif (somethingBadHappens) logger .warn ( \"something bad happened\" );\n});\n\nreturn { success : true , event };\n}\n);\n```\nThe exported logger provides the following interface methods:\nCopy Copied\n```\nexport interface Logger {\ninfo ( ... args : any []) : void ;\nwarn ( ... args : any []) : void ;\nerror ( ... args : any []) : void ;\ndebug ( ... args : any []) : void ;\n}\n```\nThese are very typical interfaces and are also on the\n[RFC5424 guidelines](https://datatracker.ietf.org/doc/html/rfc5424#section-6.2.1)\n, so most loggers you choose should work without issues.",
      "char_count": 1039,
      "token_count": 285,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 285,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Logging in Inngest\nUsing your preferred logger\nRunning\n```\nconsole.log\n```\nis good for local development, but you probably want something more when running workloads in Production.\nThe following is an example using\n[winston](https://github.com/winstonjs/winston)\nas the logger to be passed into Inngest functions.",
      "char_count": 313,
      "token_count": 71,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 71,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Logging in Inngest\nUsing your preferred logger\ninngest/client.ts\nCopy Copied\n```\nimport { Inngest } from \"inngest\" ;\nimport winston from \"winston\" ;\n\n/// Assuming we're deploying to Vercel.\n/// Other providers likely have their own pre-defined environment variables you can use.\nconst env = process . env . VERCEL_ENV || \"development\" ;\nconst ddTransportOps = {\nhost : \"http-intake.logs.datadoghq.com\" ,\npath : `/api/v2/logs?dd-api-key= ${ process . env . DD_API_KEY } &ddsource=nextjs&service=inngest&ddtags=env: ${ env } ` ,\nssl : true ,\n};\n\nconst logger = winston .createLogger ({\nlevel : \"info\" ,\nexitOnError : false ,\nformat : winston . format .json () ,\ntransports : [\nnew winston . transports .Console () ,\nnew winston . transports .Http (ddTransportOps) ,\n] ,\n});\n\n// Pass `logger` to the Inngest client, and this winston logger will be accessible within functions\nexport const inngest = new Inngest ({\nid : \"my-awesome-app\" ,\nlogger : logger ,\n// ...\n});\n```",
      "char_count": 967,
      "token_count": 262,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 262,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Logging in Inngest\nHow it works\nThere is a built-in\n[logging middleware](\\docs\\reference\\middleware\\examples#logging)\nthat provides a good default to work\nwith.",
      "char_count": 160,
      "token_count": 41,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 41,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Logging in Inngest\nHow it works\nchild logger\nIf the logger library supports a child logger\n```\n.child()\n```\nimplementation, the built-in middleware will utilize it to add\nfunction runtime metadata for you:\n- function name\n- event name\n- run ID",
      "char_count": 243,
      "token_count": 57,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 57,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Logging in Inngest\nLoggers supported\nThe following is a list of loggers we're aware of that work, but is not an exhaustive list:\n- [Winston](https://github.com/winstonjs/winston) child logger support\n- [Pino](https://github.com/pinojs/pino) child logger support\n- [Bunyan](https://github.com/trentm/node-bunyan) child logger support\n- [Roarr](https://github.com/gajus/roarr) child logger support\n- [LogLevel](https://github.com/pimterry/loglevel)\n- [Log4js](https://github.com/log4js-node/log4js-node)\n- [npmlog](https://github.com/npm/npmlog) (doesn't have `.debug()` but has a way to add custom levels)\n- [Tracer](https://github.com/baryon/tracer)\n- [Signale](https://github.com/klaudiosinani/signale)",
      "char_count": 703,
      "token_count": 207,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_logging.md",
        "file_name": "guides_logging.md",
        "file_size": 5077,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "5ff3bc49bc3d021dfc111e607df9ed42e1f9e0c20d42aafac32f80409b2f6794",
        "author": null,
        "created_at": "2025-10-12T23:59:34.722121",
        "modified_at": "2025-10-12T23:59:34.722121",
        "page_count": null,
        "word_count": 697,
        "extracted_at": "2025-10-13T20:03:46.463050",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 9,
        "token_count": 207,
        "has_context": true
      }
    }
  ]
}