{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
  "title": "#### On this page",
  "num_chunks": 6,
  "total_chars": 6315,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Sending events from functions](\\docs\\guides\\sending-events-from-functions#sending-events-from-functions)\n- [How to send events from functions](\\docs\\guides\\sending-events-from-functions#how-to-send-events-from-functions)\n- [Why step.sendEvent() vs. inngest.send()?](\\docs\\guides\\sending-events-from-functions#why-step-send-event-vs-inngest-send)\n- [Why step.send](\\docs\\guides\\sending-events-from-functions#why-step-send-event-vs-inngest-send-2)\n[_](\\docs\\guides\\sending-events-from-functions#why-step-send-event-vs-inngest-send-2)\n[event() vs. inngest.send()?](\\docs\\guides\\sending-events-from-functions#why-step-send-event-vs-inngest-send-2)\n- [Parallel functions vs. parallel steps](\\docs\\guides\\sending-events-from-functions#parallel-functions-vs-parallel-steps)\n- [Sending events vs. invoking](\\docs\\guides\\sending-events-from-functions#sending-events-vs-invoking)\nFeatures\n[Events & Triggers](\\docs\\features\\events-triggers)",
      "char_count": 946,
      "token_count": 247,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 247,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Sending events from functions\nIn some workflows or pipeline functions, you may want to broadcast events from within your function to trigger\n*other*\nfunctions. This pattern is useful when:\n- You want to decouple logic into separate functions that can be re-used across your system\n- You want to send an event to [fan-out](\\docs\\guides\\fan-out-jobs) to multiple other functions\n- Your function is handling many items that you want to process in parallel functions\n- You want to [cancel](\\docs\\guides\\cancel-running-functions) another function\n- You want to send data to another function [waiting for an event](\\docs\\reference\\functions\\step-wait-for-event)\nIf your function needs to handle the result of another function, or wait until that other function has completed, you should use\n[direct function invocation](\\docs\\guides\\invoking-functions-directly)\ninstead.",
      "char_count": 864,
      "token_count": 191,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 191,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Sending events from functions\nHow to send events from functions\nTypeScript Go Python\nTo send events from within functions, you will use\n[```\nstep.sendEvent()\n```](\\docs\\reference\\functions\\step-send-event)\n. This method takes a single event, or an array of events. The example below uses an array of events.\nThis is an example of a\n[scheduled function](\\docs\\guides\\scheduled-functions)\nthat sends a weekly activity email to all users.\nFirst, the function fetches all users, then it maps over all users to create a\n```\n\"app/weekly-email-activity.send\"\n```\nevent for each user, and finally it sends all events to Inngest.\nCopy Copied\n```\nimport { GetEvents , Inngest } from \"inngest\" ;\n\nconst inngest = new Inngest ({ id : \"signup-flow\" });\ntype Events = GetEvents < typeof inngest>;\n\nexport const loadCron = inngest .createFunction (\n{ id : \"weekly-activity-load-users\" } ,\n{ cron : \"0 12 * * 5\" } ,\nasync ({ event , step }) => {\n// Fetch all users\nconst users = await step .run ( \"fetch-users\" , async () => {\nreturn fetchUsers ();\n});\n\n// For each user, send us an event.  Inngest supports batches of events\n// as long as the entire payload is less than 512KB.\nconst events = users .map < Events [ \"app/weekly-email-activity.send\" ]>(\n(user) => {\nreturn {\nname : \"app/weekly-email-activity.send\" ,\ndata : {\n... user ,\n} ,\nuser ,\n};\n}\n);\n\n// Send all events to Inngest, which triggers any functions listening to\n// the given event names.\nawait step .sendEvent ( \"fan-out-weekly-emails\" , events);\n\n// Return the number of users triggered.\nreturn { count : users . length };\n}\n);\n```\nNext, create a function that listens for the\n```\n\"app/weekly-email-activity.send\"\n```\nevent. This function will be triggered for each user that was sent an event in the previous function.\nCopy Copied\n```\nexport const sendReminder = inngest .createFunction (\n{ id : \"weekly-activity-send-email\" } ,\n{ event : \"app/weekly-email-activity.send\" } ,\nasync ({ event , step }) => {\nconst data = await step .run ( \"load-user-data\" , async () => {\nreturn loadUserData ( event . data . user .id);\n});\n\nawait step .run ( \"email-user\" , async () => {\nreturn sendEmail ( event . data .user , data);\n});\n}\n);\n```\nEach of these functions will run in parallel and individually retry on error, resulting in a faster, more reliable system.\nðŸ’¡\n**Tip**\n: When triggering lots of functions to run in parallel, you will likely want to configure\n```\nconcurrency\n```\nlimits to prevent overloading your system. See our\n[concurrency guide](\\docs\\guides\\concurrency)\nfor more information.",
      "char_count": 2544,
      "token_count": 658,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 658,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Sending events from functions\nHow to send events from functions\nWhy step.sendEvent() vs. inngest.send() ?\nBy using\n[```\nstep.sendEvent()\n```](\\docs\\reference\\functions\\step-send-event)\nInngest's SDK can automatically add context and tracing which ties events to the current function run. If you use\n[```\ninngest.send()\n```](\\docs\\reference\\events\\send)\n, the context around the function run is not present.",
      "char_count": 406,
      "token_count": 102,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 102,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Sending events from functions\nParallel functions vs. parallel steps\nAnother technique similar is running multiple steps in parallel (read the\n[step parallelism guide](\\docs\\guides\\step-parallelism)\n). Here are the key differences:\n- Both patterns run code in parallel\n- With parallel steps, you can access the output of each step, whereas with the above example, you cannot\n- Parallel steps have limit of 1,000 steps, though you can trigger as many functions as you'd like using the send event pattern\n- Decoupled functions can be tested and [replayed](\\docs\\platform\\replay) separately, whereas parallel steps can only be tested as a whole\n- You can retry individual functions easily if they permanently fail, whereas if a step permanently fails (after retrying) the function itself will fail and terminate.",
      "char_count": 808,
      "token_count": 176,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 176,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Sending events from functions\nSending events vs. invoking\nA related pattern is invoking external functions directly instead of just triggering them with an event. See the\n[Invoking functions directly](\\docs\\guides\\invoking-functions-directly)\nguide. Here are some key differences:\n- Sending events from functions is better suited for parallel processing of independent tasks and invocation is better for coordinated, interdependent functions\n- Sending events can be done in bulk, whereas invoke can only invoke one function at a time.\n- Sending events can be combined with [fan-out](\\docs\\guides\\fan-out-jobs) to trigger multiple functions from a single event\n- Unlike invocation, sending events will not receive the result of the invoked function",
      "char_count": 747,
      "token_count": 148,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_sending-events-from-functions.md",
        "file_name": "guides_sending-events-from-functions.md",
        "file_size": 6451,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b61b8585a2bba5da22014be74dc93a07a35de1adb3e555fecfc6065962153ca2",
        "author": null,
        "created_at": "2025-10-12T23:59:45.960672",
        "modified_at": "2025-10-12T23:59:45.961176",
        "page_count": null,
        "word_count": 841,
        "extracted_at": "2025-10-13T20:03:54.808520",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 6,
        "token_count": 148,
        "has_context": true
      }
    }
  ]
}