{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
  "title": "#### On this page",
  "num_chunks": 5,
  "total_chars": 3882,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Rate limit function execution](\\docs\\reference\\functions\\rate-limit#rate-limit-function-execution)\n- [Configuration](\\docs\\reference\\functions\\rate-limit#configuration)\n- [Examples](\\docs\\reference\\functions\\rate-limit#examples)\n- [Limiting synchronization triggered by webhook events](\\docs\\reference\\functions\\rate-limit#limiting-synchronization-triggered-by-webhook-events)\n- [Send at most one email for multiple alerts over an hour](\\docs\\reference\\functions\\rate-limit#send-at-most-one-email-for-multiple-alerts-over-an-hour)\nReferences\n[TypeScript SDK](\\docs\\reference\\typescript)",
      "char_count": 602,
      "token_count": 143,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "file_name": "reference_functions_rate-limit.md",
        "file_size": 4236,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "43bf721459af185cbbb8afe6c7ea68e099bc540687ed2164626f677546147fe7",
        "author": null,
        "created_at": "2025-10-13T00:00:35.439645",
        "modified_at": "2025-10-13T00:00:35.439740",
        "page_count": null,
        "word_count": 570,
        "extracted_at": "2025-10-13T20:04:31.549234",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 5,
        "token_count": 143,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Rate limit function execution\nSet a\n*hard limit*\non how many function runs can start within a time period. Events that exceed the rate limit are\n*skipped*\nand do not trigger functions to start.\nSee the\n[Rate Limiting guide](\\docs\\guides\\rate-limiting)\nfor more information about how this feature works.\nCopy Copied\n```\nexport default inngest .createFunction (\n{\nid : \"synchronize-data\" ,\nrateLimit : {\nkey : \"event.data.company_id\" ,\nlimit : 1 ,\nperiod : \"4h\" ,\n} ,\n} ,\n{ event : \"intercom/company.updated\" } ,\nasync ({ event , step }) => {\n// This function will be rate limited\n// It will only run 1 once per 4 hours for a given event payload with matching company_id\n}\n);\n```",
      "char_count": 677,
      "token_count": 177,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "file_name": "reference_functions_rate-limit.md",
        "file_size": 4236,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "43bf721459af185cbbb8afe6c7ea68e099bc540687ed2164626f677546147fe7",
        "author": null,
        "created_at": "2025-10-13T00:00:35.439645",
        "modified_at": "2025-10-13T00:00:35.439740",
        "page_count": null,
        "word_count": 570,
        "extracted_at": "2025-10-13T20:04:31.549234",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 5,
        "token_count": 177,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Rate limit function execution\nConfiguration\n- Name `rateLimit` Type object Required optional Description Options to configure how to rate limit function execution Properties",
      "char_count": 173,
      "token_count": 28,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "file_name": "reference_functions_rate-limit.md",
        "file_size": 4236,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "43bf721459af185cbbb8afe6c7ea68e099bc540687ed2164626f677546147fe7",
        "author": null,
        "created_at": "2025-10-13T00:00:35.439645",
        "modified_at": "2025-10-13T00:00:35.439740",
        "page_count": null,
        "word_count": 570,
        "extracted_at": "2025-10-13T20:04:31.549234",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 5,
        "token_count": 28,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Rate limit function execution\nExamples\nLimiting synchronization triggered by webhook events\nIn this example, we use events from the Intercom webhook. The webhook can be overly chatty and send multiple\n```\nintercom/company.updated\n```\nevents in a short time window. We also only really care to sync the user's data from Intercom no more than 4 times per day, so we set our limit to\n```\n6h\n```\n:\nCopy Copied\n```\n/** Example event payload:\n{\nname: \"intercom/company.updated\",\ndata: {\ncompany_id: \"123456789\",\ncompany_name: \"Acme, Inc.\"\n}\n}\n*/\nexport default inngest .createFunction (\n{\nid : \"synchronize-data\" ,\nrateLimit : {\nkey : \"event.data.company_id\" ,\nlimit : 1 ,\nperiod : \"4h\" ,\n} ,\n} ,\n{ event : \"intercom/company.updated\" } ,\nasync ({ event , step }) => {\nconst company = await step .run (\n\"fetch-latest-company-data-from-intercom\" ,\nasync () => {\nreturn await client . companies .find ({\ncompanyId : event . data .company_id ,\n});\n}\n);\n\nawait step .run ( \"update-company-data-in-database\" , async () => {\nreturn await database . companies .upsert ({ id : company .id } , company);\n});\n}\n);\n```",
      "char_count": 1100,
      "token_count": 291,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "file_name": "reference_functions_rate-limit.md",
        "file_size": 4236,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "43bf721459af185cbbb8afe6c7ea68e099bc540687ed2164626f677546147fe7",
        "author": null,
        "created_at": "2025-10-13T00:00:35.439645",
        "modified_at": "2025-10-13T00:00:35.439740",
        "page_count": null,
        "word_count": 570,
        "extracted_at": "2025-10-13T20:04:31.549234",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 5,
        "token_count": 291,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Rate limit function execution\nExamples\nSend at most one email for multiple alerts over an hour\nWhen there is an issue in your system, you may want to send your user an email notification, but don't want to spam them. The issue may repeat several times within the span of few minutes, but the user really just needs one email. You can\nCopy Copied\n```\n/** Example event payload:\n{\nname: \"service/check.failed\",\ndata: {\nincident_id: \"01HB9PWHZ4CZJYRAGEY60XEHCZ\",\nissue: \"HTTP uptime check failed at 2023-09-26T21:23:51.515631317Z\",\nuser_id: \"user_aW5uZ2VzdF9pc19mdWNraW5nX2F3ZXNvbWU=\",\nservice_name: \"api\",\nservice_id: \"01HB9Q2EFBYG2B7X8VCD6JVRFH\"\n},\nuser: {\nexternal_id: \"user_aW5uZ2VzdF9pc19mdWNraW5nX2F3ZXNvbWU=\",\nemail: \"user @example .com\"\n}\n}\n*/\nexport default inngest .createFunction (\n{\nid : \"send-check-failed-notification\" ,\nrateLimit : {\n// Don't send duplicate emails to the same user for the same service over 1 hour\nkey : `event.data.user_id + \"-\" + event.data.service_id` ,\nlimit : 1 ,\nperiod : \"1h\" ,\n} ,\n} ,\n{ event : \"service/check.failed\" } ,\nasync ({ event , step }) => {\nawait step .run ( \"send-alert-email\" , async () => {\nreturn await resend . emails .send ({\nfrom : \"notifications@myco.com\" ,\nto : event . user .email ,\nsubject : `ALERT: ${ event . data .issue } ` ,\ntext : `Dear user, ...` ,\n});\n});\n}\n);\n```",
      "char_count": 1330,
      "token_count": 439,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\reference_functions_rate-limit.md",
        "file_name": "reference_functions_rate-limit.md",
        "file_size": 4236,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "43bf721459af185cbbb8afe6c7ea68e099bc540687ed2164626f677546147fe7",
        "author": null,
        "created_at": "2025-10-13T00:00:35.439645",
        "modified_at": "2025-10-13T00:00:35.439740",
        "page_count": null,
        "word_count": 570,
        "extracted_at": "2025-10-13T20:04:31.549234",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 5,
        "token_count": 439,
        "has_context": true
      }
    }
  ]
}