{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
  "title": "#### On this page",
  "num_chunks": 11,
  "total_chars": 6815,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Singleton Functions](\\docs\\guides\\singleton#singleton-functions)\n- [When to use Singleton Functions](\\docs\\guides\\singleton#when-to-use-singleton-functions)\n- [Singleton compared to concurrency:](\\docs\\guides\\singleton#singleton-compared-to-concurrency)\n- [Singleton compared to Rate Limiting:](\\docs\\guides\\singleton#singleton-compared-to-rate-limiting)\n- [How it works](\\docs\\guides\\singleton#how-it-works)\n- [Using a key](\\docs\\guides\\singleton#using-a-key)\n- [Two modes: Skip vs Cancel](\\docs\\guides\\singleton#two-modes-skip-vs-cancel)\n- [Compatibility with other flow control features](\\docs\\guides\\singleton#compatibility-with-other-flow-control-features)\n- [FAQ](\\docs\\guides\\singleton#faq)\n- [How does Singleton Functions work with retries?](\\docs\\guides\\singleton#how-does-singleton-functions-work-with-retries)\nFeatures\n[Inngest Functions](\\docs\\features\\inngest-functions)\n[Flow Control](\\docs\\guides\\flow-control)",
      "char_count": 941,
      "token_count": 255,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 255,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nSingleton Functions enable you to ensure that only a single run of your function (\n*or a set of specific function runs, based on specific event properties*\n) is happening at a time.\nSingleton Functions only process one run at a time.\nSingleton Functions only process one run at a time.\nSingleton Functions are available in the TypeScript SDK starting from version 3.39.0.",
      "char_count": 440,
      "token_count": 103,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 103,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nWhen to use Singleton Functions\nSingleton Functions are useful when you want to ensure that only a single instance of a function is running at a time, for example:\n- A third-party data synchronization workflow\n- A compute- or time-intensive function that should not be run multiple times at the same time (ex: AI processing)",
      "char_count": 393,
      "token_count": 92,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 92,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nWhen to use Singleton Functions\nSingleton compared to concurrency:\nWhile\n[Concurrency](\\docs\\guides\\concurrency)\nset to\n```\n1\n```\nensures that only a single step of a given function is running at a time, Singleton Functions ensure that only a single run of a given function is happening at a time.",
      "char_count": 366,
      "token_count": 96,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 96,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nWhen to use Singleton Functions\nSingleton compared to Rate Limiting:\n[Rate Limiting](\\docs\\guides\\rate-limiting)\nis similar to Singleton Functions, but it is designed to limit the number of runs started within a time period, whereas Singleton Functions are designed to ensure that only a single run of a function occurs over a given time window.\nRate Limiting is useful for controlling the rate of execution of a function, while Singleton Functions are useful for ensuring that only a single run of a function occurs over a given time window.",
      "char_count": 611,
      "token_count": 136,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 136,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nHow it works\nSingleton Functions are configured using the\n```\nsingleton\n```\nproperty in the function definition.\nThe following\n```\ndata-sync\n```\nfunction demonstrates singleton behavior scoped to individual users. Depending on the\n```\nmode\n```\n, new runs will either be skipped or will cancel the existing run:\nCopy Copied\n```\nconst dataSync = inngest .createFunction ({\nid : \"data-sync\" ,\nsingleton : {\nkey : \"event.data.user_id\" ,\nmode : \"skip\" ,\n}\n} ,\n{ event : \"data-sync.start\" } ,\nasync ({ event }) => {\n// ...\n} ,\n);\n```\nRefer to the\n[reference documentation](\\docs\\reference\\functions\\singleton)\nfor more details.",
      "char_count": 690,
      "token_count": 182,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 182,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nHow it works\nUsing a key\nWhen a\n```\nkey\n```\nis added, the unique runs rule is applied for each unique value of the\n```\nkey\n```\nexpression. For example, if your\n```\nkey\n```\nis set to\n```\nevent.data.user_id\n```\n,\neach user would have their individual singleton rule applied to functions runs, ensuring that only a single run of the function is happening at a time for each user. Read\n[our guide to writing expressions](\\docs\\guides\\writing-expressions)\nfor more information.",
      "char_count": 541,
      "token_count": 148,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 148,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nHow it works\nTwo modes: Skip vs Cancel\nSingleton Functions can be configured to either skip the new run or cancel the existing run and start a new one.\nThe\n```\nmode\n```\nproperty configures the behavior of the Singleton Function:\n- `\"skip\"` - Skips the new run if another run is already executing.\n- `\"cancel\"` - Cancels the existing run and starts the new one.\n**Cancel mode behavior**\n: Triggering multiple function runs with the same key in very rapid succession may result in some runs being skipped rather than cancelled, similar to a debounce effect. This prevents excessive cancellation overhead when events are triggered in quick bursts.",
      "char_count": 713,
      "token_count": 160,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 160,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nHow it works\nWhen should I use \"cancel\" mode vs \"skip\" mode?\nUse\n```\n\"skip\"\n```\nmode when you want to prevent duplicate work and preserve the currently running function. Use\n```\n\"cancel\"\n```\nmode when you want to ensure the most recent event is always processed, even if it means cancelling an in-progress run.\nSkip mode Cancel mode\nCopy Copied\n```\nconst dataSync = inngest .createFunction ({\nid : \"data-sync\" ,\nsingleton : {\nkey : \"event.data.user_id\" ,\nmode : \"skip\" ,\n}\n} ,\n{ event : \"data-sync.start\" } ,\nasync ({ event }) => {\nconst userId = event . data .user_id;\n\n// This long-running sync process will not be interrupted\n// If another sync is triggered for this user, it will be skipped\nconst data = await syncUserDataFromExternalAPI (userId);\nconst processed = await processLargeDataset (data);\nawait updateDatabase (processed);\n} ,\n);\n```",
      "char_count": 917,
      "token_count": 236,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 236,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nCompatibility with other flow control features\nSingleton Functions can be combined with other flow control features, with the following considerations:\nDebounce, Compatibility = ✅. Debounce, Considerations = Can be used together without issues.. Rate limiting, Compatibility = ✅. Rate limiting, Considerations = Similar functionality but rate limiting operates over a predefined time window rather than function execution duration.. Throttling, Compatibility = ✅. Throttling, Considerations = Similar functionality but throttling enqueues events over time rather than discarding/canceling them.. Concurrency, Compatibility = ❌. Concurrency, Considerations = Singleton functions implicitly have a concurrency of 1. A concurrency setting can be set but should be used with caution.. Batching, Compatibility = ❌. Batching, Considerations = Singleton isn't compatible with batching; function registration will fail if both are set.",
      "char_count": 996,
      "token_count": 204,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 204,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Singleton Functions TypeScript v3.39.0+ Go SDK v0.12.0+ Python v0.5+\nFAQ\nHow does Singleton Functions work with retries?\nIf a singleton function fails and is retrying, it should still skip new incoming runs.",
      "char_count": 207,
      "token_count": 55,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\guides_singleton.md",
        "file_name": "guides_singleton.md",
        "file_size": 7195,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "d51c982035ee992f17f888c758d93dd30daba502d0747a8e71fec8edd4a83891",
        "author": null,
        "created_at": "2025-10-12T23:59:47.250892",
        "modified_at": "2025-10-12T23:59:47.251898",
        "page_count": null,
        "word_count": 886,
        "extracted_at": "2025-10-13T20:03:55.721683",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 11,
        "token_count": 55,
        "has_context": true
      }
    }
  ]
}