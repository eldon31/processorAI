{
  "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
  "title": "#### On this page",
  "num_chunks": 14,
  "total_chars": 9959,
  "chunks": [
    {
      "index": 0,
      "text": "On this page\n- [Sending events](\\docs\\events#sending-events)\n- [Setting an Event Key](\\docs\\events#setting-an-event-key)\n- [Event payload format](\\docs\\events#event-payload-format)\n- [Sending multiple events at once](\\docs\\events#sending-multiple-events-at-once)\n- [Sending events from within functions](\\docs\\events#sending-events-from-within-functions)\n- [Using Event IDs](\\docs\\events#using-event-ids)\n- [Sending events from within functions](\\docs\\events#sending-events-from-within-functions-2)\n- [Using Event IDs](\\docs\\events#using-event-ids-2)\n- [Using Event IDs](\\docs\\events#using-event-ids-3)\n- [Send events via HTTP (Event API)](\\docs\\events#send-events-via-http-event-api)\n- [Deduplication](\\docs\\events#deduplication)\n- [Further reading](\\docs\\events#further-reading)\nFeatures\n[Events & Triggers](\\docs\\features\\events-triggers)",
      "char_count": 841,
      "token_count": 236,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 236,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Sending events\nTo start, make sure you have\n[installed the Inngest SDK](\\docs\\sdk\\overview)\n.\nIn order to send events, you'll need to instantiate the\n```\nInngest\n```\nclient. We recommend doing this in a single file and exporting the client so you can import it anywhere in your app. In production, you'll need an event key, which\n[we'll cover below](\\docs\\events#setting-an-event-key)\n.\nTypeScript Go Python",
      "char_count": 407,
      "token_count": 105,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 105,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Sending events\ninngest/client.ts\nCopy Copied\n```\nimport { Inngest } from \"inngest\" ;\n\nexport const inngest = new Inngest ({ id : \"acme-storefront-app\" }); // Use your app's ID\n```\nNow with this client, you can send events from anywhere in your app. You can send a single event, or\n[multiple events at once](\\docs\\events#sending-multiple-events-at-once)\n.",
      "char_count": 354,
      "token_count": 102,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 102,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Sending events\napp/api/checkout/route.ts\nCopy Copied\n```\nimport { inngest } from \"../inngest/client\" ;\n\n// This sends an event to Inngest.\nawait inngest .send ({\n// The event name\nname : \"storefront/cart.checkout.completed\" ,\n// The event's data\ndata : {\ncartId : \"ed12c8bde\" ,\nitemIds : [ \"9f08sdh84\" , \"sdf098487\" , \"0fnun498n\" ] ,\naccount : {\nid : 123 ,\nemail : \"test@example.com\" ,\n} ,\n} ,\n});\n```\nðŸ‘‰\n```\nsend()\n```\nis an asynchronous method that returns a\n```\nPromise\n```\n. You should always use\n```\nawait\n```\nor\n```\n.then()\n```\nto ensure that the method has finished sending the event to Inngest. Serverless functions can shut down very quickly, so skipping\n```\nawait\n```\nmay result in events failing to be sent.\nSending this event, named\n```\nstorefront/cart.checkout.completed\n```\n, to Inngest will do two things:\n1. Automatically run any [functions](\\docs\\functions) that are triggered by this specific event, passing the event payload to the function's arguments.\n2. Store the event payload in Inngest cloud. You can find this in the **Events** tab of the dashboard.\nðŸ’¡ One event can trigger multiple functions, enabling you to consume a single event in multiple ways. This is different than traditional message queues where only one worker can consume a single message. Learn about\n[the fan-out approach here](\\docs\\guides\\fan-out-jobs)\n.",
      "char_count": 1346,
      "token_count": 374,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 374,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Sending events\nSetting an Event Key\nIn production, your application will need an \"Event Key\" to send events to Inngest. This is a secret key that is used to authenticate your application and ensure that only your application can send events to a given\n[environment](\\docs\\platform\\environments)\nin your Inngest account.\nYou can learn\n[how to create an Event Key here](\\docs\\events\\creating-an-event-key)\n. Once you have a key, you can set it in one of two ways:\n1. Set an `INNGEST_EVENT_KEY` environment variable with your Event Key. **This is the recommended approach.**\n2. Pass the Event Key to the `Inngest` constructor as the `eventKey` option:",
      "char_count": 648,
      "token_count": 158,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 158,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Sending events\nSetting an Event Key\ninngest/client.ts\nCopy Copied\n```\nimport { Inngest } from \"inngest\" ;\n\n// NOTE - It is not recommended to hard-code your Event Key in your code.\nconst inngest = new Inngest ({ id : \"your-app-id\" , eventKey : \"xyz...\" });\n```\nEvent keys are\n*not*\nrequired in local development with the\n[Inngest Dev Server](\\docs\\local-development)\n. You can omit them in development and your events will still be sent to the Dev Server.",
      "char_count": 455,
      "token_count": 123,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 123,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Sending events\nEvent payload format\nThe event payload is a JSON object that must contain a\n```\nname\n```\nand\n```\ndata\n```\nproperty.\nExplore all events properties in the\n[Event payload format guide](\\docs\\features\\events-triggers\\event-format)\n.",
      "char_count": 243,
      "token_count": 61,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 61,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Sending events\nSending multiple events at once\nYou can also send multiple events in a single\n```\nsend()\n```\ncall. This enables you to send a batch of events very easily. You can send up to\n```\n512kb\n```\nin a single request which means you can send anywhere between 10 and 1000 typically sized payloads at once. This is the default and can be increased for your account.\nCopy Copied\n```\nawait inngest .send ([\n{ name : \"storefront/cart.checkout.completed\" , data : { ... } } ,\n{ name : \"storefront/coupon.used\" , data : { ... } } ,\n{ name : \"storefront/loyalty.program.joined\" , data : { ... } } ,\n])\n```\nThis is especially useful if you have an array of data in your app and you want to send an event for each item in the array:\nCopy Copied\n```\n// This function call might return 10s or 100s of items, so we can use map\n// to transform the items into event payloads then pass that array to send:\nconst importedItems = await api .fetchAllItems ();\nconst events = importedItems .map ((item) => ({\nname : \"storefront/item.imported\" ,\ndata : {\n... item ,\n}\n}));\nawait inngest .send (events);\n```",
      "char_count": 1091,
      "token_count": 291,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 291,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Sending events\nSending events from within functions\nYou can also send events from within your functions using\n```\nstep.sendEvent()\n```\nto, for example, trigger other functions. Learn more about\n[sending events from within functions](\\docs\\guides\\sending-events-from-functions)\n. Within functions,\n```\nstep.sendEvent()\n```\nwraps the event sending request within a\n```\nstep\n```\nto ensure reliable event delivery and prevent duplicate events from being sent. We recommend using\n```\nstep.sendEvent()\n```\ninstead of\n```\ninngest.send()\n```\nwithin functions.\nCopy Copied\n```\nexport default inngest .createFunction (\n{ id : \"user-onboarding\" } ,\n{ event : \"app/user.signup\" } ,\nasync ({ event , step }) => {\n// Do something\nawait step .sendEvent ( \"send-activation-event\" , {\nname : \"app/user.activated\" ,\ndata : { userId : event . data .userId } ,\n});\n// Do something else\n}\n);\n```",
      "char_count": 874,
      "token_count": 217,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 217,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Sending events\nUsing Event IDs\nEach event sent to Inngest is assigned a unique Event ID. These\n```\nids\n```\nare returned from\n```\ninngest.send()\n```\nor\n```\nstep.sendEvent()\n```\n. Event IDs can be used to look up the event in the Inngest dashboard or via\n[the REST API](https://api-docs.inngest.com/docs/inngest-api/pswkqb7u3obet-get-an-event)\n. You can choose to log or save these Event IDs if you want to look them up later.\nCopy Copied\n```\nconst { ids } = await inngest .send ([\n{\nname : \"app/invoice.created\" ,\ndata : { invoiceId : \"645e9e024befa68763f5b500\" }\n} ,\n{\nname : \"app/invoice.created\" ,\ndata : { invoiceId : \"645e9e08f29fb563c972b1f7\" }\n} ,\n]);\n/**\n* ids = [\n*   \"01HQ8PTAESBZPBDS8JTRZZYY3S\",\n*   \"01HQ8PTFYYKDH1CP3C6PSTBZN5\"\n* ]\n*/\n```",
      "char_count": 749,
      "token_count": 284,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 284,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Sending events\nSend events via HTTP (Event API)\nYou can send events from any system or programming language with our API and an Inngest Event Key. The API accepts a single event payload or an array of event payloads.\nTo send an event to a specific\n[branch environment](\\docs\\platform\\environments#branch-environments)\n, set the\n```\nx-inngest-env\n```\nheader to the name of your branch environment, for example:\n```\nx-inngest-env: feature/my-branch\n```\n.\ncURL PHP\nPOST inn.gs/e/:eventKey\nCopy Copied\n```\ncurl -X POST https://inn.gs/e/ $INNGEST_EVENT_KEY \\\n-H 'Content-Type: application/json' \\\n--data '{\n\"name\": \"user.signup\",\n\"data\": {\n\"userId\": \"645ea8289ad09eac29230442\"\n}\n}'\n```\nWhen using the\n[dev server](\\docs\\dev-server)\n, use\n```\nhttp://localhost:8288/e/<fake-key>\n```\nas the endpoint. If\n[self-hosting](\\docs\\self-hosting)\n, replace with the url for your self-hosted instance.\nThe response will contain the\n```\nids\n```\nof the events that were sent:",
      "char_count": 956,
      "token_count": 280,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 280,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Sending events\nSend events via HTTP (Event API)\nResponse\nCopy Copied\n```\n{\n\"ids\" : [ \"01H08W4TMBNKMEWFD0TYC532GG\" ] ,\n\"status\" : 200\n}\n```",
      "char_count": 138,
      "token_count": 60,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 60,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Sending events\nDeduplication\nOften, you may need to prevent duplicate events from being processed by Inngest. If your system could possibly send the same event more than once, you will want to ensure that it does not run functions more than once.\nTo prevent duplicate function runs from events, you can add an\n```\nid\n```\nparameter to the event payload. Once Inngest receives an event with an\n```\nid\n```\n, any events sent with the same\n```\nid\n```\nwill be ignored, regardless of the event's payload.\nCopy Copied\n```\nawait inngest .send ({\n// Your deduplication id must be specific to this event payload.\n// Use something that will not be used across event types, not a generic value like cartId\nid : \"cart-checkout-completed-ed12c8bde\" ,\nname : \"storefront/cart.checkout.completed\" ,\ndata : {\ncartId : \"ed12c8bde\" ,\n// ...the rest of the payload's data...\n}\n});\n```\nLearn more about this in the\n[handling idempotency guide](\\docs\\guides\\handling-idempotency)\n.\nðŸ’¡ Deduplication prevents duplicate function runs for 24 hours from the first event.\nThe\n```\nid\n```\nis global across all event types, so make sure your\n```\nid\n```\nisn't a value that will be shared across different event types.\nFor example, for two events like\n```\nstorefront/item.imported\n```\nand\n```\nstorefront/item.deleted\n```\n, do not use the\n```\nitem\n```\n's\n```\nid\n```\n(\n```\n9f08sdh84\n```\n) as the event deduplication\n```\nid\n```\n. Instead, combine the item's\n```\nid\n```\nwith the event type to ensure it's specific to that event (e.g.\n```\nitem-imported-9f08sdh84\n```\n).",
      "char_count": 1530,
      "token_count": 435,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 435,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Sending events\nFurther reading\n- [Creating an Event Key](\\docs\\events\\creating-an-event-key)\n- [TypeScript SDK Reference: Send events](\\docs\\reference\\events\\send)\n- [Python SDK Reference: Send events](\\docs\\reference\\python\\client\\send)\n- [Go SDK Reference: Send events](https://pkg.go.dev/github.com/inngest/inngestgo#Client)",
      "char_count": 327,
      "token_count": 88,
      "metadata": {
        "title": "#### On this page",
        "source": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "chunk_method": "hybrid",
        "file_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\Docs\\inngest_overall\\events.md",
        "file_name": "events.md",
        "file_size": 10210,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "bdb0719690eb6ef8f5fdfb96e29d4578a2e25eb35bd6124b13ed666aa9bca114",
        "author": null,
        "created_at": "2025-10-12T23:58:17.843213",
        "modified_at": "2025-10-12T23:58:17.843318",
        "page_count": null,
        "word_count": 1435,
        "extracted_at": "2025-10-13T20:03:11.612600",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 88,
        "has_context": true
      }
    }
  ]
}