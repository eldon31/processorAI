{
  "source": "Docs\\agent_kit\\getting-started_quick-start.md",
  "title": "##### Get Started",
  "num_chunks": 14,
  "total_chars": 12520,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [Creating a single agent](#creating-a-single-agent)\n- [Creating a multi-agent network](#creating-a-multi-agent-network)\n- [Next steps](#next-steps)\nGet Started",
      "char_count": 355,
      "token_count": 100,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 100,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Quick start\nLearn the basics of AgentKit in a few minutes.\nIn this tutorial, you will create an\n[Agent](\\concepts\\agents)\nand run it within a\n[Network](\\concepts\\networks)\nusing AgentKit.\nFollow this guide by forking the\n[quick-start](https://github.com/inngest/agent-kit/tree/main/examples/quick-start)\nexample locally by running:\nCopy Ask AI\n```\nnpx git-ripper https://github.com/inngest/agent-kit/tree/main/examples/quick-start\n```",
      "char_count": 434,
      "token_count": 115,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 115,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Quick start\nCreating a single agent\n1\nInstall AgentKit\nWithin an existing project, install AgentKit and Inngest from npm:\nnpm pnpm yarn Copy Ask AI\n```\nnpm install @inngest/agent-kit inngest\n```\n**Important:**\nStarting with AgentKit v0.9.0,\n```\ninngest\n```\nis a required peer dependency. You must install both packages together to ensure proper runtime compatibility and prevent conflicts. You can always find the latest release version on\n[npm](https://www.npmjs.com/package/@inngest/agent-kit)\n.\nDon't have an existing project?\nTo create a new project, create a new directory and initialize it using your package manager:\nnpm pnpm yarn Copy Ask AI\n```\nmkdir my-agent-kit-project && npm init\n```\n2\nCreate an agent\nTo start, we'll create our first \"\n[Agent](\\concepts\\agents)\n.\" An Agent is an entity that has a specific role to answer questions or perform tasks (see \"tools\" below). Let's create a new file,\n```\nindex.ts\n```\n. Using the\n```\ncreateAgent\n```\nconstructor, give your agent a\n```\nname\n```\n, a\n```\ndescription\n```\n, and its initial\n```\nsystem\n```\nprompt. The\n```\nname\n```\nand\n```\ndescription\n```\nproperties are used to help the LLM determine which Agent to call. You'll also specify which\n```\nmodel\n```\nyou want the agent to use. Here we'll use Anthropic's\n[Claude 3.5 Haiku](https://docs.anthropic.com/en/docs/about-claude/models)\nmodel. (\n[Model reference](\\concepts\\models)\n) Your agent can be whatever you want, but in this quick start, we'll create a PostgreSQL database administrator agent:\nindex.ts Copy Ask AI\n```\nimport { createAgent , anthropic } from '@inngest/agent-kit' ;\n\nconst dbaAgent = createAgent ({\nname: 'Database administrator' ,\ndescription: 'Provides expert support for managing PostgreSQL databases' ,\nsystem:\n'You are a PostgreSQL expert database administrator. ' +\n'You only provide answers to questions related to PostgreSQL database schema, indexes, and extensions.' ,\nmodel: anthropic ({\nmodel: 'claude-3-5-haiku-latest' ,\ndefaultParameters: {\nmax_tokens: 1000 ,\n},\n}),\n});\n```\nYou'll also need to set your provider API keys as environment variables:\nterminal Copy Ask AI\n```\nexport ANTHROPIC_API_KEY = sk-ant-api03-XXXXXX ....\n```\n3\nRun the server\nNext, we'll create an HTTP server to run our agent. In the same file as our Agent definition:\nindex.ts Copy Ask AI\n```\nimport { createAgent , anthropic } from '@inngest/agent-kit' ;\nimport { createServer } from '@inngest/agent-kit/server' ;\n// ...\nconst server = createServer ({\nagents: [ dbaAgent ],\n});\nserver . listen ( 3000 , () => console . log ( 'AgentKit server running!' ));\n```\nNow we can run our AgentKit server using\n[```\nnpx\n```](https://docs.npmjs.com/cli/v8/commands/npx)\nand\n[```\ntsx\n```](https://tsx.is/)\n(for easy TypeScript execution):\nterminal Copy Ask AI\n```\nnpx tsx ./index.ts\n```\n4\nTest our agent\nTo test our agent, we'll use the\n[Inngest dev server](https://www.inngest.com/docs/local-development)\nto visually debug our agents. Using\n```\nnpx\n```\n, we'll start the server and point it to our AgentKit server:\nterminal Copy Ask AI\n```\nnpx inngest-cli@latest dev -u http://localhost:3000/api/inngest\n```\nNow, open the dev server and select the functions tab (\n```\nhttp://localhost:8288/functions\n```\n) and click the \"Invoke\" button: In the Invoke function modal, specify the input prompt for your agent and click the \"Invoke function\" button:\nInvoke payload Copy Ask AI\n```\n{\n\"data\" : {\n\"input\" : \"How do I aggregate an integer column across a date column by week?\"\n}\n}\n```\nYou'll be redirected to watch the agent run and view the output:\nA key benefit of AgentKit is the ability to create a system of agents called a\n\"\n[Network](\\concepts\\networks)\n.\" Networks are used to create AI Agents by combining\nmultiple specialized\n[Agents](\\concepts\\agents)\nto answer more complex questions.\nLet's transform our single agent into a network of two agents, capable of helping with\nboth database administration and security questions.",
      "char_count": 3935,
      "token_count": 1033,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 1033,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Quick start\nCreating a multi-agent network\n1\nAdding a second Agent\nAgents collaborate in a Network by sharing a common\n[State](\\concepts\\state)\n. Let's update our Database Administrator Agent to include a tool to save the answer to the question in the database:\nCopy Ask AI\n```\nconst dbaAgent = createAgent ({\nname: \"Database administrator\" ,\ndescription: \"Provides expert support for managing PostgreSQL databases\" ,\nsystem:\n\"You are a PostgreSQL expert database administrator. \" +\n\"You only provide answers to questions related to PostgreSQL database schema, indexes, and extensions.\" ,\nmodel: anthropic ({\nmodel: \"claude-3-5-haiku-latest\" ,\ndefaultParameters: {\nmax_tokens: 4096 ,\n},\n}),\ntools: [\ncreateTool ({\nname: \"save_answer\" ,\ndescription: \"Save the answer to the questions\" ,\nparameters: z . object ({\nanswer: z . string (),\n}),\nhandler : async ({ answer }, { network } : Tool . Options < NetworkState >) => {\nnetwork . state . data . dba_agent_answer = answer ;\n},\n}),\n],\n});\n```\n[Tools](\\concepts\\tools)\nare based on\n[Tool](https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/overview)\n[Calling](https://docs.anthropic.com/en/docs/agents-and-tools/tool-use/overview)\n,\nenabling your Agent to interact with the\n[State](\\concepts\\state)\nof the\nNetwork, store data in external databases, or dynamically fetch data from\nthird-party APIs. Let's now create a second\n*Database Security*\nAgent:\nCopy Ask AI\n```\nimport { createAgent , anthropic } from \"@inngest/agent-kit\" ;\n\n// ...\n\nconst securityAgent = createAgent ({\nname: \"Database Security Expert\" ,\ndescription:\n\"Provides expert guidance on PostgreSQL security, access control, audit logging, and compliance best practices\" ,\nsystem:\n\"You are a PostgreSQL security expert. \" +\n\"You only provide answers to questions related to PostgreSQL security topics such as encryption, access control, audit logging, and compliance best practices.\" ,\nmodel: anthropic ({\nmodel: \"claude-3-5-haiku-latest\" ,\ndefaultParameters: {\nmax_tokens: 1000 ,\n},\n}),\ntools: [\ncreateTool ({\nname: \"save_answer\" ,\ndescription: \"Save the answer to the questions\" ,\nparameters: z . object ({\nanswer: z . string (),\n}),\nhandler : async ({ answer }, { network } : Tool . Options < NetworkState >) => {\nnetwork . state . data . security_agent_answer = answer ;\n},\n}),\n],\n});\n```\nOur second Security Expert Agent is similar to the first, but with a different system prompt specifically for security questions. We can now create a network combining our \"Database Administrator\" and \"Database Security\" Agents, which enables us to answer more complex questions.\n2\nCreating a Network\nCreate a network using the\n```\ncreateNetwork\n```\nconstructor. Define a\n```\nname\n```\nand include our agents from the previous step in the\n```\nagents\n```\narray. You must also configure a\n```\nrouter\n```\nthat the\n[*Router*](\\concepts\\routers)\nwill use to determine which agent to call:\nCopy Ask AI\n```\nimport { /*...*/ createNetwork } from \"@inngest/agent-kit\" ;\n\nexport interface NetworkState {\n// answer from the Database Administrator Agent\ndba_agent_answer ?: string ;\n\n// answer from the Security Expert Agent\nsecurity_agent_answer ?: string ;\n}\n\n// ...\nconst devOpsNetwork = createNetwork < NetworkState >({\nname: \"DevOps team\" ,\nagents: [ dbaAgent , securityAgent ],\nrouter : async ({ network }) => {\nif ( ! network . state . data . security_agent_answer ) {\nreturn securityAgent ;\n} else if (\nnetwork . state . data . security_agent_answer &&\nnetwork . state . data . dba_agent_answer\n) {\nreturn ;\n}\nreturn dbaAgent ;\n},\n});\n\nconst server = createServer ({\nagents: [ dbaAgent , securityAgent ],\nnetworks: [ devOpsNetwork ],\n});\n```\nThe highlighted lines are the key parts of our AI Agent behavior:\n- The `agents` property defines the agents that are part of the network\n- The `router` function defines the logic for which agent to call next. In this example, we call the Database Administrator Agent followed by the Security Expert Agent before ending the network (by returning `undefined` ).\n3\nTest our network\nWe'll use the same approach to test our network as we did above. With your Inngest dev server running, open the dev server and select the functions tab (\n```\nhttp://localhost:8288/functions\n```\n) and click the \"Invoke\" button of the\n*DevOps team*\nfunction with the following payload:\nInvoke payload Copy Ask AI\n```\n{\n\"data\" : {\n\"input\" : \"I am building a Finance application. Help me answer the following 2 questions: \\n - How can I scale my application to millions of requests per second? \\n - How should I design my schema to ensure the safety of each organization's data?\"\n}\n}\n```\nThe network will now run through the Agents to answer the questions: You can inspect the answers of each Agent by selecting the\n*Finalization*\nstep and inspecting the JSON payload in the right panel:",
      "char_count": 4815,
      "token_count": 1128,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 1128,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Quick start\nNext steps\nCongratulations! You've now created your first AI Agent with AgentKit.\nIn this guide, you've learned that:\n- [**Agents**](\\concepts\\agents) are the building blocks of AgentKit. They are used to call a single model to answer specific questions or perform tasks.\n- [**Networks**](\\concepts\\networks) are groups of agents that can work together to achieve more complex goals.\n- [**Routers**](\\concepts\\routers) , combined with [**State**](\\concepts\\state) , enable you to control the flow of your Agents.\nThe following guides will help you build more advanced AI Agents:",
      "char_count": 590,
      "token_count": 143,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 143,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Quick start\nAdding Tools to Agents\n[Let your Agent act and gather data with tools](\\concepts\\tools)",
      "char_count": 99,
      "token_count": 25,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 25,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Quick start\nImplementing reasoning-based routing\n[Learn how to dynamically route between agents](\\concepts\\routers)\nYou can also explore the following examples to see how to use AgentKit in more complex scenarios:",
      "char_count": 213,
      "token_count": 43,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 43,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Quick start\nSupport Agent with \"Human in the loop\"\n[This AgentKit example shows how to build a Support Agent Network with a \"Human](https://github.com/inngest/agent-kit/tree/main/examples/support-agent-human-in-the-loop#readme)\n[in the loop\" pattern.](https://github.com/inngest/agent-kit/tree/main/examples/support-agent-human-in-the-loop#readme)",
      "char_count": 347,
      "token_count": 83,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 83,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Quick start\nAgentKit SWE-bench\n[This AgentKit example uses the SWE-bench dataset to train an agent to solve coding problems. It uses advanced tools to interact with files and codebases.](https://github.com/inngest/agent-kit/tree/main/examples/swebench#readme)\n[AgentKit Previous](\\overview)\n[Installation Next](\\getting-started\\installation)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 414,
      "token_count": 97,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\getting-started_quick-start.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\getting-started_quick-start.md",
        "file_name": "getting-started_quick-start.md",
        "file_size": 13200,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3c320fb6fb9e6f1e0b4062c734b9288c05ecdff05dc35af9a11e516e0a11f993",
        "author": null,
        "created_at": "2025-10-12T23:51:40.745961",
        "modified_at": "2025-10-12T23:51:40.745961",
        "page_count": null,
        "word_count": 1727,
        "extracted_at": "2025-10-13T19:59:37.036855",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 97,
        "has_context": true
      }
    }
  ]
}