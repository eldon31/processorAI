{
  "source": "Docs\\agent_kit\\concepts_routers.md",
  "title": "##### Get Started",
  "num_chunks": 17,
  "total_chars": 9982,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [What is a Router?](#what-is-a-router%3F)\n- [Using a Router](#using-a-router)\n- [Creating a custom Router](#creating-a-custom-router)\n- [Routing Patterns](#routing-patterns)\n- [Tips](#tips)\n- [Code-based Routers (supervised routing)](#code-based-routers-supervised-routing)\n- [Routing Agent (autonomous routing)](#routing-agent-autonomous-routing)\n- [Hybrid code and agent Routers (semi-supervised routing)](#hybrid-code-and-agent-routers-semi-supervised-routing)\n- [Using state in Routing](#using-state-in-routing)\n- [Related Concepts](#related-concepts)\nConcepts",
      "char_count": 760,
      "token_count": 208,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 208,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Routers\nCustomize how calls are routed between Agents in a Network.\nThe purpose of a Network's\n**Router**\nis to decide what\n[Agent](\\concepts\\agents)\nto call based off the current Network\n[State](\\concepts\\state)\n.",
      "char_count": 214,
      "token_count": 57,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 57,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Routers\nWhat is a Router?\nA router is a function that gets called after each agent runs, which decides whether to:\n1. Call another agent (by returning an `Agent` )\n2. Stop the network's execution loop (by returning `undefined` )\nThe routing function gets access to everything it needs to make this decision:\n- The [Network](\\concepts\\networks) object itself, including it's [State](\\concepts\\state) .\n- The stack of [Agents](\\concepts\\agents) to be called.\n- The number of times the Network has called Agents ( *the number of iterations* ).\n- The result from the previously called Agent in the Network's execution loop.\nFor more information about the role of a Router in a Network, read about\n[how Networks work](\\concepts\\networks#how-networks-work)\n.",
      "char_count": 752,
      "token_count": 180,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 180,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Routers\nUsing a Router\nProviding a custom Router to your Network is optional. If you don't provide\none, the Network will use the \"Default Router\" Routing Agent.\nProviding a custom Router to your Network can be achieved using 3 different patterns:\n- **Writing a custom** [**Code-based Router**](\\concepts\\routers#code-based-routers-supervised-routing) : Define a function that makes decisions based on the current [State](\\concepts\\state) .\n- **Creating a** [**Routing Agent**](\\concepts\\routers#routing-agent-autonomous-routing) : Leverages LLM calls to decide which Agents should be called next based on the current [State](\\concepts\\state) .\n- **Writing a custom** [**Hybrid Router**](\\concepts\\routers#hybrid-code-and-agent-routers-semi-supervised-routing) : Mix code and agent-based routing to get the best of both worlds.",
      "char_count": 826,
      "token_count": 201,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 201,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Routers\nCreating a custom Router\nCustom Routers can be provided by defining a\n```\ndefaultRouter\n```\nfunction returning either an instance of an\n```\nAgent\n```\nobject or\n```\nundefined\n```\n.\nCopy Ask AI\n```\nimport { createNetwork } from \"@inngest/agent-kit\" ;\n\n// classifier and writer Agents definition...\n\nconst network = createNetwork ({\nagents: [ classifier , writer ],\nrouter : ({ lastResult , callCount }) => {\n// retrieve the last message from the output\nconst lastMessage = lastResult ?. output [ lastResult ?. output . length - 1 ];\nconst content =\nlastMessage ?. type === \"text\" ? ( lastMessage ?. content as string ) : \"\" ;\n// First call: use the classifier\nif ( callCount === 0 ) {\nreturn classifier ;\n}\n// Second call: if it's a question, use the writer\nif ( callCount === 1 && content . includes ( \"question\" )) {\nreturn writer ;\n}\n// Otherwise, we're done!\nreturn undefined ;\n},\n});\n```\nThe\n```\ndefaultRouter\n```\nfunction receives a number of arguments:\n@inngest/agent-kit Copy Ask AI\n```\ninterface RouterArgs {\nnetwork : Network ; // The entire network, including the state and history\nstack : Agent []; // Future agents to be called\ncallCount : number ; // Number of times the Network has called agents\nlastResult ?: InferenceResult ; // The the previously called Agent's result\n}\n```\nThe available arguments can be used to build the routing patterns described below.",
      "char_count": 1381,
      "token_count": 329,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 329,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Routers\nRouting Patterns\nTips\n- Start simple with code-based routing for predictable behavior, then add agent-based routing for flexibility.\n- Remember that routers can access the network's [state](\\concepts\\state)\n- You can return agents that weren't in the original network\n- The router runs after each agent call\n- Returning `undefined` stops the network's execution loop\nThat's it! Routing is what makes networks powerful - it lets you build workflows that can be as simple or complex as you need.",
      "char_count": 501,
      "token_count": 106,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 106,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Routers\nRouting Patterns\nCode-based Routers (supervised routing)\nThe simplest way to route is to write code that makes decisions. Here's an example that routes between a classifier and a writer:\nCopy Ask AI\n```\nimport { createNetwork } from \"@inngest/agent-kit\" ;\n\n// classifier and writer Agents definition...\n\nconst network = createNetwork ({\nagents: [ classifier , writer ],\nrouter : ({ lastResult , callCount }) => {\n// retrieve the last message from the output\nconst lastMessage = lastResult ?. output [ lastResult ?. output . length - 1 ];\nconst content =\nlastMessage ?. type === \"text\" ? ( lastMessage ?. content as string ) : \"\" ;\n// First call: use the classifier\nif ( callCount === 0 ) {\nreturn classifier ;\n}\n// Second call: if it's a question, use the writer\nif ( callCount === 1 && content . includes ( \"question\" )) {\nreturn writer ;\n}\n// Otherwise, we're done!\nreturn undefined ;\n},\n});\n```\nCode-based routing is great when you want deterministic, predictable behavior. It's also the fastest option since there's no LLM calls involved.",
      "char_count": 1050,
      "token_count": 242,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 242,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Routers\nRouting Patterns\nRouting Agent (autonomous routing)\nWithout a\n```\ndefaultRouter\n```\ndefined, the network will use the \"Default Routing Agent\" to decide which agent to call next.\nThe \"Default Routing Agent\" is a Routing Agent provided by Agent Kit to handle the default routing logic.\nYou can create your own Routing Agent by using the\n[```\ncreateRoutingAgent\n```](\\reference\\network-router#createroutingagent)\nhelper function:\nCopy Ask AI\n```\nimport { createRoutingAgent } from \"@inngest/agent-kit\" ;\n\nconst routingAgent = createRoutingAgent ({\nname: \"Custom routing agent\" ,\ndescription: \"Selects agents based on the current state and request\" ,\nlifecycle: {\nonRoute : ({ result , network }) => {\n// custom logic...\n},\n},\n});\n\n// classifier and writer Agents definition...\n\nconst network = createNetwork ({\nagents: [ classifier , writer ],\nrouter: routingAgent ,\n});\n```\nRouting Agents look similar to Agents but are designed to make routing\ndecisions: - Routing Agents cannot have Tools. - Routing Agents provides a\nsingle\n```\nonRoute\n```\nlifecycle method.",
      "char_count": 1066,
      "token_count": 242,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 242,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Routers\nRouting Patterns\nHybrid code and agent Routers (semi-supervised routing)\nAnd, of course, you can mix code and agent-based routing. Here's an example that uses code for the first step, then lets an agent take over:\nCopy Ask AI\n```\nimport { createNetwork , getDefaultRoutingAgent } from \"@inngest/agent-kit\" ;\n\n// classifier and writer Agents definition...\n\nconst network = createNetwork ({\nagents: [ classifier , writer ],\nrouter : ({ callCount }) => {\n// Always start with the classifier\nif ( callCount === 0 ) {\nreturn classifier ;\n}\n// Then let the routing agent take over\nreturn getDefaultRoutingAgent ();\n},\n});\n```\nThis gives you the best of both worlds:\n- Predictable first steps when you know what needs to happen\n- Flexibility when the path forward isn't clear",
      "char_count": 776,
      "token_count": 175,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 175,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "Routers\nRouting Patterns\nUsing state in Routing\nThe router is the brain of your network - it decides which agent to call next. You can use state to make smart routing decisions:\nCopy Ask AI\n```\nimport { createNetwork } from '@inngest/agent-kit' ;\n\n// mathAgent and contextAgent Agents definition...\n\nconst network = createNetwork ({\nagents: [ mathAgent , contextAgent ],\nrouter : ({ network , lastResult }) : Agent | undefined => {\n// Check if we've solved the problem\nconst solution = network . state . data . solution ;\nif ( solution ) {\n// We're done - return undefined to stop the network\nreturn undefined ;\n}\n\n// retrieve the last message from the output\nconst lastMessage = lastResult ?. output [ lastResult ?. output . length - 1 ];\nconst content = lastMessage ?. type === 'text' ? lastMessage ?. content as string : '' ;\n\n// Check the last result to decide what to do next\nif ( content . includes ( 'need more context' )) {\nreturn contextAgent ;\n}\n\nreturn mathAgent ;\n};\n});\n```",
      "char_count": 986,
      "token_count": 224,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 224,
        "has_context": true
      }
    },
    {
      "index": 15,
      "text": "Routers\nNetworks\n[Networks combines the State and Router to execute Agent workflows.](\\concepts\\networks)",
      "char_count": 105,
      "token_count": 27,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 27,
        "has_context": true
      }
    },
    {
      "index": 16,
      "text": "Routers\nState\n[State is a key-value store that can be used to store data between Agents.](\\concepts\\state)\n[State Previous](\\concepts\\state)\n[History Next](\\concepts\\history)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 247,
      "token_count": 63,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_routers.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_routers.md",
        "file_name": "concepts_routers.md",
        "file_size": 10629,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "f906d09fd7949af430df422f04875bfed819f85c6c174e09c9d9cc2f37d091f4",
        "author": null,
        "created_at": "2025-10-12T23:51:29.739381",
        "modified_at": "2025-10-12T23:51:29.740596",
        "page_count": null,
        "word_count": 1442,
        "extracted_at": "2025-10-13T19:59:31.548921",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 17,
        "token_count": 63,
        "has_context": true
      }
    }
  ]
}