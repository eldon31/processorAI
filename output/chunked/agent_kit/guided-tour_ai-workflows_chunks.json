{
  "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
  "title": "##### Get Started",
  "num_chunks": 16,
  "total_chars": 11099,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [Overview](#overview)\n- [Setup](#setup)\n- [Implementing our Code Assistant v1](#implementing-our-code-assistant-v1)\n- [The retrieval step: loading the code file](#the-retrieval-step%3A-loading-the-code-file)\n- [The generation step using AgentKit's Agent](#the-generation-step-using-agentkit%E2%80%99s-agent)\n- [Running our Code Assistant v1](#running-our-code-assistant-v1)\n- [What we've learned so far](#what-we%E2%80%99ve-learned-so-far)\n- [Next steps](#next-steps)\nGuided Tour",
      "char_count": 675,
      "token_count": 209,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 209,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Code Assistant v1: Explaining a given code file\nLeveraging AgentKit's Agent concept to power a RAG workflow.",
      "char_count": 108,
      "token_count": 27,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 27,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Code Assistant v1: Explaining a given code file\nOverview\nAs discussed in the\n[introduction](\\ai-agents-in-practice\\overview)\n, developing AI applications is a pragmatic approach requiring\nto start simple and iterate towards complexity.\nFollowing this approach, this first version of our Code Assistant will be able to explain a given code file:\nCopy Ask AI\n```\nconst filePath = join ( process . cwd (), `files/example.ts` );\nconst code = readFileSync ( filePath , \"utf-8\" );\n\nconst { lastMessage } = await codeAssistant . run ( `What the following code does?\n\n${ code }\n` );\n\nconsole . log ( lastMessage ({ type: \"text\" }). content );\n// This file (example.ts) is a TypeScript module that provides a collection of type-safe sorting helper functions. It contains five main sorting utility functions:\n\n// 1. `sortNumbers(numbers: number[], descending = false)`\n//    - Sorts an array of numbers in ascending (default) or descending order\n//    - Takes an array of numbers and an optional boolean to determine sort direction\n\n// 2. `sortStrings(strings: string[], options)`\n//    - Sorts strings alphabetically with customizable options\n//    - Options include:\n//      - caseSensitive (default: false)\n//      - descending (default: false)\n\n// ...\n```\nTo implement this capability, we will build a AI workflow leveraging a first important concept of AgentKit:\n- [Agents](\\concepts\\agents) : Agents act as a wrapper around the LLM (ex: Anthropic), providing a structured way to interact with it.\nLet's start our Code Assistant by installing the required dependencies:",
      "char_count": 1564,
      "token_count": 346,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 346,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Code Assistant v1: Explaining a given code file\nSetup\nFollow the below steps to setup your project:\n1. Initialize your project\nnpm pnpm yarn Copy Ask AI\n```\nnpm init\n```\n1. Install the required dependencies\nnpm pnpm yarn Copy Ask AI\n```\nnpm install @inngest/agent-kit inngest\n```\n1. Add TypeScript support\nnpm pnpm yarn Copy Ask AI\n```\nnpm install -D tsx @types/node\n```\n1. Download the example code file\nCopy Ask AI\n```\nwget https://raw.githubusercontent.com/inngest/agent-kit/main/examples/code-assistant-rag/files/example.ts\n```\nYou are now set up, let's implement the first version of our Code Assistant.",
      "char_count": 608,
      "token_count": 160,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 160,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Code Assistant v1: Explaining a given code file\nImplementing our Code Assistant v1\nOur first version of our Code Assistant takes the shape of a RAG workflow.\nA RAG workflow is a specific type of AI workflow that generally consist of two steps: retrieval (fetching relevant information) and generation (creating a response with a LLM).\nOur Code Assistant will have following two steps:\n- **A retrieval step** reads the content of a local file specified by the user.\n- **A generation step** uses Anthropic to analyze the code and provide a detailed explanation of what it does.\nLet's start by implementing the retrieval step.",
      "char_count": 623,
      "token_count": 131,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 131,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Code Assistant v1: Explaining a given code file\nImplementing our Code Assistant v1\nThe retrieval step: loading the code file\nWe earlier downloaded the\n```\nexample.ts\n```\nfile locally, let's load it in our code by creating a\n```\nindex.ts\n```\nfile:\nCopy Ask AI\n```\nimport { readFileSync } from \"fs\" ;\nimport { join } from \"path\" ;\n\nasync function main () {\n// First step: Retrieval\nconst filePath = join ( process . cwd (), `files/example.ts` );\nconst code = readFileSync ( filePath , \"utf-8\" );\n}\n\nmain ();\n```\nOur example code is now ready to be analyzed. Let's now implement the generation step.",
      "char_count": 596,
      "token_count": 153,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 153,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Code Assistant v1: Explaining a given code file\nImplementing our Code Assistant v1\nThe generation step using AgentKit's Agent\nAs covered in the introduction,\n[AgentKit's](\\reference\\create-agent)\n[```\ncreateAgent()\n```](\\reference\\create-agent)\nis a wrapper around the LLM, providing a structured way to interact with it with 3 main properties:\n- `name` : A unique identifier for the agent.\n- `system` : A description of the agent's purpose.\n- `model` : The LLM to use.\nLet's add configure our Agent with Anthropic's\n```\nclaude-3-5-sonnet-latest\n```\nmodel by updating our\n```\nindex.ts\n```\nfile:\nCopy Ask AI\n```\nimport { readFileSync } from \"fs\" ;\nimport { join } from \"path\" ;\nimport { anthropic , createAgent } from \"@inngest/agent-kit\" ;\n\nconst codeAssistant = createAgent ({\nname: \"code_assistant\" ,\nsystem:\n\"An AI assistant that helps answer questions about code by reading and analyzing files\" ,\nmodel: anthropic ({\nmodel: \"claude-3-5-sonnet-latest\" ,\nmax_tokens: 4096 ,\n}),\n});\n\nasync function main () {\n// First step: Retrieval\nconst filePath = join ( process . cwd (), `files/example.ts` );\nconst code = readFileSync ( filePath , \"utf-8\" );\n}\n\nmain ();\n```\nLet's now update our\n```\nmain()\n```\nfunction to use our\n```\ncodeAssistant\n```\nAgent in the generation step:\nCopy Ask AI\n```\n/* eslint-disable */\nimport { readFileSync } from \"fs\" ;\nimport { join } from \"path\" ;\nimport { anthropic , createAgent } from \"@inngest/agent-kit\" ;\n\n// Create the code assistant agent\nconst codeAssistant = createAgent ({\nname: \"code_assistant\" ,\nsystem:\n\"An AI assistant that helps answer questions about code by reading and analyzing files\" ,\nmodel: anthropic ({\nmodel: \"claude-3-5-sonnet-latest\" ,\nmax_tokens: 4096 ,\n}),\n});\n\nasync function main () {\n// First step: Retrieval\nconst filePath = join ( process . cwd (), `files/example.ts` );\nconst code = readFileSync ( filePath , \"utf-8\" );\n// Second step: Generation\nconst { output } = await codeAssistant . run ( `What the following code does?\n\n${ code }\n` );\nconst lastMessage = output [ output . length - 1 ];\nconst content =\nlastMessage ?. type === \"text\" ? ( lastMessage ?. content as string ) : \"\" ;\nconsole . log ( content );\n}\n\nmain ();\n```\nLet's review the above code:\n1. We load the `example.ts` file in memory.\n2. We invoke our Code Assistant using the `codeAssistant.run()` method.\n3. We retrieve the last message from the `output` array.\n4. We log the content of the last message to the console.\nLet's now look at our assistant explanation.",
      "char_count": 2496,
      "token_count": 654,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 654,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Code Assistant v1: Explaining a given code file\nRunning our Code Assistant v1\nFirst, go to your Anthropic dashboard and create a new API key.\nThen, run the following command to execute our Code Assistant:\nnpm pnpm yarn Copy Ask AI\n```\nANTHROPIC_API_KEY =< your-api-key > npm run start\n```\nThe following output should be displayed in your terminal:\nCopy Ask AI\n```\nThis code is a collection of type-safe sorting utility functions written in TypeScript. Here's a breakdown of each function:\n\n1. `sortNumbers(numbers: number[], descending = false)`\n- Sorts an array of numbers in ascending (default) or descending order\n- Returns a new sorted array without modifying the original\n\n2. `sortStrings(strings: string[], options)`\n- Sorts an array of strings alphabetically\n- Accepts options for case sensitivity and sort direction\n- Default behavior is case-insensitive ascending order\n- Returns a new sorted array\n\n3. `sortByKey<T>(items: T[], key: keyof T, descending = false)`\n- Sorts an array of objects by a specific key\n- Handles both number and string values\n- Generic type T ensures type safety\n- Returns a new sorted array\n\n4. `sortByMultipleKeys<T>(items: T[], sortKeys: Array<...>)`\n- Sorts an array of objects by multiple keys in order\n- Each key can have its own sort configuration (descending, case sensitivity)\n- Continues to next key if values are equal\n- Returns a new sorted array\n\n...\n```\nCongratulations! You've just built your first AI workflow using AgentKit.",
      "char_count": 1474,
      "token_count": 340,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 340,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Code Assistant v1: Explaining a given code file\nWhat we've learned so far\nLet's recap what we've learned so far:\n- \n**A RAG workflow**\nis a specific type of AI workflow that generally consist of two steps: retrieval (fetching relevant information) and generation (creating a response with a LLM).\n- *Note that most RAG workflows in production consist of more than two steps and combine multiple sources of information and generation steps. You can see an example in* [*this blog post*](https://www.inngest.com/blog/next-generation-ai-workflows?ref=agentkit-docs) *.*\n- \n**AgentKit's**\n**```\ncreateAgent()\n```**\nis a wrapper around the LLM, providing a structured way to interact with a LLM model.\n- *The use of a single Agent is often sufficient to power chatbots or extract structured data from a given text.*",
      "char_count": 810,
      "token_count": 192,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 192,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "Code Assistant v1: Explaining a given code file\nNext steps\nOur Code Assistant v1 is a static AI workflow that only works with the\n```\nexample.ts\n```\nfile.\nIn the next version of our Code Assistant, we will make it dynamic by allowing the user to specify the file to analyze and also enable our Agent to perform more complete analysis.",
      "char_count": 334,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 15,
      "text": "Code Assistant v1: Explaining a given code file\nCode Assistant v2: Complex code analysis\n[Our next Code Assistant version will rely on Agentic workflows to perform more](\\ai-agents-in-practice\\agentic-workflows)\n[complex code analysis.](\\ai-agents-in-practice\\agentic-workflows)\n[The three levels of AI apps Previous](\\guided-tour\\overview)\n[Code Assistant v2: Complex code analysis Next](\\guided-tour\\agentic-workflows)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 493,
      "token_count": 120,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\guided-tour_ai-workflows.md",
        "file_name": "guided-tour_ai-workflows.md",
        "file_size": 11359,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "a5dfe7c899df4227e21cf6cdb4cc089f5158d84a13be1ca4a796adbdca50eaa2",
        "author": null,
        "created_at": "2025-10-12T23:51:46.322636",
        "modified_at": "2025-10-12T23:51:46.322636",
        "page_count": null,
        "word_count": 1545,
        "extracted_at": "2025-10-13T19:59:44.122027",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 120,
        "has_context": true
      }
    }
  ]
}