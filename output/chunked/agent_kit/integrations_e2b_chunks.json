{
  "source": "Docs\\agent_kit\\integrations_e2b.md",
  "title": "##### Get Started",
  "num_chunks": 10,
  "total_chars": 6600,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [Setup](#setup)\n- [Examples](#examples)\nIntegrations",
      "char_count": 248,
      "token_count": 77,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 77,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Using AgentKit with E2B\nDevelop Coding Agents using E2B Sandboxes as tools\n[E2B](https://e2b.dev/)\nis an open-source runtime for executing AI-generated code in secure cloud sandboxes. Made for agentic & AI use cases.\nE2B is a perfect fit to build Coding Agents that can write code, fix bugs, and more.",
      "char_count": 301,
      "token_count": 78,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 78,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Using AgentKit with E2B\nSetup\n1\nInstall AgentKit and E2B\nWithin an existing project, Install AgentKit and E2B from npm:\nnpm pnpm yarn Copy Ask AI\n```\nnpm install @inngest/agent-kit inngest @e2b/code-interpreter\n```\nDon't have an existing project?\nTo create a new project, create a new directory then initialize using your package manager:\nnpm pnpm yarn Copy Ask AI\n```\nmkdir my-agent-kit-project && npm init\n```\n2\nSetup your Coding Agent\nCreate a Agent and its associated Network:\nCopy Ask AI\n```\nimport {\ncreateAgent ,\ncreateNetwork ,\nanthropic\n} from \"@inngest/agent-kit\" ;\n\nconst agent = createAgent ({\nname: \"Coding Agent\" ,\ndescription: \"An expert coding agent\" ,\nsystem: `You are a coding agent help the user to achieve the described task.\n\nOnce the task completed, you should return the following information:\n<task_summary>\n</task_summary>\n\nThink step-by-step before you start the task.\n` ,\nmodel: anthropic ({\nmodel: \"claude-3-5-sonnet-latest\" ,\nmax_tokens: 4096 ,\n}),\n});\n\nconst network = createNetwork ({\nname: \"Coding Network\" ,\nagents: [ agent ],\ndefaultModel: anthropic ({\nmodel: \"claude-3-5-sonnet-20240620\" ,\nmaxTokens: 1000 ,\n})\n});\n```\n3\nCreate the E2B Tools\nTo operate, our Coding Agent will need to create files and run commands. Below is an example of how to create the\n```\ncreateOrUpdateFiles\n```\nand\n```\nterminal\n```\nE2B tools:\nCopy Ask AI\n```\nimport {\ncreateAgent ,\ncreateNetwork ,\nanthropic ,\ncreateTool\n} from \"@inngest/agent-kit\" ;\n\nconst agent = createAgent ({\nname: \"Coding Agent\" ,\ndescription: \"An expert coding agent\" ,\nsystem: `You are a coding agent help the user to achieve the described task.\n\nOnce the task completed, you should return the following information:\n<task_summary>\n</task_summary>\n\nThink step-by-step before you start the task.\n` ,\nmodel: anthropic ({\nmodel: \"claude-3-5-sonnet-latest\" ,\nmax_tokens: 4096 ,\n}),\ntools: [\n// terminal use\ncreateTool ({\nname: \"terminal\" ,\ndescription: \"Use the terminal to run commands\" ,\nparameters: z . object ({\ncommand: z . string (),\n}),\nhandler : async ({ command }, { network }) => {\nconst buffers = { stdout: \"\" , stderr: \"\" };\n\ntry {\nconst sandbox = await getSandbox ( network );\nconst result = await sandbox . commands . run ( command , {\nonStdout : ( data : string ) => {\nbuffers . stdout += data ;\n},\nonStderr : ( data : string ) => {\nbuffers . stderr += data ;\n},\n});\nreturn result . stdout ;\n} catch ( e ) {\nconsole . error (\n`Command failed: ${ e } \\n stdout: ${ buffers . stdout } \\n stderr: ${ buffers . stderr } `\n);\nreturn `Command failed: ${ e } \\n stdout: ${ buffers . stdout } \\n stderr: ${ buffers . stderr } ` ;\n}\n},\n}),\n// create or update file\ncreateTool ({\nname: \"createOrUpdateFiles\" ,\ndescription: \"Create or update files in the sandbox\" ,\nparameters: z . object ({\nfiles: z . array (\nz . object ({\npath: z . string (),\ncontent: z . string (),\n})\n),\n}),\nhandler : async ({ files }, { network }) => {\ntry {\nconst sandbox = await getSandbox ( network );\nfor ( const file of files ) {\nawait sandbox . files . write ( file . path , file . content );\n}\nreturn `Files created or updated: ${ files\n. map (( f ) => f . path )\n. join ( \", \" ) } ` ;\n} catch ( e ) {\nreturn \"Error: \" + e ;\n}\n},\n}),\n]\n});\n\nconst network = createNetwork ({\nname: \"Coding Network\" ,\nagents: [ agent ],\ndefaultModel: anthropic ({\nmodel: \"claude-3-5-sonnet-20240620\" ,\nmaxTokens: 1000 ,\n})\n});\n```\nYou will find the complete example in the\n[E2B Coding Agent example](https://github.com/inngest/agent-kit/tree/main/examples/e2b-coding-agent#readme)\n.\n**Designing useful tools**\nAs covered in Anthropic's\n[\"Tips for Building AI Agents\"](https://www.youtube.com/watch?v=LP5OCa20Zpg)\n,\nthe best Agents Tools are the ones that you will need to accomplish the task by yourself. Do not map tools directly to the underlying API, but rather design tools that are useful for the Agent to accomplish the task.",
      "char_count": 3875,
      "token_count": 1038,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 1038,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Using AgentKit with E2B\nReplicate Cursor's Agent mode\n[This examples shows how to use E2B sandboxes to build a coding agent that can write code and run commands to generate complete project, complete refactoring and fix bugs. Agents Tools Network Integrations Code-based Router](https://github.com/inngest/agent-kit/tree/main/examples/e2b-coding-agent#readme)",
      "char_count": 359,
      "token_count": 83,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 83,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Using AgentKit with E2B\nAI-powered CSV contacts importer\n[Let's reinvent the CSV upload UX with an AgentKit network leveraging E2B sandboxes. Agents Tools Network Integrations Code-based Router](https://github.com/inngest/agent-kit/tree/main/examples/e2b-csv-contacts-importer#readme)\n[Code Assistant v3: Autonomous Bug Solver Previous](\\guided-tour\\ai-agents)\n[Using AgentKit with Browserbase Next](\\integrations\\browserbase)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 499,
      "token_count": 120,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\integrations_e2b.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\integrations_e2b.md",
        "file_name": "integrations_e2b.md",
        "file_size": 7090,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "6c27b60247dca4e0b0543dc5aff7e2f99a4f221e6ec76d31c7ede4bedfb68c7f",
        "author": null,
        "created_at": "2025-10-12T23:51:51.633565",
        "modified_at": "2025-10-12T23:51:51.634193",
        "page_count": null,
        "word_count": 950,
        "extracted_at": "2025-10-13T19:59:47.131245",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 10,
        "token_count": 120,
        "has_context": true
      }
    }
  ]
}