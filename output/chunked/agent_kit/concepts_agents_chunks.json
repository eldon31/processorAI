{
  "source": "Docs\\agent_kit\\concepts_agents.md",
  "title": "##### Get Started",
  "num_chunks": 16,
  "total_chars": 11182,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [Creating an Agent](#creating-an-agent)\n- [Adding tools](#adding-tools)\n- [How Agents work](#how-agents-work)\n- [Lifecycle hooks](#lifecycle-hooks)\n- [System prompts](#system-prompts)\n- [Dynamic system prompts](#dynamic-system-prompts)\n- [Static system prompts](#static-system-prompts)\n- [Using Agents in Networks](#using-agents-in-networks)\n- [Agent descriptions](#agent-descriptions)\nConcepts",
      "char_count": 590,
      "token_count": 163,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 163,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Agents\nCreate agents to accomplish specific tasks with tools inside a network.\nAgents are the core of AgentKit. Agents are\n*stateless*\nentities with a defined goal and an optional set of\n[Tools](\\concepts\\tools)\nthat can be used to accomplish a goal.\nAgents can be called individually or, more powerfully, composed into a\n[Network](\\concepts\\networks)\nwith multiple agents that can work together with persisted\n[State](\\concepts\\state)\n.\nAt the most basic level, an Agent is a wrapper around a specific provider's\n[model](\\concepts\\models)\n, OpenAI gpt-4 for example, and a set of of\n[tools](\\concepts\\tools)\n.",
      "char_count": 610,
      "token_count": 153,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 153,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Agents\nCreating an Agent\nTo create a simple Agent, all that you need is a\n```\nname\n```\n,\n```\nsystem\n```\nprompt and a\n```\nmodel\n```\n. All configuration options are detailed in the\n```\ncreateAgent\n```\n[reference](\\reference\\agent)\n.\nHere is a simple agent created using the\n```\ncreateAgent\n```\nfunction:\nCopy Ask AI\n```\nimport { createAgent , openai } from '@inngest/agent-kit' ;\n\nconst codeWriterAgent = createAgent ({\nname: 'Code writer' ,\nsystem:\n'You are an expert TypeScript programmer.  Given a set of asks, you think step-by-step to plan clean, ' +\n'idiomatic TypeScript code, with comments and tests as necessary.' +\n'Do not respond with anything else other than the following XML tags:' +\n'- If you would like to write code, add all code within the following tags (replace $filename and $contents appropriately):' +\n\"  <file name='$filename.ts'>$contents</file>\" ,\nmodel: openai ( 'gpt-4o-mini' ),\n});\n```\nWhile\n```\nsystem\n```\nprompts can be static strings, they are more powerful when they\nare\n[dynamic system prompts](#dynamic-system-prompts)\ndefined as callbacks\nthat can add additional context at runtime.\nAny Agent can be called using\n```\nrun()\n```\nwith a user prompt. This performs an inference call to the model with the system prompt as the first message and the input as the user message.\nCopy Ask AI\n```\nconst { output } = codeWriterAgent . run (\n'Write a typescript function that removes unnecessary whitespace' ,\n);\nconsole . log ( output );\n// [{ role: 'assistant', content: 'function removeUnecessaryWhitespace(...' }]\n```\nWhen including your Agent in a Network, a\n```\ndescription\n```\nis required. Learn\nmore about\n[using Agents in Networks here](#using-agents-in-networks)\n.",
      "char_count": 1696,
      "token_count": 424,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 424,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Agents\nAdding tools\n[Tools](\\concepts\\tools)\nare functions that extend the capabilities of an Agent. Along with the prompt (see\n```\nrun()\n```\n), Tools are included in calls to the language model through features like OpenAI's \"\n[function calling](https://platform.openai.com/docs/guides/function-calling)\n\" or Claude's \"\n[tool use](https://docs.anthropic.com/en/docs/build-with-claude/tool-use)\n.\"\nTools are defined using the\n```\ncreateTool\n```\nfunction and are passed to agents via the\n```\ntools\n```\nparameter:\nCopy Ask AI\n```\nimport { createAgent , createTool , openai } from '@inngest/agent-kit' ;\n\nconst listChargesTool = createTool ({\nname: 'list_charges' ,\ndescription:\n\"Returns all of a user's charges. Call this whenever you need to find one or more charges between a date range.\" ,\nparameters: z . array (\nz . object ({\nuserId: z . string (),\n}),\n),\nhandler : async ( output , { network , agent , step }) => {\n// output is strongly typed to match the parameter type.\n},\n});\n\nconst supportAgent = createAgent ({\nname: 'Customer support specialist' ,\nsystem: 'You are an customer support specialist...' ,\nmodel: openai ( 'gpt-3.5-turbo' ),\ntools: [ listChargesTool ],\n});\n```\nWhen\n```\nrun()\n```\nis called, any step that the model decides to call is immediately executed before returning the output. Read the \"\n[How agents work](#how-agents-work)\n\" section for additional information.\nLearn more about Tools in\n[this guide](\\concepts\\tools)\n.",
      "char_count": 1448,
      "token_count": 364,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 364,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Agents\nHow Agents work\nAgents themselves are relatively simple. When you call\n```\nrun()\n```\n, there are several steps that happen:\n1\nPreparing the prompts\nThe initial messages are created using the\n```\nsystem\n```\nprompt, the\n```\nrun()\n```\nuser\nprompt, and\n[Network State](\\concepts\\network-state)\n, if the agent is part\nof a\n[Network](\\concepts\\networks)\n. For added control, you can dynamically modify the Agent's prompts before the next step using the\n```\nonStart\n```\n[lifecycle hook](#lifecycle-hooks)\n.\n2\nInference call\nAn inference call is made to the provided\n[```\nmodel\n```](\\concepts\\models)\nusing Inngest's\n[```\nstep.ai\n```](https://www.inngest.com/docs/features/inngest-functions/steps-workflows/step-ai-orchestration#step-tools-step-ai)\n.\n```\nstep.ai\n```\nautomatically retries on failure and caches the result for durability. The result is parsed into an\n```\nInferenceResult\n```\nobject that contains all messages, tool calls and the raw API response from the model. To modify the result prior to calling tools, use the optional\n```\nonResponse\n```\n[lifecycle hook](#lifecycle-hooks)\n.\n3\nTool calling\nIf the model decides to call one of the available\n```\ntools\n```\n, the Tool is automatically called. After tool calling is complete, the\n```\nonFinish\n```\n[lifecycle hook](#lifecycle-hooks)\nis called with the updated\n```\nInferenceResult\n```\n. This enables you to modify or inspect the output of the called tools.\n4\nComplete\nThe result is returned to the caller.",
      "char_count": 1469,
      "token_count": 383,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 383,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Agents\nHow Agents work\nLifecycle hooks\nAgent lifecycle hooks can be used to intercept and modify how an Agent works enabling dynamic control over the system:\nCopy Ask AI\n```\nimport { createAgent , openai } from '@inngest/agent-kit' ;\n\nconst agent = createAgent ({\nname: 'Code writer' ,\ndescription: 'An expert TypeScript programmer which can write and debug code.' ,\nsystem: '...' ,\nmodel: openai ( 'gpt-3.5-turbo' ),\nlifecycle: {\nonStart : async ({ prompt , network : { state }, history }) => {\n// Dynamically alter prompts using Network state and history.\n\nreturn { prompt , history }\n},\n},\n});\n```\nAs mentioned in the \"\n[How Agents work](#how-agents-work)\n\" section, there are a few lifecycle hooks that can be defined on the Agent's\n```\nlifecycle\n```\noptions object.\n- Dynamically alter prompts using Network [State](\\concepts\\state) or the Network's history.\n- Parse output of model after an inference call.\nLearn more about lifecycle hooks and how to define them in\n[this reference](\\reference\\create-agent#lifecycle)\n.",
      "char_count": 1025,
      "token_count": 247,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 247,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Agents\nSystem prompts\nAn Agent's system prompt can be defined as a string or an async callback. When Agents are part of a\n[Network](\\concepts\\networks)\n, the Network\n[State](\\concepts\\state)\nis passed as an argument to create dynamic prompts, or instructions, based on history or the outputs of other Agents.",
      "char_count": 308,
      "token_count": 74,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 74,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Agents\nSystem prompts\nDynamic system prompts\nDynamic system prompts are very useful in agentic workflows, when multiple models are called in a loop, prompts can be adjusted based on network state from other call outputs.\nCopy Ask AI\n```\nconst agent = createAgent ({\nname: 'Code writer' ,\ndescription:\n'An expert TypeScript programmer which can write and debug code.' ,\n\n// The system prompt can be dynamically created at runtime using Network state:\nsystem : async ({ network }) => {\n// A default base prompt to build from:\nconst basePrompt =\n'You are an expert TypeScript programmer. ' +\n'Given a set of asks, think step-by-step to plan clean, ' +\n'idiomatic TypeScript code, with comments and tests as necessary.' ;\n\n// Inspect the Network state, checking for existing code saved as files:\nconst files : Record < string , string > | undefined = network . state . data . files ;\nif ( ! files ) {\nreturn basePrompt ;\n}\n\n// Add the files from Network state as additional context automatically\nlet additionalContext = 'The following code already exists:' ;\nfor ( const [ name , content ] of Object . entries ( files )) {\nadditionalContext += `<file name=' ${ name } '> ${ content } </file>` ;\n}\nreturn ` ${ basePrompt } ${ additionalContext } ` ;\n},\n});\n```",
      "char_count": 1255,
      "token_count": 272,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 272,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Agents\nSystem prompts\nStatic system prompts\nAgents may also just have static system prompts which are more useful for simpler use cases.\nCopy Ask AI\n```\nconst codeWriterAgent = createAgent ({\nname: 'Copy editor' ,\nsystem:\n`You are an expert copy editor. Given a draft article, you provide ` +\n`actionable improvements for spelling, grammar, punctuation, and formatting.` ,\nmodel: openai ( 'gpt-3.5-turbo' ),\n});\n```",
      "char_count": 415,
      "token_count": 100,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 100,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "Agents\nUsing Agents in Networks\nAgents are the most powerful when combined into\n[Networks](\\concepts\\networks)\n. Networks include\n[state](\\concepts\\state)\nand\n[routers](\\concepts\\routers)\nto create stateful workflows that can enable Agents to work together to accomplish larger goals.",
      "char_count": 284,
      "token_count": 67,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 67,
        "has_context": true
      }
    },
    {
      "index": 15,
      "text": "Agents\nUsing Agents in Networks\nAgent descriptions\nSimilar to how\n[Tools](\\concepts\\tools)\nhave a\n```\ndescription\n```\nthat enables an LLM to decide when to call it, Agents also have an\n```\ndescription\n```\nparameter. This is\n*required*\nwhen using Agents within Networks. Here is an example of an Agent with a description:\nCopy Ask AI\n```\nconst codeWriterAgent = createAgent ({\nname: 'Code writer' ,\ndescription:\n'An expert TypeScript programmer which can write and debug code. Call this when custom code is required to complete a task.' ,\nsystem: `...` ,\nmodel: openai ( 'gpt-3.5-turbo' ),\n});\n```\n[Local development Previous](\\getting-started\\local-development)\n[Tools Next](\\concepts\\tools)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 764,
      "token_count": 191,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_agents.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_agents.md",
        "file_name": "concepts_agents.md",
        "file_size": 11579,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "188bac9f14c9e3b69c77721544663d664bd32afcae5fc47e33b5e690dceb6429",
        "author": null,
        "created_at": "2025-10-12T23:51:18.236993",
        "modified_at": "2025-10-12T23:51:18.237497",
        "page_count": null,
        "word_count": 1566,
        "extracted_at": "2025-10-13T19:59:20.416822",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 16,
        "token_count": 191,
        "has_context": true
      }
    }
  ]
}