{
  "source": "Docs\\agent_kit\\streaming_overview.md",
  "title": "##### Get Started",
  "num_chunks": 7,
  "total_chars": 5978,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nStreaming",
      "char_count": 190,
      "token_count": 57,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 57,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Overview\nRealtime event streaming with AgentKit + useAgent\nWith a useAgent hook you can seamlessly stream a network of agents, a single agent and durable steps within tools used by your agents. You can think of useAgent as the bridge between durable agents and your user interface.\nInstead of stitching together events, workflow steps and token streams - your UI receives structured events that describe lifecycles, content parts, tool calls and completions. This hook consumes these events and maintains your UI state for a single conversation or many conversations in parallel.\nHere's a simple example of how you would use the hook in your React component:\nCopy Ask AI\n```\nimport { useAgent } from \"@inngest/use-agent\" ;\n\nexport function MyAgentUI () {\nconst { messages , sendMessage , status } = useAgent ();\n\nconst onSubmit = ( e ) => {\ne . preventDefault ();\nconst value = new FormData ( e . currentTarget ). get ( \"input\" );\nsendMessage ( value );\n};\n\nreturn (\n< div >\n< ul >\n{ messages . map (({ id , role , parts }) => (\n< li key = { id } >\n< div > { role } </ div >\n{ parts . map (({ id , type , content }) =>\ntype === \"text\" ? < div key = { id } > { content } </ div > : null\n) }\n</ li >\n)) }\n</ ul >\n\n< form onSubmit = { onSubmit } >\n< input name = \"input\" />\n< button type = \"submit\" disabled = { status !== \"ready\" } >\nSend\n</ button >\n</ form >\n</ div >\n);\n}\n```\nLet's take a closer look at what components, endpoints and other files we will need to wire this all up:\n- **Inngest Client (** **`/api/inngest/client.ts`** **)** : Initializes Inngest with the `realtimeMiddleware` .\n- **Realtime Channel (** **`/api/inngest/realtime.ts`** **)** : Defines a typed realtime channel and topic.\n- **Chat Route:** **`/api/chat/route.ts`** : This is a standard Next.js API route. Its only job is to receive a request from the frontend and send an event to Inngest to trigger a function.\n- **Token Route:** **`/api/realtime/token/route.ts`** : This secure endpoint generates a subscription token that the frontend needs to connect to Inngest realtime.\n- **Inngest Route:** **`/api/inngest/route.ts`** : The standard handler that serves all your Inngest functions.\nOnce you've configured all the foundational endpoints needed for streaming, you'll want to create some agents, define types and integrate this into a UI:\n1\nDefine server-side types\nDefine your server-side state type, import all your tools and pass them into\n```\ncreateToolManifest\n```\nto generate a type that you will use in your UI.\nCopy Ask AI\n```\nimport { createToolManifest , type StateData } from \"@inngest/agent-kit\" ;\nimport { selectEventsTool } from \"./event-matcher\" ;\nimport { generateSqlTool } from \"./query-writer\" ;\n\n// server-side state used by networks, routers and agents\nexport type AgentState = StateData & {\nuserId ?: string ;\neventTypes ?: string [];\nschemas ?: Record < string , unknown >;\nselectedEvents ?: { event_name : string ; reason : string }[];\ncurrentQuery ?: string ;\nsql ?: string ;\n};\n\n// a typed manifest of all available tools\nconst manifest = createToolManifest ([\ngenerateSqlTool ,\nselectEventsTool ,\n] as const );\n\nexport type ToolManifest = typeof manifest ;\n```\n2\nDefine client-side types\nCreate a\n```\nClientState\n```\ntype which will type state that your UI will send to your agent backend. This is a great place to pass along important context about the user or what they're doing in your app.\nCopy Ask AI\n```\nimport {\nuseAgent ,\ntype AgentKitEvent ,\ntype UseAgentsConfig ,\ntype UseAgentsReturn ,\n} from \"@inngest/use-agent\" ;\n\nimport type { ToolManifest } from \"@/app/api/inngest/functions/agents/types\" ;\n\nexport type ClientState = {\nsqlQuery : string ;\neventTypes : string [];\nschemas : Record < string , unknown > | null ;\ncurrentQuery : string ;\n};\n\nexport type AgentConfig = { tools : ToolManifest ; state : ClientState };\n\nexport type AgentEvent = AgentKitEvent < ToolManifest >;\n\nexport function useInsightsAgent (\nconfig : UseAgentsConfig < ToolManifest , ClientState >\n) : UseAgentsReturn < ToolManifest , ClientState > {\nreturn useAgent <{ tools : ToolManifest ; state : ClientState }>( config );\n}\n```\n3\nCreate agents and an Inngest function to run them\n4\nIntegrate a useAgent hook into your UI\nFor a deeper dive into streaming agents, check out our\n[Usage Guide](\\streaming\\usage-guide)\n.\n[Deployment Previous](\\concepts\\deployment)\n[Usage Guide Next](\\streaming\\usage-guide)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 4470,
      "token_count": 1074,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\streaming_overview.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\streaming_overview.md",
        "file_name": "streaming_overview.md",
        "file_size": 6247,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "b25fef5033ea1a96a69b0f0c776305931b353889e361807c477c7a1163fa84e9",
        "author": null,
        "created_at": "2025-10-12T23:52:18.663059",
        "modified_at": "2025-10-12T23:52:18.663652",
        "page_count": null,
        "word_count": 890,
        "extracted_at": "2025-10-13T20:00:03.930594",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 7,
        "token_count": 1074,
        "has_context": true
      }
    }
  ]
}