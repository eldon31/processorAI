{
  "source": "Docs\\agent_kit\\concepts_networks.md",
  "title": "##### Get Started",
  "num_chunks": 14,
  "total_chars": 8361,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [How Networks work](#how-networks-work)\n- [Model configuration](#model-configuration)\n- [Combination of multiple models](#combination-of-multiple-models)\n- [Routing & maximum iterations](#routing-%26-maximum-iterations)\n- [Routing](#routing)\n- [Maximum iterations](#maximum-iterations)\n- [Combining maxIter and defaultRouter](#combining-maxiter-and-defaultrouter)\n- [Providing a default State](#providing-a-default-state)\nConcepts",
      "char_count": 626,
      "token_count": 171,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 171,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "Networks\nCombine one or more agents into a Network.\nNetworks are\n**Systems of**\n[**Agents**](\\concepts\\agents)\n. Use Networks to create powerful AI workflows by combining multiple Agents.\nA network contains three components:\n- The [Agents](\\concepts\\agents) that the network can use to achieve a goal\n- A [State](\\concepts\\state) including past messages and a key value store, shared between Agents and the Router\n- A [Router](\\concepts\\routers) , which chooses whether to stop or select the next agent to run in the loop\nHere's a simple example:\nCopy Ask AI\n```\nimport { createNetwork , openai } from '@inngest/agent-kit' ;\n\n// searchAgent and summaryAgent definitions...\n\n// Create a network with two agents.\nconst network = createNetwork ({\nagents: [ searchAgent , summaryAgent ],\n});\n\n// Run the network with a user prompt\nawait network . run ( 'What happened in the 2024 Super Bowl?' );\n```\nBy calling\n```\nrun()\n```\n, the network runs a core loop to call one or more agents to find a suitable answer.",
      "char_count": 1005,
      "token_count": 246,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 246,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "Networks\nHow Networks work\nNetworks can be thought of as while loops with memory (\n[State](\\concepts\\state)\n) that call Agents and Tools until the Router determines that there is no more work to be done.\n1\nCreate the Network of Agents\nYou create a network with a list of available\n[Agents](\\concepts\\agents)\n.\nEach Agent can use a different\n[model and inference](\\concepts\\models)\n[provider](\\concepts\\models)\n.\n2\nProvide the staring prompt\nYou give the network a user prompt by calling\n```\nrun()\n```\n.\n3\nCore execution loop\nThe network runs its core loop:\n1\nCall the Network router\nThe\n[Router](\\concepts\\routers)\ndecides the first Agent to run with your\ninput.\n2\nRun the Agent\nCall the Agent with your input. This also runs the agent's\n[lifecycles](\\concepts\\agents#lifecycle-hooks)\n, and any\n[Tools](\\concepts\\tools)\nthat the model decides to call.\n3\nStore the result\nStores the result in the network's\n[State](\\concepts\\state)\n. State can\nbe accessed by the Router or other Agent's Tools in future loops.\n4\nCall the the Router again ↩️\nReturn to the top of the loop and calls the Router with the new State.\nThe Router can decide to quit or run another Agent.",
      "char_count": 1162,
      "token_count": 302,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 302,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "Networks\nModel configuration\nA Network must provide a default model which is used for routing between Agents and for Agents that don't have one:\nCopy Ask AI\n```\nimport { createNetwork , openai } from '@inngest/agent-kit' ;\n\n// searchAgent and summaryAgent definitions...\n\nconst network = createNetwork ({\nagents: [ searchAgent , summaryAgent ],\ndefaultModel: openai ({ model: 'gpt-4o' }),\n});\n```\nA Network not defining a\n```\ndefaultModel\n```\nand composed of Agents without model will throw an error.",
      "char_count": 500,
      "token_count": 119,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 119,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "Networks\nModel configuration\nCombination of multiple models\nEach Agent can specify it's own model to use so a Network may end up using multiple models. Here is an example of a Network that defaults to use an OpenAI model, but the\n```\nsummaryAgent\n```\nis configured to use an Anthropic model:\nCopy Ask AI\n```\nimport { createNetwork , openai , anthropic } from '@inngest/agent-kit' ;\n\nconst searchAgent = createAgent ({\nname: 'Search' ,\ndescription: 'Search the web for information' ,\n});\n\nconst summaryAgent = createAgent ({\nname: 'Summary' ,\ndescription: 'Summarize the information' ,\nmodel: anthropic ({ model: 'claude-3-5-sonnet' }),\n});\n\n// The searchAgent will use gpt-4o, while the summaryAgent will use claude-3-5-sonnet.\nconst network = createNetwork ({\nagents: [ searchAgent , summaryAgent ],\ndefaultModel: openai ({ model: 'gpt-4o' }),\n});\n```",
      "char_count": 852,
      "token_count": 222,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 222,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "Networks\nRouting & maximum iterations\nRouting\nA Network can specify an optional\n```\ndefaultRouter\n```\nfunction that will be used to determine the next Agent to run.\nCopy Ask AI\n```\nimport { createNetwork } from '@inngest/agent-kit' ;\n\n// classifier and writer Agents definition...\n\nconst network = createNetwork ({\nagents: [ classifier , writer ],\nrouter : ({ lastResult , callCount }) => {\n// retrieve the last message from the output\nconst lastMessage = lastResult ?. output [ lastResult ?. output . length - 1 ];\nconst content = lastMessage ?. type === 'text' ? lastMessage ?. content as string : '' ;\n// First call: use the classifier\nif ( callCount === 0 ) {\nreturn classifier ;\n}\n// Second call: if it's a question, use the writer\nif ( callCount === 1 && content . includes ( 'question' )) {\nreturn writer ;\n}\n// Otherwise, we're done!\nreturn undefined ;\n},\n});\n```\nRefer to the\n[Router](\\concepts\\routers)\ndocumentation for more information about how to create a custom Router.",
      "char_count": 984,
      "token_count": 233,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 233,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "Networks\nRouting & maximum iterations\nMaximum iterations\nA Network can specify an optional\n```\nmaxIter\n```\nsetting to limit the number of iterations.\nCopy Ask AI\n```\nimport { createNetwork } from '@inngest/agent-kit' ;\n\n// searchAgent and summaryAgent definitions...\n\nconst network = createNetwork ({\nagents: [ searchAgent , summaryAgent ],\ndefaultModel: openai ({ model: 'gpt-4o' }),\nmaxIter: 10 ,\n});\n```\nSpecifying a\n```\nmaxIter\n```\noption is useful when using a\n[Default Routing Agent](\\concepts\\routers#default-routing-agent-autonomous-routing)\nor a\n[Hybrid Router](\\concepts\\routers#hybrid-code-and-agent-routers-semi-supervised-routing)\nto avoid infinite loops. A Routing Agent or Hybrid Router rely on LLM calls to make decisions, which means that they can sometimes fail to identify a final condition.",
      "char_count": 810,
      "token_count": 199,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 199,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "Networks\nRouting & maximum iterations\nCombining maxIter and defaultRouter\nYou can combine\n```\nmaxIter\n```\nand\n```\ndefaultRouter\n```\nto create a Network that will stop after a certain number of iterations or when a condition is met.\nHowever, please note that the\n```\nmaxIter\n```\noption can prevent the\n```\ndefaultRouter\n```\nfrom being called (For example, if\n```\nmaxIter\n```\nis set to 1, the\n```\ndefaultRouter\n```\nwill only be called once).",
      "char_count": 439,
      "token_count": 119,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 119,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "Networks\nProviding a default State\nA Network can specify an optional\n```\ndefaultState\n```\nsetting to provide a default\n[State](\\concepts\\state)\n.\nCopy Ask AI\n```\nimport { createNetwork } from '@inngest/agent-kit' ;\n\n// searchAgent and summaryAgent definitions...\n\nconst network = createNetwork ({\nagents: [ searchAgent , summaryAgent ],\ndefaultState: new State ({\nfoo: 'bar' ,\n}),\n});\n```\nProviding a\n```\ndefaultState\n```\ncan be useful to persist the state in database between runs or initialize your network with external data.\n[Tools Previous](\\concepts\\tools)\n[State Next](\\concepts\\state)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 665,
      "token_count": 163,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\concepts_networks.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\concepts_networks.md",
        "file_name": "concepts_networks.md",
        "file_size": 8826,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "42888619ec074f6e3a0e7e757c78ce964c6b6b35d153c50324212cd7c6a1f298",
        "author": null,
        "created_at": "2025-10-12T23:51:27.840267",
        "modified_at": "2025-10-12T23:51:27.840912",
        "page_count": null,
        "word_count": 1150,
        "extracted_at": "2025-10-13T19:59:29.980986",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 14,
        "token_count": 163,
        "has_context": true
      }
    }
  ]
}