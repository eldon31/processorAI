{
  "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
  "title": "##### Get Started",
  "num_chunks": 22,
  "total_chars": 15654,
  "chunks": [
    {
      "index": 0,
      "text": "Get Started\n- [Overview](\\overview)\n- [Quick start](\\getting-started\\quick-start)\n- [Installation](\\getting-started\\installation)\n- [Local development](\\getting-started\\local-development)",
      "char_count": 187,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Concepts\n- [Agents](\\concepts\\agents)\n- [Tools](\\concepts\\tools)\n- [Networks](\\concepts\\networks)\n- [State](\\concepts\\state)\n- [Routers](\\concepts\\routers)\n- [History](\\concepts\\history)\n- [Memory](\\concepts\\memory)\n- [Models](\\concepts\\models)\n- [Deployment](\\concepts\\deployment)",
      "char_count": 281,
      "token_count": 95,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 95,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Streaming\n- [Overview](\\streaming\\overview)\n- [Usage Guide](\\streaming\\usage-guide)\n- [Events](\\streaming\\events)\n- [Transport](\\streaming\\transport)\n- [Provider](\\streaming\\provider)",
      "char_count": 183,
      "token_count": 54,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 54,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Advanced Patterns\n- [Deterministic state routing](\\advanced-patterns\\routing)\n- [MCP as tools](\\advanced-patterns\\mcp)\n- [Human in the Loop](\\advanced-patterns\\human-in-the-loop)\n- [Multi-steps tools](\\advanced-patterns\\multi-steps-tools)\n- [Configuring Retries](\\advanced-patterns\\retries)\n- [Configuring Multi-tenancy](\\advanced-patterns\\multitenancy)\n- [UI Streaming with useAgent](\\advanced-patterns\\legacy-ui-streaming)",
      "char_count": 424,
      "token_count": 117,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 117,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Guided Tour\n- [The three levels of AI apps](\\guided-tour\\overview)\n- [1. Explaining a given code file](\\guided-tour\\ai-workflows)\n- [2. Complex code analysis](\\guided-tour\\agentic-workflows)\n- [3. Autonomous Bug Solver](\\guided-tour\\ai-agents)",
      "char_count": 243,
      "token_count": 75,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 75,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "Integrations\n- [E2B - Sandboxes for AI Agents](\\integrations\\e2b)\n- [Browserbase - AI Browsers](\\integrations\\browserbase)\n- [Smithery - MCP Registry](\\integrations\\smithery)\nclose\nOn this page\n- [How it Works](#how-it-works)\n- [Sequence Diagram](#sequence-diagram)\n- [Usage Guide](#usage-guide)\n- [1. Backend Setup](#1-backend-setup)\n- [Inngest Function](#inngest-function)\n- [API Routes](#api-routes)\n- [2. Frontend Setup](#2-frontend-setup)\n- [API Reference](#api-reference)\n- [State Properties](#state-properties)\n- [Action Methods](#action-methods)\n- [UI Data Models](#ui-data-models)\n- [ConversationMessage](#conversationmessage)\n- [MessagePart](#messagepart)\n- [TextUIPart](#textuipart)\n- [ToolCallUIPart](#toolcalluipart)\n- [AgentStatus](#agentstatus)\nAdvanced Patterns",
      "char_count": 777,
      "token_count": 235,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 235,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "UI Streaming with useAgent\nStream AgentKit events to your UI with the useAgent hook.\nThe\n```\nuseAgent\n```\nhook is a powerful client-side hook for React that manages real-time, multi-threaded conversations with an AgentKit network. It encapsulates the entire lifecycle of agent interactions, including sending messages, receiving streaming events, handling out-of-order event sequences, and managing connection state.\nWhile\n```\nuseChat\n```\nis the recommended high-level hook for building chat interfaces,\n```\nuseAgent\n```\nprovides the low-level building blocks for more customized implementations where you need direct control over the event stream and state management.",
      "char_count": 669,
      "token_count": 133,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 133,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "UI Streaming with useAgent\nuse-agent Example\n[Find the complete source code for a Next.js chat application using](https://github.com/inngest/agent-kit/tree/main/examples/use-agent)\n[```\nuseAgent\n```](https://github.com/inngest/agent-kit/tree/main/examples/use-agent)\n[on GitHub.](https://github.com/inngest/agent-kit/tree/main/examples/use-agent)",
      "char_count": 346,
      "token_count": 85,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 85,
        "has_context": true
      }
    },
    {
      "index": 8,
      "text": "UI Streaming with useAgent\nHow it Works\n```\nuseAgent\n```\nbuilds upon Inngest's Realtime capabilities to create a persistent, unified stream of events for a user. Here's a step-by-step breakdown of the data flow:\n1. **Client Initialization** : The `useAgent` hook is initialized in your React component. It uses the `useInngestSubscription` hook from `@inngest/realtime/hooks` to establish a WebSocket connection.\n2. **Authentication** : To connect, it calls a backend API route (e.g., `/api/realtime/token` ) to get a short-lived subscription token. This token authorizes the client to listen to events on a specific user channel.\n3. **Sending a Message** : The user types a message and the UI calls the `sendMessage` function returned by the hook.\n4. **API Request** : `sendMessage` makes a `POST` request to a backend API route (e.g., `/api/chat` ). This request contains the message content, the current `threadId` , and the conversation history.\n5. **Triggering Inngest** : The chat API route receives the request and sends an `agent/chat.requested` event to Inngest using `inngest.send()` .\n6. **Agent Execution** : An Inngest function ( `run-agent-chat.ts` in our example) is triggered by the event. It sets up the AgentKit network, state, and history adapter.\n7. **Running the Network** : The Inngest function calls `network.run(message, { streaming: ... })` .\n8. **Streaming Events** : As the network and its agents execute, they generate streaming events (e.g., `run.started` , `part.created` , `text.delta` ). The `streaming.publish` function inside the Inngest function forwards these events back to the user's realtime channel.\n9. **Realtime Push** : The events are pushed over the WebSocket connection to the client.\n10. **State Update** : `useAgent` receives the raw events, processes them in the correct sequence, handles out-of-order events, and updates its internal state.\n11. **UI Re-render** : The component using the hook re-renders with the new messages, agent status, and other UI parts.",
      "char_count": 2009,
      "token_count": 484,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 484,
        "has_context": true
      }
    },
    {
      "index": 9,
      "text": "UI Streaming with useAgent\nUsage Guide\n1. Backend Setup\nFirst, you need to set up the backend infrastructure to handle chat requests and realtime communication.",
      "char_count": 160,
      "token_count": 32,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 32,
        "has_context": true
      }
    },
    {
      "index": 10,
      "text": "UI Streaming with useAgent\nUsage Guide\n1. Backend Setup\nInngest Function\nThis function is the core of your agent's execution. It listens for chat requests and runs your AgentKit network, streaming events back to the client.\ninngest/functions/run-agent-chat.ts Copy Ask AI\n```\nimport { inngest } from \"../client\" ;\nimport { createCustomerSupportNetwork } from \"../networks/customer-support-network\" ;\nimport { userChannel } from \"../../lib/realtime\" ;\nimport { createState } from \"@inngest/agent-kit\" ;\nimport type { CustomerSupportState } from \"../types/state\" ;\nimport { PostgresHistoryAdapter } from \"../db\" ;\n\nconst historyAdapter = new PostgresHistoryAdapter < CustomerSupportState >({});\n\nexport const runAgentChat = inngest . createFunction (\n{ id: \"run-agent-chat\" },\n{ event: \"agent/chat.requested\" },\nasync ({ event , step , publish }) => {\nawait step . run ( \"initialize-db-tables\" , () =>\nhistoryAdapter . initializeTables ()\n);\n\nconst { threadId , message , userId , history , messageId } = event . data ;\n\nconst network = createCustomerSupportNetwork (\nthreadId ,\ncreateState < CustomerSupportState >(\n{ customerId: userId },\n{ messages: history , threadId }\n),\nhistoryAdapter\n);\n\n// Run the network and stream events back to the client\nconst result = await network . run ( message , {\nstreaming: {\npublish : async ( chunk ) => {\nconst enrichedChunk = {\n... chunk ,\ndata: { ... chunk . data , threadId , userId },\n};\nawait publish ( userChannel ( userId ). agent_stream ( enrichedChunk ));\n},\n},\nmessageId ,\n});\n\nreturn { success: true , threadId , result };\n}\n);\n```",
      "char_count": 1580,
      "token_count": 367,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 367,
        "has_context": true
      }
    },
    {
      "index": 11,
      "text": "UI Streaming with useAgent\nUsage Guide\n1. Backend Setup\nAPI Routes\nYou'll need a few API routes in your Next.js application.\napp/api/chat/route.ts Copy Ask AI\n```\nimport { NextRequest , NextResponse } from \"next/server\" ;\nimport { inngest } from \"@/inngest/client\" ;\nimport { randomUUID } from \"crypto\" ;\n\nexport async function POST ( req : NextRequest ) {\nconst {\nmessage ,\nthreadId : providedThreadId ,\nuserId ,\nhistory ,\nmessageId ,\n} = await req . json ();\nconst threadId = providedThreadId || randomUUID ();\n\nawait inngest . send ({\nname: \"agent/chat.requested\" ,\ndata: { threadId , message , messageId , history , userId },\n});\n\nreturn NextResponse . json ({ success: true , threadId });\n}\n```\napp/api/realtime/token/route.ts Copy Ask AI\n```\nimport { NextRequest , NextResponse } from \"next/server\" ;\nimport { getSubscriptionToken } from \"@inngest/realtime\" ;\nimport { inngest } from \"@/inngest/client\" ;\nimport { userChannel } from \"@/lib/realtime\" ;\n\nexport async function POST ( req : NextRequest ) {\nconst { userId } = await req . json ();\n// TODO: Add authentication/authorization here\nconst token = await getSubscriptionToken ( inngest , {\nchannel: userChannel ( userId ),\ntopics: [ \"agent_stream\" ],\n});\nreturn NextResponse . json ( token );\n}\n```",
      "char_count": 1260,
      "token_count": 313,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 313,
        "has_context": true
      }
    },
    {
      "index": 12,
      "text": "UI Streaming with useAgent\nUsage Guide\n2. Frontend Setup\nNow, let's wire up the\n```\nuseAgent\n```\nhook in a React component.\ncomponents/ChatComponent.tsx Copy Ask AI\n```\n\"use client\" ;\n\nimport { useAgent , type ConversationMessage } from \"@/hooks/use-agent\" ;\n\nconst USER_ID = \"test-user-123\" ;\n\nexport function ChatComponent ({ threadId } : { threadId : string }) {\nconst { messages , status , sendMessage , isConnected , error , clearError } =\nuseAgent ({\nthreadId: threadId ,\nuserId: USER_ID ,\ndebug: true ,\nonError : ( err ) => console . error ( \"Agent error:\" , err ),\n});\n\nconst handleSubmit = ( e : React . FormEvent < HTMLFormElement >) => {\ne . preventDefault ();\nconst formData = new FormData ( e . currentTarget );\nconst message = formData . get ( \"message\" ) as string ;\nif ( message . trim ()) {\nsendMessage ( message );\ne . currentTarget . reset ();\n}\n};\n\nreturn (\n< div >\n< div > Status: { status } </ div >\n< div > Connected: { isConnected ? \"Yes\" : \"No\" } </ div >\n{ error && (\n< div >\nError: { error . message }\n< button onClick = { clearError } > Clear </ button >\n</ div >\n) }\n\n< div className = \"message-list\" >\n{ messages . map (( msg ) => (\n< Message key = { msg . id } message = { msg } />\n)) }\n</ div >\n\n< form onSubmit = { handleSubmit } >\n< input\nname = \"message\"\nplaceholder = \"Ask anything...\"\ndisabled = { status !== \"idle\" }\n/>\n< button type = \"submit\" disabled = { status !== \"idle\" } >\nSend\n</ button >\n</ form >\n</ div >\n);\n}\n\n// A simple component to render a message with all its parts\nfunction Message ({ message } : { message : ConversationMessage }) {\nreturn (\n< div className = { `message ${ message . role } ` } >\n< strong > { message . role } </ strong >\n{ message . parts . map (( part , index ) => {\nswitch ( part . type ) {\ncase \"text\" :\nreturn < p key = { index } > { part . content } </ p > ;\ncase \"tool-call\" :\nreturn (\n< div\nkey = { index }\nclassName = \"tool-call\"\nstyle = { {\nborder: \"1px solid #ccc\" ,\npadding: \"10px\" ,\nmarginTop: \"10px\" ,\nborderRadius: \"5px\" ,\n} }\n>\n< div >\n< strong > Tool Call: </ strong > { part . toolName }\n</ div >\n< pre style = { { whiteSpace: \"pre-wrap\" , wordBreak: \"break-all\" } } >\nStatus: { part . state }\n< br />\nInput: { JSON . stringify ( part . input , null , 2 ) }\n{ part . output && (\n<>\n< br />\nOutput: { JSON . stringify ( part . output , null , 2 ) }\n</>\n) }\n</ pre >\n</ div >\n);\n// TODO: Add cases for other part types like 'data', 'reasoning', etc.\ndefault :\nreturn null ;\n}\n}) }\n</ div >\n);\n}\n```",
      "char_count": 2488,
      "token_count": 688,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 688,
        "has_context": true
      }
    },
    {
      "index": 13,
      "text": "UI Streaming with useAgent\nAPI Reference\nThe\n```\nuseAgent\n```\nhook returns an object with the following properties and methods.",
      "char_count": 127,
      "token_count": 29,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 29,
        "has_context": true
      }
    },
    {
      "index": 14,
      "text": "UI Streaming with useAgent\nAPI Reference\nState Properties\nmessages ConversationMessage[] The array of messages for the\n**current thread**\n. Each message contains an\narray of\n```\nparts\n```\nthat are streamed in real-time.\nstatus AgentStatus The current status of the agent for the active thread. It can be one of:\n```\n\"idle\"\n```\n,\n```\n\"thinking\"\n```\n,\n```\n\"calling-tool\"\n```\n,\n```\n\"responding\"\n```\n, or\n```\n\"error\"\n```\n.\nthread.\n```\nundefined\n```\nif there is no error.\nthreads Record<string, ThreadState> An object containing the full state for all active threads, indexed by\n```\nthreadId\n```\n. This allows you to manage multiple conversations in the\nbackground.\ncurrentThreadId string The ID of the currently active/displayed thread.\nisConnected boolean\n```\ntrue\n```\nif the client is currently connected to the Inngest Realtime server.\nget a subscription token).",
      "char_count": 861,
      "token_count": 211,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 211,
        "has_context": true
      }
    },
    {
      "index": 15,
      "text": "UI Streaming with useAgent\nAPI Reference\nAction Methods\nsendMessage (message: string) => Promise<void> Sends a message to the\n**current thread**\n. It handles optimistic UI updates\nand formats the history for the backend.\nsendMessageToThread (threadId: string, message: string) => Promise<void> Sends a message to a\n**specific thread**\n, which can be different from the\ncurrently active one.\nsetCurrentThread (threadId: string) => void Switches the active thread. This updates which thread's state is exposed via\nthe top-level\n```\nmessages\n```\n,\n```\nstatus\n```\n, and\n```\nerror\n```\nproperties.\ncreateThread (threadId: string) => void Creates a new, empty thread in the local state.\nclearMessages () => void Clears all messages from the\n**current thread's**\nlocal state.\nreplaceMessages (messages: ConversationMessage[]) => void Replaces all messages in the\n**current thread's**\nlocal state. Useful for\nloading historical messages.\nclearError () => void Clears the error state for the\n**current thread**\n.\nclearConnectionError () => void Clears any connection-level error.",
      "char_count": 1069,
      "token_count": 241,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 241,
        "has_context": true
      }
    },
    {
      "index": 16,
      "text": "UI Streaming with useAgent\nUI Data Models\nThe\n```\nuseAgent\n```\nhook exposes a set of rich UI data models to make building chat interfaces easier. These types define the structure of messages and their constituent parts.",
      "char_count": 219,
      "token_count": 47,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 47,
        "has_context": true
      }
    },
    {
      "index": 17,
      "text": "UI Streaming with useAgent\nUI Data Models\nConversationMessage\nRepresents a complete message in the conversation, containing one or more parts.\nCopy Ask AI\n```\nexport interface ConversationMessage {\n/** Unique identifier for this message */\nid : string ;\n/** Whether this message is from the user or the assistant */\nrole : \"user\" | \"assistant\" ;\n/** Array of message parts that make up the complete message */\nparts : MessagePart [];\n/** ID of the agent that created this message (for assistant messages) */\nagentId ?: string ;\n/** When this message was created */\ntimestamp : Date ;\n/** The status of the message, particularly for optimistic user messages */\nstatus ?: \"sending\" | \"sent\" | \"failed\" ;\n}\n```",
      "char_count": 707,
      "token_count": 149,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 149,
        "has_context": true
      }
    },
    {
      "index": 18,
      "text": "UI Streaming with useAgent\nUI Data Models\nMessagePart\nA union type representing all possible parts of a message.\nCopy Ask AI\n```\nexport type MessagePart =\n| TextUIPart\n| ToolCallUIPart\n| DataUIPart\n| FileUIPart\n| SourceUIPart\n| ReasoningUIPart\n| StatusUIPart\n| ErrorUIPart\n| HitlUIPart ;\n```",
      "char_count": 291,
      "token_count": 84,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 84,
        "has_context": true
      }
    },
    {
      "index": 19,
      "text": "UI Streaming with useAgent\nUI Data Models\nTextUIPart\nRepresents a text message part that can be streamed character by character.\nCopy Ask AI\n```\nexport interface TextUIPart {\ntype : \"text\" ;\n/** Unique identifier for this text part */\nid : string ;\n/** The text content, updated incrementally during streaming */\ncontent : string ;\n/** Whether the text is still being streamed or is complete */\nstatus : \"streaming\" | \"complete\" ;\n}\n```",
      "char_count": 436,
      "token_count": 98,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 98,
        "has_context": true
      }
    },
    {
      "index": 20,
      "text": "UI Streaming with useAgent\nUI Data Models\nToolCallUIPart\nRepresents a tool call that the agent is making, with streaming input and output.\nCopy Ask AI\n```\nexport interface ToolCallUIPart {\ntype : \"tool-call\" ;\n/** Unique identifier for this tool call */\ntoolCallId : string ;\n/** Name of the tool being called */\ntoolName : string ;\n/** Current state of the tool call execution */\nstate :\n| \"input-streaming\"\n| \"input-available\"\n| \"awaiting-approval\"\n| \"executing\"\n| \"output-available\" ;\n/** Tool input parameters, streamed incrementally */\ninput : any ;\n/** Tool output result, if available */\noutput ?: any ;\n/** Error information if the tool call failed */\nerror ?: any ;\n}\n```\n*(For brevity, other part types like*\n*```\nDataUIPart\n```*\n*,*\n*```\nReasoningUIPart\n```*\n*, etc., are omitted here but follow a similar structure. You can find their full definitions in the*\n*```\nuse-agent.ts\n```*\n*file in the example.)*",
      "char_count": 918,
      "token_count": 229,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 229,
        "has_context": true
      }
    },
    {
      "index": 21,
      "text": "UI Streaming with useAgent\nUI Data Models\nAgentStatus\nRepresents the current activity status of the agent.\nCopy Ask AI\n```\nexport type AgentStatus =\n| \"idle\"\n| \"thinking\"\n| \"calling-tool\"\n| \"responding\"\n| \"error\" ;\n```\n[Configuring Multi-tenancy Previous](\\advanced-patterns\\multitenancy)\n[The three levels of AI apps Next](\\guided-tour\\overview)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 419,
      "token_count": 107,
      "metadata": {
        "title": "##### Get Started",
        "source": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\advanced-patterns_legacy-ui-streaming.md",
        "file_name": "advanced-patterns_legacy-ui-streaming.md",
        "file_size": 16731,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "50cc87ca88c42a02f0ea69149f3cf0a6ec2adc0eabccdcf89e63845054b5a4f2",
        "author": null,
        "created_at": "2025-10-12T23:51:05.626818",
        "modified_at": "2025-10-12T23:51:05.627323",
        "page_count": null,
        "word_count": 2393,
        "extracted_at": "2025-10-13T19:59:12.746054",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 22,
        "token_count": 107,
        "has_context": true
      }
    }
  ]
}