{
  "source": "Docs\\agent_kit\\reference_create-agent.md",
  "title": "##### Introduction",
  "num_chunks": 8,
  "total_chars": 3200,
  "chunks": [
    {
      "index": 0,
      "text": "Introduction\n- [Introduction](\\reference\\introduction)",
      "char_count": 54,
      "token_count": 12,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 12,
        "has_context": true
      }
    },
    {
      "index": 1,
      "text": "Agent\n- [createAgent](\\reference\\create-agent)\n- [createTool](\\reference\\create-tool)",
      "char_count": 85,
      "token_count": 24,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 24,
        "has_context": true
      }
    },
    {
      "index": 2,
      "text": "Network\n- [createNetwork](\\reference\\create-network)\n- [createState](\\reference\\state)\n- [Router](\\reference\\network-router)",
      "char_count": 124,
      "token_count": 33,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 33,
        "has_context": true
      }
    },
    {
      "index": 3,
      "text": "Models\n- [OpenAI Model](\\reference\\model-openai)\n- [Anthropic Model](\\reference\\model-anthropic)\n- [Gemini Model](\\reference\\model-gemini)\n- [Grok Model](\\reference\\model-grok)",
      "char_count": 176,
      "token_count": 52,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 52,
        "has_context": true
      }
    },
    {
      "index": 4,
      "text": "Streaming\n- [useAgent](\\reference\\use-agent)\nclose\nOn this page\n- [Options](#options)\n- [lifecycle](#lifecycle)\nAgent",
      "char_count": 117,
      "token_count": 36,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 36,
        "has_context": true
      }
    },
    {
      "index": 5,
      "text": "createAgent\nDefine an agent\nAgents are defined using the\n```\ncreateAgent\n```\nfunction.\nCopy Ask AI\n```\nimport { createAgent , agenticOpenai as openai } from '@inngest/agent-kit' ;\n\nconst agent = createAgent ({\nname: 'Code writer' ,\nsystem:\n'You are an expert TypeScript programmer.  Given a set of asks, you think step-by-step to plan clean, ' +\n'idiomatic TypeScript code, with comments and tests as necessary.' +\n'Do not respond with anything else other than the following XML tags:' +\n'- If you would like to write code, add all code within the following tags (replace $filename and $contents appropriately):' +\n\"  <file name='$filename.ts'>$contents</file>\" ,\nmodel: openai ( 'gpt-4o-mini' ),\n});\n```",
      "char_count": 704,
      "token_count": 178,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 178,
        "has_context": true
      }
    },
    {
      "index": 6,
      "text": "createAgent\nOptions\nname string required The name of the agent. Displayed in tracing.\ndescription string Optional description for the agent, used for LLM-based routing to help the\nnetwork pick which agent to run next.\nmodel string required The provider model to use for inference calls.\nbased off of state and memory.\ntools array<TypedTool> Defined tools that an agent can call. Tools are created via\n[```\ncreateTool\n```](\\reference\\createTool)\n.\nlifecycle Lifecycle Lifecycle hooks that can intercept and modify inputs and outputs throughout the stages of execution of\n```\nrun()\n```\n. Learn about each\n[lifecycle](#lifecycle)\nhook that can be defined below.",
      "char_count": 658,
      "token_count": 143,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 143,
        "has_context": true
      }
    },
    {
      "index": 7,
      "text": "createAgent\nOptions\nlifecycle\nonStart function\nCalled after the initial prompt messages are created and before the inference call request. The\n```\nonStart\n```\nhook can be used to:\n- Modify input prompt for the Agent.\n- Prevent the agent from being called by throwing an error.\nonResponse function\nCalled after the inference call request is completed and before tool calling. The\n```\nonResponse\n```\nhook can be used to:\n- Inspect the tools that the model decided to call.\n- Modify the response prior to tool calling.\nonFinish function\nCalled after tool calling has completed. The\n```\nonFinish\n```\nhook can be used to:\n- Modify the `InferenceResult` including the outputs prior to the result being added to [Network state](\\concepts\\network-state) .\nonStart onResponse Copy Ask AI\n```\nconst agent = createAgent ({\nname: 'Code writer' ,\nlifecycles: {\nonStart : ({\nagent ,\nnetwork ,\ninput ,\nsystem , // The system prompt for the agent\nhistory , // An array of messages\n}) => {\n// Return the system prompt (the first message), and any history added to the\n// model's conversation.\nreturn { system , history };\n},\n},\n});\n```\n[Introduction Previous](\\reference\\introduction)\n[createTool Next](\\reference\\create-tool)\n⌘ I\nAssistant Responses are generated using AI and may contain mistakes.",
      "char_count": 1282,
      "token_count": 298,
      "metadata": {
        "title": "##### Introduction",
        "source": "Docs\\agent_kit\\reference_create-agent.md",
        "chunk_method": "hybrid",
        "file_path": "Docs\\agent_kit\\reference_create-agent.md",
        "file_name": "reference_create-agent.md",
        "file_size": 3666,
        "file_format": ".md",
        "mime_type": "text/markdown",
        "sha256_hash": "3e1c7b2c41354ea5d56b0ccc6c603b08c760f2e575732d450d713c30c32b1bb2",
        "author": null,
        "created_at": "2025-10-12T23:51:56.850680",
        "modified_at": "2025-10-12T23:51:56.850680",
        "page_count": null,
        "word_count": 483,
        "extracted_at": "2025-10-13T19:59:49.996497",
        "processing_method": "markdown_docling",
        "custom_metadata": {},
        "total_chunks": 8,
        "token_count": 298,
        "has_context": true
      }
    }
  ]
}